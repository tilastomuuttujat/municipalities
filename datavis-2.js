! function (e, n) {
    "object" == typeof exports && "undefined" != typeof module ? n(exports) : "function" == typeof define && define.amd ? define(["exports"], n) : n(e.dataviz = {})
}(this, function (e) {
    "use strict";
    var r = "http://www.w3.org/1999/xhtml",
        i = {
            svg: "http://www.w3.org/2000/svg",
            xhtml: r,
            xlink: "http://www.w3.org/1999/xlink",
            xml: "http://www.w3.org/XML/1998/namespace",
            xmlns: "http://www.w3.org/2000/xmlns/"
        };

    function o(e) {
        var n = e += "",
            t = n.indexOf(":");
        return 0 <= t && "xmlns" !== (n = e.slice(0, t)) && (e = e.slice(t + 1)), i.hasOwnProperty(n) ? {
            space: i[n],
            local: e
        } : e
    }

    function a(e) {
        var n = o(e);
        return (n.local ? function (e) {
            return function () {
                return this.ownerDocument.createElementNS(e.space, e.local)
            }
        } : function (t) {
            return function () {
                var e = this.ownerDocument,
                    n = this.namespaceURI;
                return n === r && e.documentElement.namespaceURI === r ? e.createElement(t) : e.createElementNS(n, t)
            }
        })(n)
    }

    function n() {}

    function f(e) {
        return null == e ? n : function () {
            return this.querySelector(e)
        }
    }

    function t() {
        return []
    }

    function g(e) {
        return null == e ? t : function () {
            return this.querySelectorAll(e)
        }
    }
    var l = function (e) {
        return function () {
            return this.matches(e)
        }
    };
    if ("undefined" != typeof document) {
        var c = document.documentElement;
        if (!c.matches) {
            var s = c.webkitMatchesSelector || c.msMatchesSelector || c.mozMatchesSelector || c.oMatchesSelector;
            l = function (e) {
                return function () {
                    return s.call(this, e)
                }
            }
        }
    }
    var u = l;

    function p(e) {
        return new Array(e.length)
    }

    function h(e, n) {
        this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = n
    }
    h.prototype = {
        constructor: h,
        appendChild: function (e) {
            return this._parent.insertBefore(e, this._next)
        },
        insertBefore: function (e, n) {
            return this._parent.insertBefore(e, n)
        },
        querySelector: function (e) {
            return this._parent.querySelector(e)
        },
        querySelectorAll: function (e) {
            return this._parent.querySelectorAll(e)
        }
    };
    var y = "$";

    function w(e, n, t, r, i, o) {
        for (var a, l = 0, c = n.length, s = o.length; l < s; ++l)(a = n[l]) ? (a.__data__ = o[l], r[l] = a) : t[l] = new h(e, o[l]);
        for (; l < c; ++l)(a = n[l]) && (i[l] = a)
    }

    function D(e, n, t, r, i, o, a) {
        var l, c, s, u = {},
            p = n.length,
            d = o.length,
            f = new Array(p);
        for (l = 0; l < p; ++l)(c = n[l]) && (f[l] = s = y + a.call(c, c.__data__, l, n), s in u ? i[l] = c : u[s] = c);
        for (l = 0; l < d; ++l)(c = u[s = y + a.call(e, o[l], l, o)]) ? ((r[l] = c).__data__ = o[l], u[s] = null) : t[l] = new h(e, o[l]);
        for (l = 0; l < p; ++l)(c = n[l]) && u[f[l]] === c && (i[l] = c)
    }

    function d(e, n) {
        return e < n ? -1 : n < e ? 1 : n <= e ? 0 : NaN
    }

    function m(e) {
        return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView
    }

    function b(e, n) {
        return e.style.getPropertyValue(n) || m(e).getComputedStyle(e, null).getPropertyValue(n)
    }

    function v(e) {
        return e.trim().split(/^|\s+/)
    }

    function P(e) {
        return e.classList || new x(e)
    }

    function x(e) {
        this._node = e, this._names = v(e.getAttribute("class") || "")
    }

    function G(e, n) {
        for (var t = P(e), r = -1, i = n.length; ++r < i;) t.add(n[r])
    }

    function C(e, n) {
        for (var t = P(e), r = -1, i = n.length; ++r < i;) t.remove(n[r])
    }

    function S() {
        this.textContent = ""
    }

    function I() {
        this.innerHTML = ""
    }

    function M() {
        this.nextSibling && this.parentNode.appendChild(this)
    }

    function k() {
        this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild)
    }

    function A() {
        return null
    }

    function _() {
        var e = this.parentNode;
        e && e.removeChild(this)
    }

    function O() {
        return this.parentNode.insertBefore(this.cloneNode(!1), this.nextSibling)
    }

    function L() {
        return this.parentNode.insertBefore(this.cloneNode(!0), this.nextSibling)
    }
    x.prototype = {
        add: function (e) {
            this._names.indexOf(e) < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")))
        },
        remove: function (e) {
            var n = this._names.indexOf(e);
            0 <= n && (this._names.splice(n, 1), this._node.setAttribute("class", this._names.join(" ")))
        },
        contains: function (e) {
            return 0 <= this._names.indexOf(e)
        }
    };
    var E = {},
        N = null;
    "undefined" != typeof document && ("onmouseenter" in document.documentElement || (E = {
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }));

    function j(t, e, n) {
        return t = T(t, e, n),
            function (e) {
                var n = e.relatedTarget;
                n && (n === this || 8 & n.compareDocumentPosition(this)) || t.call(this, e)
            }
    }

    function T(t, r, i) {
        return function (e) {
            var n = N;
            N = e;
            try {
                t.call(this, this.__data__, r, i)
            } finally {
                N = n
            }
        }
    }

    function $(o) {
        return function () {
            var e = this.__on;
            if (e) {
                for (var n, t = 0, r = -1, i = e.length; t < i; ++t) n = e[t], o.type && n.type !== o.type || n.name !== o.name ? e[++r] = n : this.removeEventListener(n.type, n.listener, n.capture);
                ++r ? e.length = r : delete this.__on
            }
        }
    }

    function z(c, s, u) {
        var p = E.hasOwnProperty(c.type) ? j : T;
        return function (e, n, t) {
            var r, i = this.__on,
                o = p(s, n, t);
            if (i)
                for (var a = 0, l = i.length; a < l; ++a)
                    if ((r = i[a]).type === c.type && r.name === c.name) return this.removeEventListener(r.type, r.listener, r.capture), this.addEventListener(r.type, r.listener = o, r.capture = u), void(r.value = s);
            this.addEventListener(c.type, o, u), r = {
                type: c.type,
                name: c.name,
                value: s,
                listener: o,
                capture: u
            }, i ? i.push(r) : this.__on = [r]
        }
    }

    function B(e, n, t) {
        var r = m(e),
            i = r.CustomEvent;
        "function" == typeof i ? i = new i(n, t) : (i = r.document.createEvent("Event"), t ? (i.initEvent(n, t.bubbles, t.cancelable), i.detail = t.detail) : i.initEvent(n, !1, !1)), e.dispatchEvent(i)
    }
    var q = [null];

    function F(e, n) {
        this._groups = e, this._parents = n
    }

    function R() {
        return new F([
            [document.documentElement]
        ], q)
    }

    function U(e) {
        return "string" == typeof e ? new F([
            [document.querySelector(e)]
        ], [document.documentElement]) : new F([
            [e]
        ], q)
    }

    function Y() {
        for (var e, n = N; e = n.sourceEvent;) n = e;
        return n
    }

    function H(e, n) {
        var t = e.ownerSVGElement || e;
        if (t.createSVGPoint) {
            var r = t.createSVGPoint();
            return r.x = n.clientX, r.y = n.clientY, [(r = r.matrixTransform(e.getScreenCTM().inverse())).x, r.y]
        }
        var i = e.getBoundingClientRect();
        return [n.clientX - i.left - e.clientLeft, n.clientY - i.top - e.clientTop]
    }

    function V(e) {
        var n = Y();
        return n.changedTouches && (n = n.changedTouches[0]), H(e, n)
    }

    function W(e, n, t) {
        arguments.length < 3 && (t = n, n = Y().changedTouches);
        for (var r, i = 0, o = n ? n.length : 0; i < o; ++i)
            if ((r = n[i]).identifier === t) return H(e, r);
        return null
    }
    F.prototype = R.prototype = {
        constructor: F,
        select: function (e) {
            "function" != typeof e && (e = f(e));
            for (var n = this._groups, t = n.length, r = new Array(t), i = 0; i < t; ++i)
                for (var o, a, l = n[i], c = l.length, s = r[i] = new Array(c), u = 0; u < c; ++u)(o = l[u]) && (a = e.call(o, o.__data__, u, l)) && ("__data__" in o && (a.__data__ = o.__data__), s[u] = a);
            return new F(r, this._parents)
        },
        selectAll: function (e) {
            "function" != typeof e && (e = g(e));
            for (var n = this._groups, t = n.length, r = [], i = [], o = 0; o < t; ++o)
                for (var a, l = n[o], c = l.length, s = 0; s < c; ++s)(a = l[s]) && (r.push(e.call(a, a.__data__, s, l)), i.push(a));
            return new F(r, i)
        },
        filter: function (e) {
            "function" != typeof e && (e = u(e));
            for (var n = this._groups, t = n.length, r = new Array(t), i = 0; i < t; ++i)
                for (var o, a = n[i], l = a.length, c = r[i] = [], s = 0; s < l; ++s)(o = a[s]) && e.call(o, o.__data__, s, a) && c.push(o);
            return new F(r, this._parents)
        },
        data: function (e, n) {
            if (!e) return h = new Array(this.size()), u = -1, this.each(function (e) {
                h[++u] = e
            }), h;
            var t, r = n ? D : w,
                i = this._parents,
                o = this._groups;
            "function" != typeof e && (t = e, e = function () {
                return t
            });
            for (var a = o.length, l = new Array(a), c = new Array(a), s = new Array(a), u = 0; u < a; ++u) {
                var p = i[u],
                    d = o[u],
                    f = d.length,
                    h = e.call(p, p && p.__data__, u, i),
                    y = h.length,
                    m = c[u] = new Array(y),
                    g = l[u] = new Array(y);
                r(p, d, m, g, s[u] = new Array(f), h, n);
                for (var v, P, x = 0, b = 0; x < y; ++x)
                    if (v = m[x]) {
                        for (b <= x && (b = x + 1); !(P = g[b]) && ++b < y;);
                        v._next = P || null
                    }
            }
            return (l = new F(l, i))._enter = c, l._exit = s, l
        },
        enter: function () {
            return new F(this._enter || this._groups.map(p), this._parents)
        },
        exit: function () {
            return new F(this._exit || this._groups.map(p), this._parents)
        },
        merge: function (e) {
            for (var n = this._groups, t = e._groups, r = n.length, i = t.length, o = Math.min(r, i), a = new Array(r), l = 0; l < o; ++l)
                for (var c, s = n[l], u = t[l], p = s.length, d = a[l] = new Array(p), f = 0; f < p; ++f)(c = s[f] || u[f]) && (d[f] = c);
            for (; l < r; ++l) a[l] = n[l];
            return new F(a, this._parents)
        },
        order: function () {
            for (var e = this._groups, n = -1, t = e.length; ++n < t;)
                for (var r, i = e[n], o = i.length - 1, a = i[o]; 0 <= --o;)(r = i[o]) && (a && a !== r.nextSibling && a.parentNode.insertBefore(r, a), a = r);
            return this
        },
        sort: function (t) {
            function e(e, n) {
                return e && n ? t(e.__data__, n.__data__) : !e - !n
            }
            t || (t = d);
            for (var n = this._groups, r = n.length, i = new Array(r), o = 0; o < r; ++o) {
                for (var a, l = n[o], c = l.length, s = i[o] = new Array(c), u = 0; u < c; ++u)(a = l[u]) && (s[u] = a);
                s.sort(e)
            }
            return new F(i, this._parents).order()
        },
        call: function () {
            var e = arguments[0];
            return arguments[0] = this, e.apply(null, arguments), this
        },
        nodes: function () {
            var e = new Array(this.size()),
                n = -1;
            return this.each(function () {
                e[++n] = this
            }), e
        },
        node: function () {
            for (var e = this._groups, n = 0, t = e.length; n < t; ++n)
                for (var r = e[n], i = 0, o = r.length; i < o; ++i) {
                    var a = r[i];
                    if (a) return a
                }
            return null
        },
        size: function () {
            var e = 0;
            return this.each(function () {
                ++e
            }), e
        },
        empty: function () {
            return !this.node()
        },
        each: function (e) {
            for (var n = this._groups, t = 0, r = n.length; t < r; ++t)
                for (var i, o = n[t], a = 0, l = o.length; a < l; ++a)(i = o[a]) && e.call(i, i.__data__, a, o);
            return this
        },
        attr: function (e, n) {
            var t = o(e);
            if (arguments.length < 2) {
                var r = this.node();
                return t.local ? r.getAttributeNS(t.space, t.local) : r.getAttribute(t)
            }
            return this.each((null == n ? t.local ? function (e) {
                return function () {
                    this.removeAttributeNS(e.space, e.local)
                }
            } : function (e) {
                return function () {
                    this.removeAttribute(e)
                }
            } : "function" == typeof n ? t.local ? function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.removeAttributeNS(n.space, n.local) : this.setAttributeNS(n.space, n.local, e)
                }
            } : function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.removeAttribute(n) : this.setAttribute(n, e)
                }
            } : t.local ? function (e, n) {
                return function () {
                    this.setAttributeNS(e.space, e.local, n)
                }
            } : function (e, n) {
                return function () {
                    this.setAttribute(e, n)
                }
            })(t, n))
        },
        style: function (e, n, t) {
            return 1 < arguments.length ? this.each((null == n ? function (e) {
                return function () {
                    this.style.removeProperty(e)
                }
            } : "function" == typeof n ? function (n, t, r) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.style.removeProperty(n) : this.style.setProperty(n, e, r)
                }
            } : function (e, n, t) {
                return function () {
                    this.style.setProperty(e, n, t)
                }
            })(e, n, null == t ? "" : t)) : b(this.node(), e)
        },
        property: function (e, n) {
            return 1 < arguments.length ? this.each((null == n ? function (e) {
                return function () {
                    delete this[e]
                }
            } : "function" == typeof n ? function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? delete this[n] : this[n] = e
                }
            } : function (e, n) {
                return function () {
                    this[e] = n
                }
            })(e, n)) : this.node()[e]
        },
        classed: function (e, n) {
            var t = v(e + "");
            if (arguments.length < 2) {
                for (var r = P(this.node()), i = -1, o = t.length; ++i < o;)
                    if (!r.contains(t[i])) return !1;
                return !0
            }
            return this.each(("function" == typeof n ? function (e, n) {
                return function () {
                    (n.apply(this, arguments) ? G : C)(this, e)
                }
            } : n ? function (e) {
                return function () {
                    G(this, e)
                }
            } : function (e) {
                return function () {
                    C(this, e)
                }
            })(t, n))
        },
        text: function (e) {
            return arguments.length ? this.each(null == e ? S : ("function" == typeof e ? function (n) {
                return function () {
                    var e = n.apply(this, arguments);
                    this.textContent = null == e ? "" : e
                }
            } : function (e) {
                return function () {
                    this.textContent = e
                }
            })(e)) : this.node().textContent
        },
        html: function (e) {
            return arguments.length ? this.each(null == e ? I : ("function" == typeof e ? function (n) {
                return function () {
                    var e = n.apply(this, arguments);
                    this.innerHTML = null == e ? "" : e
                }
            } : function (e) {
                return function () {
                    this.innerHTML = e
                }
            })(e)) : this.node().innerHTML
        },
        raise: function () {
            return this.each(M)
        },
        lower: function () {
            return this.each(k)
        },
        append: function (e) {
            var n = "function" == typeof e ? e : a(e);
            return this.select(function () {
                return this.appendChild(n.apply(this, arguments))
            })
        },
        insert: function (e, n) {
            var t = "function" == typeof e ? e : a(e),
                r = null == n ? A : "function" == typeof n ? n : f(n);
            return this.select(function () {
                return this.insertBefore(t.apply(this, arguments), r.apply(this, arguments) || null)
            })
        },
        remove: function () {
            return this.each(_)
        },
        clone: function (e) {
            return this.select(e ? L : O)
        },
        datum: function (e) {
            return arguments.length ? this.property("__data__", e) : this.node().__data__
        },
        on: function (e, n, t) {
            var r, i, o = (e + "").trim().split(/^|\s+/).map(function (e) {
                    var n = "",
                        t = e.indexOf(".");
                    return 0 <= t && (n = e.slice(t + 1), e = e.slice(0, t)), {
                        type: e,
                        name: n
                    }
                }),
                a = o.length;
            if (!(arguments.length < 2)) {
                for (l = n ? z : $, null == t && (t = !1), r = 0; r < a; ++r) this.each(l(o[r], n, t));
                return this
            }
            var l = this.node().__on;
            if (l)
                for (var c, s = 0, u = l.length; s < u; ++s)
                    for (r = 0, c = l[s]; r < a; ++r)
                        if ((i = o[r]).type === c.type && i.name === c.name) return c.value
        },
        dispatch: function (e, n) {
            return this.each(("function" == typeof n ? function (e, n) {
                return function () {
                    return B(this, e, n.apply(this, arguments))
                }
            } : function (e, n) {
                return function () {
                    return B(this, e, n)
                }
            })(e, n))
        }
    };
    var Z, K, X = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        J = 0,
        Q = 0,
        ee = 0,
        ne = 1e3,
        te = 0,
        re = 0,
        ie = 0,
        oe = "object" === ("undefined" == typeof performance ? "undefined" : X(performance)) && performance.now ? performance : Date,
        ae = "object" === ("undefined" == typeof window ? "undefined" : X(window)) && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (e) {
            setTimeout(e, 17)
        };

    function le() {
        return re || (ae(ce), re = oe.now() + ie)
    }

    function ce() {
        re = 0
    }

    function se() {
        this._call = this._time = this._next = null
    }

    function ue(e, n, t) {
        var r = new se;
        return r.restart(e, n, t), r
    }

    function pe() {
        re = (te = oe.now()) + ie, J = Q = 0;
        try {
            ! function () {
                le(), ++J;
                for (var e, n = Z; n;) 0 <= (e = re - n._time) && n._call.call(null, e), n = n._next;
                --J
            }()
        } finally {
            J = 0,
                function () {
                    var e, n, t = Z,
                        r = 1 / 0;
                    for (; t;) t = t._call ? (r > t._time && (r = t._time), (e = t)._next) : (n = t._next, t._next = null, e ? e._next = n : Z = n);
                    K = e, fe(r)
                }(), re = 0
        }
    }

    function de() {
        var e = oe.now(),
            n = e - te;
        ne < n && (ie -= n, te = e)
    }

    function fe(e) {
        J || (Q && (Q = clearTimeout(Q)), 24 < e - re ? (e < 1 / 0 && (Q = setTimeout(pe, e - oe.now() - ie)), ee && (ee = clearInterval(ee))) : (ee || (te = oe.now(), ee = setInterval(de, ne)), J = 1, ae(pe)))
    }

    function he(n, t, e) {
        var r = new se;
        return t = null == t ? 0 : +t, r.restart(function (e) {
            r.stop(), n(e + t)
        }, t, e), r
    }

    function ye(e, n) {
        return e < n ? -1 : n < e ? 1 : n <= e ? 0 : NaN
    }
    se.prototype = ue.prototype = {
        constructor: se,
        restart: function (e, n, t) {
            if ("function" != typeof e) throw new TypeError("callback is not a function");
            t = (null == t ? le() : +t) + (null == n ? 0 : +n), this._next || K === this || (K ? K._next = this : Z = this, K = this), this._call = e, this._time = t, fe()
        },
        stop: function () {
            this._call && (this._call = null, this._time = 1 / 0, fe())
        }
    };
    var me, ge, ve = (1 === (me = ye).length && (ge = me, me = function (e, n) {
        return ye(ge(e), n)
    }), {
        left: function (e, n, t, r) {
            for (null == t && (t = 0), null == r && (r = e.length); t < r;) {
                var i = t + r >>> 1;
                me(e[i], n) < 0 ? t = i + 1 : r = i
            }
            return t
        },
        right: function (e, n, t, r) {
            for (null == t && (t = 0), null == r && (r = e.length); t < r;) {
                var i = t + r >>> 1;
                0 < me(e[i], n) ? r = i : t = i + 1
            }
            return t
        }
    }).right;

    function Pe(e) {
        return null === e ? NaN : +e
    }

    function xe(e, n) {
        var t = function (e, n) {
            var t, r, i = e.length,
                o = 0,
                a = -1,
                l = 0,
                c = 0;
            if (null == n)
                for (; ++a < i;) isNaN(t = Pe(e[a])) || (c += (r = t - l) * (t - (l += r / ++o)));
            else
                for (; ++a < i;) isNaN(t = Pe(n(e[a], a, e))) || (c += (r = t - l) * (t - (l += r / ++o)));
            if (1 < o) return c / (o - 1)
        }(e, n);
        return t ? Math.sqrt(t) : t
    }

    function be(e, n) {
        var t, r, i, o = e.length,
            a = -1;
        if (null == n) {
            for (; ++a < o;)
                if (null != (t = e[a]) && t <= t)
                    for (r = i = t; ++a < o;) null != (t = e[a]) && (t < r && (r = t), i < t && (i = t))
        } else
            for (; ++a < o;)
                if (null != (t = n(e[a], a, e)) && t <= t)
                    for (r = i = t; ++a < o;) null != (t = n(e[a], a, e)) && (t < r && (r = t), i < t && (i = t));
        return [r, i]
    }
    var we = Math.sqrt(50),
        De = Math.sqrt(10),
        Ge = Math.sqrt(2);

    function Ce(e, n, t) {
        var r, i, o, a, l, c, s, u, p = -1;
        if (t = +t, (e = +e) === (n = +n) && 0 < t) return [e];
        if ((r = n < e) && (i = e, e = n, n = i), 0 == (l = t, c = (n - e) / Math.max(0, l), s = Math.floor(Math.log(c) / Math.LN10), u = c / Math.pow(10, s), a = 0 <= s ? (we <= u ? 10 : De <= u ? 5 : Ge <= u ? 2 : 1) * Math.pow(10, s) : -Math.pow(10, -s) / (we <= u ? 10 : De <= u ? 5 : Ge <= u ? 2 : 1)) || !isFinite(a)) return [];
        if (0 < a)
            for (e = Math.ceil(e / a), n = Math.floor(n / a), o = new Array(i = Math.ceil(n - e + 1)); ++p < i;) o[p] = (e + p) * a;
        else
            for (e = Math.floor(e * a), n = Math.ceil(n * a), o = new Array(i = Math.ceil(e - n + 1)); ++p < i;) o[p] = (e - p) / a;
        return r && o.reverse(), o
    }

    function Se(e, n, t) {
        var r = Math.abs(n - e) / Math.max(0, t),
            i = Math.pow(10, Math.floor(Math.log(r) / Math.LN10)),
            o = r / i;
        return we <= o ? i *= 10 : De <= o ? i *= 5 : Ge <= o && (i *= 2), n < e ? -i : i
    }

    function Ie(e, n, t) {
        if (null == t && (t = Pe), r = e.length) {
            if ((n = +n) <= 0 || r < 2) return +t(e[0], 0, e);
            if (1 <= n) return +t(e[r - 1], r - 1, e);
            var r, i = (r - 1) * n,
                o = Math.floor(i),
                a = +t(e[o], o, e);
            return a + (+t(e[o + 1], o + 1, e) - a) * (i - o)
        }
    }

    function Me(e, n) {
        var t, r = e.length,
            i = r,
            o = -1,
            a = 0;
        if (null == n)
            for (; ++o < r;) isNaN(t = Pe(e[o])) ? --i : a += t;
        else
            for (; ++o < r;) isNaN(t = Pe(n(e[o], o, e))) ? --i : a += t;
        if (i) return a / i
    }

    function ke(e) {
        for (var n, t, r, i = e.length, o = -1, a = 0; ++o < i;) a += e[o].length;
        for (t = new Array(a); 0 <= --i;)
            for (n = (r = e[i]).length; 0 <= --n;) t[--a] = r[n];
        return t
    }

    function Ae(e, n, t) {
        e.prototype = n.prototype = t, t.constructor = e
    }

    function _e(e, n) {
        var t = Object.create(e.prototype);
        for (var r in n) t[r] = n[r];
        return t
    }

    function Oe() {}
    var Le = 1 / .7,
        Ee = "\\s*([+-]?\\d+)\\s*",
        Ne = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
        je = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
        Te = /^#([0-9a-f]{3})$/,
        $e = /^#([0-9a-f]{6})$/,
        ze = new RegExp("^rgb\\(" + [Ee, Ee, Ee] + "\\)$"),
        Be = new RegExp("^rgb\\(" + [je, je, je] + "\\)$"),
        qe = new RegExp("^rgba\\(" + [Ee, Ee, Ee, Ne] + "\\)$"),
        Fe = new RegExp("^rgba\\(" + [je, je, je, Ne] + "\\)$"),
        Re = new RegExp("^hsl\\(" + [Ne, je, je] + "\\)$"),
        Ue = new RegExp("^hsla\\(" + [Ne, je, je, Ne] + "\\)$"),
        Ye = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            rebeccapurple: 6697881,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        };

    function He(e) {
        var n;
        return e = (e + "").trim().toLowerCase(), (n = Te.exec(e)) ? new Xe((n = parseInt(n[1], 16)) >> 8 & 15 | n >> 4 & 240, n >> 4 & 15 | 240 & n, (15 & n) << 4 | 15 & n, 1) : (n = $e.exec(e)) ? Ve(parseInt(n[1], 16)) : (n = ze.exec(e)) ? new Xe(n[1], n[2], n[3], 1) : (n = Be.exec(e)) ? new Xe(255 * n[1] / 100, 255 * n[2] / 100, 255 * n[3] / 100, 1) : (n = qe.exec(e)) ? We(n[1], n[2], n[3], n[4]) : (n = Fe.exec(e)) ? We(255 * n[1] / 100, 255 * n[2] / 100, 255 * n[3] / 100, n[4]) : (n = Re.exec(e)) ? Qe(n[1], n[2] / 100, n[3] / 100, 1) : (n = Ue.exec(e)) ? Qe(n[1], n[2] / 100, n[3] / 100, n[4]) : Ye.hasOwnProperty(e) ? Ve(Ye[e]) : "transparent" === e ? new Xe(NaN, NaN, NaN, 0) : null
    }

    function Ve(e) {
        return new Xe(e >> 16 & 255, e >> 8 & 255, 255 & e, 1)
    }

    function We(e, n, t, r) {
        return r <= 0 && (e = n = t = NaN), new Xe(e, n, t, r)
    }

    function Ze(e) {
        return e instanceof Oe || (e = He(e)), e ? new Xe((e = e.rgb()).r, e.g, e.b, e.opacity) : new Xe
    }

    function Ke(e, n, t, r) {
        return 1 === arguments.length ? Ze(e) : new Xe(e, n, t, null == r ? 1 : r)
    }

    function Xe(e, n, t, r) {
        this.r = +e, this.g = +n, this.b = +t, this.opacity = +r
    }

    function Je(e) {
        return ((e = Math.max(0, Math.min(255, Math.round(e) || 0))) < 16 ? "0" : "") + e.toString(16)
    }

    function Qe(e, n, t, r) {
        return r <= 0 ? e = n = t = NaN : t <= 0 || 1 <= t ? e = n = NaN : n <= 0 && (e = NaN), new en(e, n, t, r)
    }

    function en(e, n, t, r) {
        this.h = +e, this.s = +n, this.l = +t, this.opacity = +r
    }

    function nn(e, n, t) {
        return 255 * (e < 60 ? n + (t - n) * e / 60 : e < 180 ? t : e < 240 ? n + (t - n) * (240 - e) / 60 : n)
    }
    Ae(Oe, He, {
        displayable: function () {
            return this.rgb().displayable()
        },
        hex: function () {
            return this.rgb().hex()
        },
        toString: function () {
            return this.rgb() + ""
        }
    }), Ae(Xe, Ke, _e(Oe, {
        brighter: function (e) {
            return e = null == e ? Le : Math.pow(Le, e), new Xe(this.r * e, this.g * e, this.b * e, this.opacity)
        },
        darker: function (e) {
            return e = null == e ? .7 : Math.pow(.7, e), new Xe(this.r * e, this.g * e, this.b * e, this.opacity)
        },
        rgb: function () {
            return this
        },
        displayable: function () {
            return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1
        },
        hex: function () {
            return "#" + Je(this.r) + Je(this.g) + Je(this.b)
        },
        toString: function () {
            var e = this.opacity;
            return (1 === (e = isNaN(e) ? 1 : Math.max(0, Math.min(1, e))) ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (1 === e ? ")" : ", " + e + ")")
        }
    })), Ae(en, function (e, n, t, r) {
        return 1 === arguments.length ? function (e) {
            if (e instanceof en) return new en(e.h, e.s, e.l, e.opacity);
            if (e instanceof Oe || (e = He(e)), !e) return new en;
            if (e instanceof en) return e;
            var n = (e = e.rgb()).r / 255,
                t = e.g / 255,
                r = e.b / 255,
                i = Math.min(n, t, r),
                o = Math.max(n, t, r),
                a = NaN,
                l = o - i,
                c = (o + i) / 2;
            return l ? (a = n === o ? (t - r) / l + 6 * (t < r) : t === o ? (r - n) / l + 2 : (n - t) / l + 4, l /= c < .5 ? o + i : 2 - o - i, a *= 60) : l = 0 < c && c < 1 ? 0 : a, new en(a, l, c, e.opacity)
        }(e) : new en(e, n, t, null == r ? 1 : r)
    }, _e(Oe, {
        brighter: function (e) {
            return e = null == e ? Le : Math.pow(Le, e), new en(this.h, this.s, this.l * e, this.opacity)
        },
        darker: function (e) {
            return e = null == e ? .7 : Math.pow(.7, e), new en(this.h, this.s, this.l * e, this.opacity)
        },
        rgb: function () {
            var e = this.h % 360 + 360 * (this.h < 0),
                n = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                t = this.l,
                r = t + (t < .5 ? t : 1 - t) * n,
                i = 2 * t - r;
            return new Xe(nn(240 <= e ? e - 240 : e + 120, i, r), nn(e, i, r), nn(e < 120 ? e + 240 : e - 120, i, r), this.opacity)
        },
        displayable: function () {
            return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
        }
    }));
    var tn = Math.PI / 180,
        rn = 180 / Math.PI,
        on = .96422,
        an = 1,
        ln = .82521,
        cn = 4 / 29,
        sn = 6 / 29,
        un = 3 * sn * sn,
        pn = sn * sn * sn;

    function dn(e) {
        if (e instanceof fn) return new fn(e.l, e.a, e.b, e.opacity);
        if (e instanceof vn) {
            if (isNaN(e.h)) return new fn(e.l, 0, 0, e.opacity);
            var n = e.h * tn;
            return new fn(e.l, Math.cos(n) * e.c, Math.sin(n) * e.c, e.opacity)
        }
        e instanceof Xe || (e = Ze(e));
        var t, r, i = gn(e.r),
            o = gn(e.g),
            a = gn(e.b),
            l = hn((.2225045 * i + .7168786 * o + .0606169 * a) / an);
        return i === o && o === a ? t = r = l : (t = hn((.4360747 * i + .3850649 * o + .1430804 * a) / on), r = hn((.0139322 * i + .0971045 * o + .7141733 * a) / ln)), new fn(116 * l - 16, 500 * (t - l), 200 * (l - r), e.opacity)
    }

    function fn(e, n, t, r) {
        this.l = +e, this.a = +n, this.b = +t, this.opacity = +r
    }

    function hn(e) {
        return pn < e ? Math.pow(e, 1 / 3) : e / un + cn
    }

    function yn(e) {
        return sn < e ? e * e * e : un * (e - cn)
    }

    function mn(e) {
        return 255 * (e <= .0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - .055)
    }

    function gn(e) {
        return (e /= 255) <= .04045 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)
    }

    function vn(e, n, t, r) {
        this.h = +e, this.c = +n, this.l = +t, this.opacity = +r
    }
    Ae(fn, function (e, n, t, r) {
        return 1 === arguments.length ? dn(e) : new fn(e, n, t, null == r ? 1 : r)
    }, _e(Oe, {
        brighter: function (e) {
            return new fn(this.l + 18 * (null == e ? 1 : e), this.a, this.b, this.opacity)
        },
        darker: function (e) {
            return new fn(this.l - 18 * (null == e ? 1 : e), this.a, this.b, this.opacity)
        },
        rgb: function () {
            var e = (this.l + 16) / 116,
                n = isNaN(this.a) ? e : e + this.a / 500,
                t = isNaN(this.b) ? e : e - this.b / 200;
            return new Xe(mn(3.1338561 * (n = on * yn(n)) - 1.6168667 * (e = an * yn(e)) - .4906146 * (t = ln * yn(t))), mn(-.9787684 * n + 1.9161415 * e + .033454 * t), mn(.0719453 * n - .2289914 * e + 1.4052427 * t), this.opacity)
        }
    })), Ae(vn, function (e, n, t, r) {
        return 1 === arguments.length ? function (e) {
            if (e instanceof vn) return new vn(e.h, e.c, e.l, e.opacity);
            if (e instanceof fn || (e = dn(e)), 0 === e.a && 0 === e.b) return new vn(NaN, 0, e.l, e.opacity);
            var n = Math.atan2(e.b, e.a) * rn;
            return new vn(n < 0 ? n + 360 : n, Math.sqrt(e.a * e.a + e.b * e.b), e.l, e.opacity)
        }(e) : new vn(e, n, t, null == r ? 1 : r)
    }, _e(Oe, {
        brighter: function (e) {
            return new vn(this.h, this.c, this.l + 18 * (null == e ? 1 : e), this.opacity)
        },
        darker: function (e) {
            return new vn(this.h, this.c, this.l - 18 * (null == e ? 1 : e), this.opacity)
        },
        rgb: function () {
            return dn(this).rgb()
        }
    }));
    var Pn = 1.78277,
        xn = -.29227,
        bn = -.90649,
        wn = 1.97294,
        Dn = wn * bn,
        Gn = wn * Pn,
        Cn = Pn * xn - -.14861 * bn;

    function Sn(e, n, t, r) {
        return 1 === arguments.length ? function (e) {
            if (e instanceof In) return new In(e.h, e.s, e.l, e.opacity);
            e instanceof Xe || (e = Ze(e));
            var n = e.r / 255,
                t = e.g / 255,
                r = e.b / 255,
                i = (Cn * r + Dn * n - Gn * t) / (Cn + Dn - Gn),
                o = r - i,
                a = (wn * (t - i) - xn * o) / bn,
                l = Math.sqrt(a * a + o * o) / (wn * i * (1 - i)),
                c = l ? Math.atan2(a, o) * rn - 120 : NaN;
            return new In(c < 0 ? c + 360 : c, l, i, e.opacity)
        }(e) : new In(e, n, t, null == r ? 1 : r)
    }

    function In(e, n, t, r) {
        this.h = +e, this.s = +n, this.l = +t, this.opacity = +r
    }
    Ae(In, Sn, _e(Oe, {
        brighter: function (e) {
            return e = null == e ? Le : Math.pow(Le, e), new In(this.h, this.s, this.l * e, this.opacity)
        },
        darker: function (e) {
            return e = null == e ? .7 : Math.pow(.7, e), new In(this.h, this.s, this.l * e, this.opacity)
        },
        rgb: function () {
            var e = isNaN(this.h) ? 0 : (this.h + 120) * tn,
                n = +this.l,
                t = isNaN(this.s) ? 0 : this.s * n * (1 - n),
                r = Math.cos(e),
                i = Math.sin(e);
            return new Xe(255 * (n + t * (-.14861 * r + Pn * i)), 255 * (n + t * (xn * r + bn * i)), 255 * (n + t * (wn * r)), this.opacity)
        }
    }));
    var Mn = function () {
        this.__data__ = [], this.size = 0
    };
    var kn = function (e, n) {
        return e === n || e != e && n != n
    };
    var An = function (e, n) {
            for (var t = e.length; t--;)
                if (kn(e[t][0], n)) return t;
            return -1
        },
        _n = Array.prototype.splice;
    var On = function (e) {
        var n = this.__data__,
            t = An(n, e);
        return !(t < 0 || (t == n.length - 1 ? n.pop() : _n.call(n, t, 1), --this.size, 0))
    };
    var Ln = function (e) {
        var n = this.__data__,
            t = An(n, e);
        return t < 0 ? void 0 : n[t][1]
    };
    var En = function (e) {
        return -1 < An(this.__data__, e)
    };
    var Nn = function (e, n) {
        var t = this.__data__,
            r = An(t, e);
        return r < 0 ? (++this.size, t.push([e, n])) : t[r][1] = n, this
    };

    function jn(e) {
        var n = -1,
            t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t;) {
            var r = e[n];
            this.set(r[0], r[1])
        }
    }
    jn.prototype.clear = Mn, jn.prototype.delete = On, jn.prototype.get = Ln, jn.prototype.has = En, jn.prototype.set = Nn;
    var Tn = jn;
    var $n = function () {
        this.__data__ = new Tn, this.size = 0
    };
    var zn = function (e) {
        var n = this.__data__,
            t = n.delete(e);
        return this.size = n.size, t
    };
    var Bn = function (e) {
        return this.__data__.get(e)
    };
    var qn = function (e) {
            return this.__data__.has(e)
        },
        Fn = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};

    function Rn(e, n) {
        return e(n = {
            exports: {}
        }, n.exports), n.exports
    }
    var Un = "object" == ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(Fn) && Fn && Fn.Object === Object && Fn,
        Yn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        Hn = "object" == ("undefined" == typeof self ? "undefined" : Yn(self)) && self && self.Object === Object && self,
        Vn = Un || Hn || Function("return this")(),
        Wn = Vn.Symbol,
        Zn = Object.prototype,
        Kn = Zn.hasOwnProperty,
        Xn = Zn.toString,
        Jn = Wn ? Wn.toStringTag : void 0;
    var Qn = function (e) {
            var n = Kn.call(e, Jn),
                t = e[Jn];
            try {
                e[Jn] = void 0
            } catch (e) {}
            var r = Xn.call(e);
            return n ? e[Jn] = t : delete e[Jn], r
        },
        et = Object.prototype.toString;
    var nt = function (e) {
            return et.call(e)
        },
        tt = Wn ? Wn.toStringTag : void 0;
    var rt = function (e) {
            return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : tt && tt in Object(e) ? Qn(e) : nt(e)
        },
        it = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var ot = function (e) {
        var n = void 0 === e ? "undefined" : it(e);
        return null != e && ("object" == n || "function" == n)
    };
    var at, lt = function (e) {
            if (!ot(e)) return !1;
            var n = rt(e);
            return "[object Function]" == n || "[object GeneratorFunction]" == n || "[object AsyncFunction]" == n || "[object Proxy]" == n
        },
        ct = Vn["__core-js_shared__"],
        st = (at = /[^.]+$/.exec(ct && ct.keys && ct.keys.IE_PROTO || "")) ? "Symbol(src)_1." + at : "";
    var ut = function (e) {
            return !!st && st in e
        },
        pt = Function.prototype.toString;
    var dt = function (e) {
            if (null != e) {
                try {
                    return pt.call(e)
                } catch (e) {}
                try {
                    return e + ""
                } catch (e) {}
            }
            return ""
        },
        ft = /^\[object .+?Constructor\]$/,
        ht = Function.prototype,
        yt = Object.prototype,
        mt = ht.toString,
        gt = yt.hasOwnProperty,
        vt = RegExp("^" + mt.call(gt).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    var Pt = function (e) {
        return !(!ot(e) || ut(e)) && (lt(e) ? vt : ft).test(dt(e))
    };
    var xt = function (e, n) {
        return null == e ? void 0 : e[n]
    };
    var bt = function (e, n) {
            var t = xt(e, n);
            return Pt(t) ? t : void 0
        },
        wt = bt(Vn, "Map"),
        Dt = bt(Object, "create");
    var Gt = function () {
        this.__data__ = Dt ? Dt(null) : {}, this.size = 0
    };
    var Ct = function (e) {
            var n = this.has(e) && delete this.__data__[e];
            return this.size -= n ? 1 : 0, n
        },
        St = Object.prototype.hasOwnProperty;
    var It = function (e) {
            var n = this.__data__;
            if (Dt) {
                var t = n[e];
                return "__lodash_hash_undefined__" === t ? void 0 : t
            }
            return St.call(n, e) ? n[e] : void 0
        },
        Mt = Object.prototype.hasOwnProperty;
    var kt = function (e) {
        var n = this.__data__;
        return Dt ? void 0 !== n[e] : Mt.call(n, e)
    };
    var At = function (e, n) {
        var t = this.__data__;
        return this.size += this.has(e) ? 0 : 1, t[e] = Dt && void 0 === n ? "__lodash_hash_undefined__" : n, this
    };

    function _t(e) {
        var n = -1,
            t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t;) {
            var r = e[n];
            this.set(r[0], r[1])
        }
    }
    _t.prototype.clear = Gt, _t.prototype.delete = Ct, _t.prototype.get = It, _t.prototype.has = kt, _t.prototype.set = At;
    var Ot = _t;
    var Lt = function () {
            this.size = 0, this.__data__ = {
                hash: new Ot,
                map: new(wt || Tn),
                string: new Ot
            }
        },
        Et = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var Nt = function (e) {
        var n = void 0 === e ? "undefined" : Et(e);
        return "string" == n || "number" == n || "symbol" == n || "boolean" == n ? "__proto__" !== e : null === e
    };
    var jt = function (e, n) {
        var t = e.__data__;
        return Nt(n) ? t["string" == typeof n ? "string" : "hash"] : t.map
    };
    var Tt = function (e) {
        var n = jt(this, e).delete(e);
        return this.size -= n ? 1 : 0, n
    };
    var $t = function (e) {
        return jt(this, e).get(e)
    };
    var zt = function (e) {
        return jt(this, e).has(e)
    };
    var Bt = function (e, n) {
        var t = jt(this, e),
            r = t.size;
        return t.set(e, n), this.size += t.size == r ? 0 : 1, this
    };

    function qt(e) {
        var n = -1,
            t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t;) {
            var r = e[n];
            this.set(r[0], r[1])
        }
    }
    qt.prototype.clear = Lt, qt.prototype.delete = Tt, qt.prototype.get = $t, qt.prototype.has = zt, qt.prototype.set = Bt;
    var Ft = qt;
    var Rt = function (e, n) {
        var t = this.__data__;
        if (t instanceof Tn) {
            var r = t.__data__;
            if (!wt || r.length < 199) return r.push([e, n]), this.size = ++t.size, this;
            t = this.__data__ = new Ft(r)
        }
        return t.set(e, n), this.size = t.size, this
    };

    function Ut(e) {
        var n = this.__data__ = new Tn(e);
        this.size = n.size
    }
    Ut.prototype.clear = $n, Ut.prototype.delete = zn, Ut.prototype.get = Bn, Ut.prototype.has = qn, Ut.prototype.set = Rt;
    var Yt = Ut,
        Ht = function () {
            try {
                var e = bt(Object, "defineProperty");
                return e({}, "", {}), e
            } catch (e) {}
        }();
    var Vt = function (e, n, t) {
        "__proto__" == n && Ht ? Ht(e, n, {
            configurable: !0,
            enumerable: !0,
            value: t,
            writable: !0
        }) : e[n] = t
    };
    var Wt = function (e, n, t) {
        (void 0 === t || kn(e[n], t)) && (void 0 !== t || n in e) || Vt(e, n, t)
    };
    var Zt = function (c) {
            return function (e, n, t) {
                for (var r = -1, i = Object(e), o = t(e), a = o.length; a--;) {
                    var l = o[c ? a : ++r];
                    if (!1 === n(i[l], l, i)) break
                }
                return e
            }
        }(),
        Kt = Rn(function (e, n) {
            var t = n && !n.nodeType && n,
                r = t && e && !e.nodeType && e,
                i = r && r.exports === t ? Vn.Buffer : void 0,
                o = i ? i.allocUnsafe : void 0;
            e.exports = function (e, n) {
                if (n) return e.slice();
                var t = e.length,
                    r = o ? o(t) : new e.constructor(t);
                return e.copy(r), r
            }
        }),
        Xt = Vn.Uint8Array;
    var Jt = function (e) {
        var n = new e.constructor(e.byteLength);
        return new Xt(n).set(new Xt(e)), n
    };
    var Qt = function (e, n) {
        var t = n ? Jt(e.buffer) : e.buffer;
        return new e.constructor(t, e.byteOffset, e.length)
    };
    var er = function (e, n) {
            var t = -1,
                r = e.length;
            for (n || (n = Array(r)); ++t < r;) n[t] = e[t];
            return n
        },
        nr = Object.create,
        tr = function () {
            function t() {}
            return function (e) {
                if (!ot(e)) return {};
                if (nr) return nr(e);
                t.prototype = e;
                var n = new t;
                return t.prototype = void 0, n
            }
        }();
    var rr = function (n, t) {
            return function (e) {
                return n(t(e))
            }
        },
        ir = rr(Object.getPrototypeOf, Object),
        or = Object.prototype;
    var ar = function (e) {
        var n = e && e.constructor;
        return e === ("function" == typeof n && n.prototype || or)
    };
    var lr = function (e) {
            return "function" != typeof e.constructor || ar(e) ? {} : tr(ir(e))
        },
        cr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var sr = function (e) {
        return null != e && "object" == (void 0 === e ? "undefined" : cr(e))
    };
    var ur = function (e) {
            return sr(e) && "[object Arguments]" == rt(e)
        },
        pr = Object.prototype,
        dr = pr.hasOwnProperty,
        fr = pr.propertyIsEnumerable,
        hr = ur(function () {
            return arguments
        }()) ? ur : function (e) {
            return sr(e) && dr.call(e, "callee") && !fr.call(e, "callee")
        },
        yr = Array.isArray;
    var mr = function (e) {
        return "number" == typeof e && -1 < e && e % 1 == 0 && e <= 9007199254740991
    };
    var gr = function (e) {
        return null != e && mr(e.length) && !lt(e)
    };
    var vr = function (e) {
        return sr(e) && gr(e)
    };
    var Pr = function () {
            return !1
        },
        xr = Rn(function (e, n) {
            var t = n && !n.nodeType && n,
                r = t && e && !e.nodeType && e,
                i = r && r.exports === t ? Vn.Buffer : void 0,
                o = (i ? i.isBuffer : void 0) || Pr;
            e.exports = o
        }),
        br = Function.prototype,
        wr = Object.prototype,
        Dr = br.toString,
        Gr = wr.hasOwnProperty,
        Cr = Dr.call(Object);
    var Sr = function (e) {
            if (!sr(e) || "[object Object]" != rt(e)) return !1;
            var n = ir(e);
            if (null === n) return !0;
            var t = Gr.call(n, "constructor") && n.constructor;
            return "function" == typeof t && t instanceof t && Dr.call(t) == Cr
        },
        Ir = {};
    Ir["[object Float32Array]"] = Ir["[object Float64Array]"] = Ir["[object Int8Array]"] = Ir["[object Int16Array]"] = Ir["[object Int32Array]"] = Ir["[object Uint8Array]"] = Ir["[object Uint8ClampedArray]"] = Ir["[object Uint16Array]"] = Ir["[object Uint32Array]"] = !0, Ir["[object Arguments]"] = Ir["[object Array]"] = Ir["[object ArrayBuffer]"] = Ir["[object Boolean]"] = Ir["[object DataView]"] = Ir["[object Date]"] = Ir["[object Error]"] = Ir["[object Function]"] = Ir["[object Map]"] = Ir["[object Number]"] = Ir["[object Object]"] = Ir["[object RegExp]"] = Ir["[object Set]"] = Ir["[object String]"] = Ir["[object WeakMap]"] = !1;
    var Mr = function (e) {
        return sr(e) && mr(e.length) && !!Ir[rt(e)]
    };
    var kr = function (n) {
            return function (e) {
                return n(e)
            }
        },
        Ar = Rn(function (e, n) {
            var t = n && !n.nodeType && n,
                r = t && e && !e.nodeType && e,
                i = r && r.exports === t && Un.process,
                o = function () {
                    try {
                        var e = r && r.require && r.require("util").types;
                        return e || i && i.binding && i.binding("util")
                    } catch (e) {}
                }();
            e.exports = o
        }),
        _r = Ar && Ar.isTypedArray,
        Or = _r ? kr(_r) : Mr;
    var Lr = function (e, n) {
            if ("__proto__" != n) return e[n]
        },
        Er = Object.prototype.hasOwnProperty;
    var Nr = function (e, n, t) {
        var r = e[n];
        Er.call(e, n) && kn(r, t) && (void 0 !== t || n in e) || Vt(e, n, t)
    };
    var jr = function (e, n, t, r) {
        var i = !t;
        t || (t = {});
        for (var o = -1, a = n.length; ++o < a;) {
            var l = n[o],
                c = r ? r(t[l], e[l], l, t, e) : void 0;
            void 0 === c && (c = e[l]), i ? Vt(t, l, c) : Nr(t, l, c)
        }
        return t
    };
    var Tr = function (e, n) {
            for (var t = -1, r = Array(e); ++t < e;) r[t] = n(t);
            return r
        },
        $r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        zr = /^(?:0|[1-9]\d*)$/;
    var Br = function (e, n) {
            var t = void 0 === e ? "undefined" : $r(e);
            return !!(n = null == n ? 9007199254740991 : n) && ("number" == t || "symbol" != t && zr.test(e)) && -1 < e && e % 1 == 0 && e < n
        },
        qr = Object.prototype.hasOwnProperty;
    var Fr = function (e, n) {
        var t = yr(e),
            r = !t && hr(e),
            i = !t && !r && xr(e),
            o = !t && !r && !i && Or(e),
            a = t || r || i || o,
            l = a ? Tr(e.length, String) : [],
            c = l.length;
        for (var s in e) !n && !qr.call(e, s) || a && ("length" == s || i && ("offset" == s || "parent" == s) || o && ("buffer" == s || "byteLength" == s || "byteOffset" == s) || Br(s, c)) || l.push(s);
        return l
    };
    var Rr = function (e) {
            var n = [];
            if (null != e)
                for (var t in Object(e)) n.push(t);
            return n
        },
        Ur = Object.prototype.hasOwnProperty;
    var Yr = function (e) {
        if (!ot(e)) return Rr(e);
        var n = ar(e),
            t = [];
        for (var r in e)("constructor" != r || !n && Ur.call(e, r)) && t.push(r);
        return t
    };
    var Hr = function (e) {
        return gr(e) ? Fr(e, !0) : Yr(e)
    };
    var Vr = function (e) {
        return jr(e, Hr(e))
    };
    var Wr = function (e, n, t, r, i, o, a) {
        var l = Lr(e, t),
            c = Lr(n, t),
            s = a.get(c);
        if (s) Wt(e, t, s);
        else {
            var u = o ? o(l, c, t + "", e, n, a) : void 0,
                p = void 0 === u;
            if (p) {
                var d = yr(c),
                    f = !d && xr(c),
                    h = !d && !f && Or(c);
                u = c, d || f || h ? u = yr(l) ? l : vr(l) ? er(l) : f ? Kt(c, !(p = !1)) : h ? Qt(c, !(p = !1)) : [] : Sr(c) || hr(c) ? hr(u = l) ? u = Vr(l) : ot(l) && !lt(l) || (u = lr(c)) : p = !1
            }
            p && (a.set(c, u), i(u, c, r, o, a), a.delete(c)), Wt(e, t, u)
        }
    };
    var Zr = function r(i, o, a, l, c) {
        i !== o && Zt(o, function (e, n) {
            if (ot(e)) c || (c = new Yt), Wr(i, o, n, a, r, l, c);
            else {
                var t = l ? l(Lr(i, n), e, n + "", i, o, c) : void 0;
                void 0 === t && (t = e), Wt(i, n, t)
            }
        }, Hr)
    };
    var Kr = function (e) {
        return e
    };
    var Xr = function (e, n, t) {
            switch (t.length) {
            case 0:
                return e.call(n);
            case 1:
                return e.call(n, t[0]);
            case 2:
                return e.call(n, t[0], t[1]);
            case 3:
                return e.call(n, t[0], t[1], t[2])
            }
            return e.apply(n, t)
        },
        Jr = Math.max;
    var Qr = function (o, a, l) {
        return a = Jr(void 0 === a ? o.length - 1 : a, 0),
            function () {
                for (var e = arguments, n = -1, t = Jr(e.length - a, 0), r = Array(t); ++n < t;) r[n] = e[a + n];
                n = -1;
                for (var i = Array(a + 1); ++n < a;) i[n] = e[n];
                return i[a] = l(r), Xr(o, this, i)
            }
    };
    var ei = function (e) {
            return function () {
                return e
            }
        },
        ni = Ht ? function (e, n) {
            return Ht(e, "toString", {
                configurable: !0,
                enumerable: !1,
                value: ei(n),
                writable: !0
            })
        } : Kr,
        ti = Date.now;
    var ri = function (t) {
        var r = 0,
            i = 0;
        return function () {
            var e = ti(),
                n = 16 - (e - i);
            if (i = e, 0 < n) {
                if (800 <= ++r) return arguments[0]
            } else r = 0;
            return t.apply(void 0, arguments)
        }
    }(ni);
    var ii = function (e, n) {
            return ri(Qr(e, n, Kr), e + "")
        },
        oi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var ai = function (e, n, t) {
        if (!ot(t)) return !1;
        var r = void 0 === n ? "undefined" : oi(n);
        return !!("number" == r ? gr(t) && Br(n, t.length) : "string" == r && n in t) && kn(t[n], e)
    };
    var li = function (l) {
            return ii(function (e, n) {
                var t = -1,
                    r = n.length,
                    i = 1 < r ? n[r - 1] : void 0,
                    o = 2 < r ? n[2] : void 0;
                for (i = 3 < l.length && "function" == typeof i ? (r--, i) : void 0, o && ai(n[0], n[1], o) && (i = r < 3 ? void 0 : i, r = 1), e = Object(e); ++t < r;) {
                    var a = n[t];
                    a && l(e, a, t, i)
                }
                return e
            })
        }(function (e, n, t) {
            Zr(e, n, t)
        }),
        ci = rr(Object.keys, Object),
        si = Object.prototype.hasOwnProperty;
    var ui = function (e) {
        if (!ar(e)) return ci(e);
        var n = [];
        for (var t in Object(e)) si.call(e, t) && "constructor" != t && n.push(t);
        return n
    };
    var pi = function (e) {
        return gr(e) ? Fr(e) : ui(e)
    };
    var di = function (e, n) {
        for (var t = -1, r = null == e ? 0 : e.length; ++t < r && !1 !== n(e[t], t, e););
        return e
    };
    var fi = function (o, a) {
        return function (e, n) {
            if (null == e) return e;
            if (!gr(e)) return o(e, n);
            for (var t = e.length, r = a ? t : -1, i = Object(e);
                (a ? r-- : ++r < t) && !1 !== n(i[r], r, i););
            return e
        }
    }(function (e, n) {
        return e && Zt(e, n, pi)
    });
    var hi = function (e) {
        return "function" == typeof e ? e : Kr
    };
    var yi = function (e, n) {
        return (yr(e) ? di : fi)(e, hi(n))
    };
    var mi = function (e) {
        return "number" == typeof e || sr(e) && "[object Number]" == rt(e)
    };
    var gi = function (e) {
        return mi(e) && e != +e
    };
    var vi = function (e, n, t, r) {
        for (var i = e.length, o = t + (r ? 1 : -1); r ? o-- : ++o < i;)
            if (n(e[o], o, e)) return o;
        return -1
    };
    var Pi = function (e) {
        return e != e
    };
    var xi = function (e, n, t) {
        for (var r = t - 1, i = e.length; ++r < i;)
            if (e[r] === n) return r;
        return -1
    };
    var bi = function (e, n, t) {
            return n == n ? xi(e, n, t) : vi(e, Pi, t)
        },
        wi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var Di = function (e) {
            return "symbol" == (void 0 === e ? "undefined" : wi(e)) || sr(e) && "[object Symbol]" == rt(e)
        },
        Gi = /^\s+|\s+$/g,
        Ci = /^[-+]0x[0-9a-f]+$/i,
        Si = /^0b[01]+$/i,
        Ii = /^0o[0-7]+$/i,
        Mi = parseInt;
    var ki = function (e) {
        if ("number" == typeof e) return e;
        if (Di(e)) return NaN;
        if (ot(e)) {
            var n = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = ot(n) ? n + "" : n
        }
        if ("string" != typeof e) return 0 === e ? e : +e;
        e = e.replace(Gi, "");
        var t = Si.test(e);
        return t || Ii.test(e) ? Mi(e.slice(2), t ? 2 : 8) : Ci.test(e) ? NaN : +e
    };
    var Ai = function (e) {
        return e ? (e = ki(e)) !== 1 / 0 && e !== -1 / 0 ? e == e ? e : 0 : 17976931348623157e292 * (e < 0 ? -1 : 1) : 0 === e ? e : 0
    };
    var _i = function (e) {
            var n = Ai(e),
                t = n % 1;
            return n == n ? t ? n - t : n : 0
        },
        Oi = Math.max;
    var Li = function (e, n, t) {
        var r = null == e ? 0 : e.length;
        if (!r) return -1;
        var i = null == t ? 0 : _i(t);
        return i < 0 && (i = Oi(r + i, 0)), bi(e, n, i)
    };
    var Ei = function (e) {
        return this.__data__.has(e)
    };

    function Ni(e) {
        var n = -1,
            t = null == e ? 0 : e.length;
        for (this.__data__ = new Ft; ++n < t;) this.add(e[n])
    }
    Ni.prototype.add = Ni.prototype.push = function (e) {
        return this.__data__.set(e, "__lodash_hash_undefined__"), this
    }, Ni.prototype.has = Ei;
    var ji = Ni;
    var Ti = function (e, n) {
        for (var t = -1, r = null == e ? 0 : e.length; ++t < r;)
            if (n(e[t], t, e)) return !0;
        return !1
    };
    var $i = function (e, n) {
        return e.has(n)
    };
    var zi = function (e, n, t, r, i, o) {
        var a = 1 & t,
            l = e.length,
            c = n.length;
        if (l != c && !(a && l < c)) return !1;
        var s = o.get(e);
        if (s && o.get(n)) return s == n;
        var u = -1,
            p = !0,
            d = 2 & t ? new ji : void 0;
        for (o.set(e, n), o.set(n, e); ++u < l;) {
            var f = e[u],
                h = n[u];
            if (r) var y = a ? r(h, f, u, n, e, o) : r(f, h, u, e, n, o);
            if (void 0 !== y) {
                if (y) continue;
                p = !1;
                break
            }
            if (d) {
                if (!Ti(n, function (e, n) {
                        if (!$i(d, n) && (f === e || i(f, e, t, r, o))) return d.push(n)
                    })) {
                    p = !1;
                    break
                }
            } else if (f !== h && !i(f, h, t, r, o)) {
                p = !1;
                break
            }
        }
        return o.delete(e), o.delete(n), p
    };
    var Bi = function (e) {
        var t = -1,
            r = Array(e.size);
        return e.forEach(function (e, n) {
            r[++t] = [n, e]
        }), r
    };
    var qi = function (e) {
            var n = -1,
                t = Array(e.size);
            return e.forEach(function (e) {
                t[++n] = e
            }), t
        },
        Fi = Wn ? Wn.prototype : void 0,
        Ri = Fi ? Fi.valueOf : void 0;
    var Ui = function (e, n, t, r, i, o, a) {
        switch (t) {
        case "[object DataView]":
            if (e.byteLength != n.byteLength || e.byteOffset != n.byteOffset) return !1;
            e = e.buffer, n = n.buffer;
        case "[object ArrayBuffer]":
            return !(e.byteLength != n.byteLength || !o(new Xt(e), new Xt(n)));
        case "[object Boolean]":
        case "[object Date]":
        case "[object Number]":
            return kn(+e, +n);
        case "[object Error]":
            return e.name == n.name && e.message == n.message;
        case "[object RegExp]":
        case "[object String]":
            return e == n + "";
        case "[object Map]":
            var l = Bi;
        case "[object Set]":
            var c = 1 & r;
            if (l || (l = qi), e.size != n.size && !c) return !1;
            var s = a.get(e);
            if (s) return s == n;
            r |= 2, a.set(e, n);
            var u = zi(l(e), l(n), r, i, o, a);
            return a.delete(e), u;
        case "[object Symbol]":
            if (Ri) return Ri.call(e) == Ri.call(n)
        }
        return !1
    };
    var Yi = function (e, n) {
        for (var t = -1, r = n.length, i = e.length; ++t < r;) e[i + t] = n[t];
        return e
    };
    var Hi = function (e, n, t) {
        var r = n(e);
        return yr(e) ? r : Yi(r, t(e))
    };
    var Vi = function (e, n) {
        for (var t = -1, r = null == e ? 0 : e.length, i = 0, o = []; ++t < r;) {
            var a = e[t];
            n(a, t, e) && (o[i++] = a)
        }
        return o
    };
    var Wi = function () {
            return []
        },
        Zi = Object.prototype.propertyIsEnumerable,
        Ki = Object.getOwnPropertySymbols,
        Xi = Ki ? function (n) {
            return null == n ? [] : (n = Object(n), Vi(Ki(n), function (e) {
                return Zi.call(n, e)
            }))
        } : Wi;
    var Ji = function (e) {
            return Hi(e, pi, Xi)
        },
        Qi = Object.prototype.hasOwnProperty;
    var eo = function (e, n, t, r, i, o) {
            var a = 1 & t,
                l = Ji(e),
                c = l.length;
            if (c != Ji(n).length && !a) return !1;
            for (var s = c; s--;) {
                var u = l[s];
                if (!(a ? u in n : Qi.call(n, u))) return !1
            }
            var p = o.get(e);
            if (p && o.get(n)) return p == n;
            var d = !0;
            o.set(e, n), o.set(n, e);
            for (var f = a; ++s < c;) {
                var h = e[u = l[s]],
                    y = n[u];
                if (r) var m = a ? r(y, h, u, n, e, o) : r(h, y, u, e, n, o);
                if (!(void 0 === m ? h === y || i(h, y, t, r, o) : m)) {
                    d = !1;
                    break
                }
                f || (f = "constructor" == u)
            }
            if (d && !f) {
                var g = e.constructor,
                    v = n.constructor;
                g != v && "constructor" in e && "constructor" in n && !("function" == typeof g && g instanceof g && "function" == typeof v && v instanceof v) && (d = !1)
            }
            return o.delete(e), o.delete(n), d
        },
        no = bt(Vn, "DataView"),
        to = bt(Vn, "Promise"),
        ro = bt(Vn, "Set"),
        io = bt(Vn, "WeakMap"),
        oo = "[object Map]",
        ao = "[object Promise]",
        lo = "[object Set]",
        co = "[object WeakMap]",
        so = "[object DataView]",
        uo = dt(no),
        po = dt(wt),
        fo = dt(to),
        ho = dt(ro),
        yo = dt(io),
        mo = rt;
    (no && mo(new no(new ArrayBuffer(1))) != so || wt && mo(new wt) != oo || to && mo(to.resolve()) != ao || ro && mo(new ro) != lo || io && mo(new io) != co) && (mo = function (e) {
        var n = rt(e),
            t = "[object Object]" == n ? e.constructor : void 0,
            r = t ? dt(t) : "";
        if (r) switch (r) {
        case uo:
            return so;
        case po:
            return oo;
        case fo:
            return ao;
        case ho:
            return lo;
        case yo:
            return co
        }
        return n
    });
    var go = mo,
        vo = "[object Arguments]",
        Po = "[object Array]",
        xo = "[object Object]",
        bo = Object.prototype.hasOwnProperty;
    var wo = function (e, n, t, r, i, o) {
        var a = yr(e),
            l = yr(n),
            c = a ? Po : go(e),
            s = l ? Po : go(n),
            u = (c = c == vo ? xo : c) == xo,
            p = (s = s == vo ? xo : s) == xo,
            d = c == s;
        if (d && xr(e)) {
            if (!xr(n)) return !1;
            u = !(a = !0)
        }
        if (d && !u) return o || (o = new Yt), a || Or(e) ? zi(e, n, t, r, i, o) : Ui(e, n, c, t, r, i, o);
        if (!(1 & t)) {
            var f = u && bo.call(e, "__wrapped__"),
                h = p && bo.call(n, "__wrapped__");
            if (f || h) {
                var y = f ? e.value() : e,
                    m = h ? n.value() : n;
                return o || (o = new Yt), i(y, m, t, r, o)
            }
        }
        return !!d && (o || (o = new Yt), eo(e, n, t, r, i, o))
    };
    var Do = function e(n, t, r, i, o) {
        return n === t || (null == n || null == t || !sr(n) && !sr(t) ? n != n && t != t : wo(n, t, r, i, e, o))
    };
    var Go = function (e, n, t, r) {
        var i = t.length,
            o = i,
            a = !r;
        if (null == e) return !o;
        for (e = Object(e); i--;) {
            var l = t[i];
            if (a && l[2] ? l[1] !== e[l[0]] : !(l[0] in e)) return !1
        }
        for (; ++i < o;) {
            var c = (l = t[i])[0],
                s = e[c],
                u = l[1];
            if (a && l[2]) {
                if (void 0 === s && !(c in e)) return !1
            } else {
                var p = new Yt;
                if (r) var d = r(s, u, c, e, n, p);
                if (!(void 0 === d ? Do(u, s, 3, r, p) : d)) return !1
            }
        }
        return !0
    };
    var Co = function (e) {
        return e == e && !ot(e)
    };
    var So = function (e) {
        for (var n = pi(e), t = n.length; t--;) {
            var r = n[t],
                i = e[r];
            n[t] = [r, i, Co(i)]
        }
        return n
    };
    var Io = function (n, t) {
        return function (e) {
            return null != e && e[n] === t && (void 0 !== t || n in Object(e))
        }
    };
    var Mo = function (n) {
            var t = So(n);
            return 1 == t.length && t[0][2] ? Io(t[0][0], t[0][1]) : function (e) {
                return e === n || Go(e, n, t)
            }
        },
        ko = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        Ao = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        _o = /^\w*$/;
    var Oo = function (e, n) {
            if (yr(e)) return !1;
            var t = void 0 === e ? "undefined" : ko(e);
            return !("number" != t && "symbol" != t && "boolean" != t && null != e && !Di(e)) || _o.test(e) || !Ao.test(e) || null != n && e in Object(n)
        },
        Lo = "Expected a function";

    function Eo(o, a) {
        if ("function" != typeof o || null != a && "function" != typeof a) throw new TypeError(Lo);
        var e = function e() {
            var n = arguments,
                t = a ? a.apply(this, n) : n[0],
                r = e.cache;
            if (r.has(t)) return r.get(t);
            var i = o.apply(this, n);
            return e.cache = r.set(t, i) || r, i
        };
        return e.cache = new(Eo.Cache || Ft), e
    }
    Eo.Cache = Ft;
    var No = Eo;
    var jo = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        To = /\\(\\)?/g,
        $o = function (e) {
            var n = No(e, function (e) {
                    return 500 === t.size && t.clear(), e
                }),
                t = n.cache;
            return n
        }(function (e) {
            var i = [];
            return 46 === e.charCodeAt(0) && i.push(""), e.replace(jo, function (e, n, t, r) {
                i.push(t ? r.replace(To, "$1") : n || e)
            }), i
        });
    var zo = function (e, n) {
            for (var t = -1, r = null == e ? 0 : e.length, i = Array(r); ++t < r;) i[t] = n(e[t], t, e);
            return i
        },
        Bo = 1 / 0,
        qo = Wn ? Wn.prototype : void 0,
        Fo = qo ? qo.toString : void 0;
    var Ro = function e(n) {
        if ("string" == typeof n) return n;
        if (yr(n)) return zo(n, e) + "";
        if (Di(n)) return Fo ? Fo.call(n) : "";
        var t = n + "";
        return "0" == t && 1 / n == -Bo ? "-0" : t
    };
    var Uo = function (e) {
        return null == e ? "" : Ro(e)
    };
    var Yo = function (e, n) {
        return yr(e) ? e : Oo(e, n) ? [e] : $o(Uo(e))
    };
    var Ho = function (e) {
        if ("string" == typeof e || Di(e)) return e;
        var n = e + "";
        return "0" == n && 1 / e == -1 / 0 ? "-0" : n
    };
    var Vo = function (e, n) {
        for (var t = 0, r = (n = Yo(n, e)).length; null != e && t < r;) e = e[Ho(n[t++])];
        return t && t == r ? e : void 0
    };
    var Wo = function (e, n, t) {
        var r = null == e ? void 0 : Vo(e, n);
        return void 0 === r ? t : r
    };
    var Zo = function (e, n) {
        return null != e && n in Object(e)
    };
    var Ko = function (e, n, t) {
        for (var r = -1, i = (n = Yo(n, e)).length, o = !1; ++r < i;) {
            var a = Ho(n[r]);
            if (!(o = null != e && t(e, a))) break;
            e = e[a]
        }
        return o || ++r != i ? o : !!(i = null == e ? 0 : e.length) && mr(i) && Br(a, i) && (yr(e) || hr(e))
    };
    var Xo = function (e, n) {
        return null != e && Ko(e, n, Zo)
    };
    var Jo = function (t, r) {
        return Oo(t) && Co(r) ? Io(Ho(t), r) : function (e) {
            var n = Wo(e, t);
            return void 0 === n && n === r ? Xo(e, t) : Do(r, n, 3)
        }
    };
    var Qo = function (n) {
        return function (e) {
            return null == e ? void 0 : e[n]
        }
    };
    var ea = function (n) {
        return function (e) {
            return Vo(e, n)
        }
    };
    var na = function (e) {
            return Oo(e) ? Qo(Ho(e)) : ea(e)
        },
        ta = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
    var ra = function (e) {
            return "function" == typeof e ? e : null == e ? Kr : "object" == (void 0 === e ? "undefined" : ta(e)) ? yr(e) ? Jo(e[0], e[1]) : Mo(e) : na(e)
        },
        ia = Math.max;
    var oa = function (e, n, t) {
        var r = null == e ? 0 : e.length;
        if (!r) return -1;
        var i = null == t ? 0 : _i(t);
        return i < 0 && (i = ia(r + i, 0)), vi(e, ra(n, 3), i)
    };
    var aa = function (a) {
        return function (e, n, t) {
            var r = Object(e);
            if (!gr(e)) {
                var i = ra(n, 3);
                e = pi(e), n = function (e) {
                    return i(r[e], e, r)
                }
            }
            var o = a(e, n, t);
            return -1 < o ? r[i ? e[o] : o] : void 0
        }
    }(oa);
    var la = function (e, n) {
        return e && jr(n, pi(n), e)
    };
    var ca = function (e, n) {
        return e && jr(n, Hr(n), e)
    };
    var sa = function (e, n) {
            return jr(e, Xi(e), n)
        },
        ua = Object.getOwnPropertySymbols ? function (e) {
            for (var n = []; e;) Yi(n, Xi(e)), e = ir(e);
            return n
        } : Wi;
    var pa = function (e, n) {
        return jr(e, ua(e), n)
    };
    var da = function (e) {
            return Hi(e, Hr, ua)
        },
        fa = Object.prototype.hasOwnProperty;
    var ha = function (e) {
        var n = e.length,
            t = new e.constructor(n);
        return n && "string" == typeof e[0] && fa.call(e, "index") && (t.index = e.index, t.input = e.input), t
    };
    var ya = function (e, n) {
            var t = n ? Jt(e.buffer) : e.buffer;
            return new e.constructor(t, e.byteOffset, e.byteLength)
        },
        ma = /\w*$/;
    var ga = function (e) {
            var n = new e.constructor(e.source, ma.exec(e));
            return n.lastIndex = e.lastIndex, n
        },
        va = Wn ? Wn.prototype : void 0,
        Pa = va ? va.valueOf : void 0;
    var xa = function (e) {
        return Pa ? Object(Pa.call(e)) : {}
    };
    var ba = function (e, n, t) {
        var r = e.constructor;
        switch (n) {
        case "[object ArrayBuffer]":
            return Jt(e);
        case "[object Boolean]":
        case "[object Date]":
            return new r(+e);
        case "[object DataView]":
            return ya(e, t);
        case "[object Float32Array]":
        case "[object Float64Array]":
        case "[object Int8Array]":
        case "[object Int16Array]":
        case "[object Int32Array]":
        case "[object Uint8Array]":
        case "[object Uint8ClampedArray]":
        case "[object Uint16Array]":
        case "[object Uint32Array]":
            return Qt(e, t);
        case "[object Map]":
            return new r;
        case "[object Number]":
        case "[object String]":
            return new r(e);
        case "[object RegExp]":
            return ga(e);
        case "[object Set]":
            return new r;
        case "[object Symbol]":
            return xa(e)
        }
    };
    var wa = function (e) {
            return sr(e) && "[object Map]" == go(e)
        },
        Da = Ar && Ar.isMap,
        Ga = Da ? kr(Da) : wa;
    var Ca = function (e) {
            return sr(e) && "[object Set]" == go(e)
        },
        Sa = Ar && Ar.isSet,
        Ia = Sa ? kr(Sa) : Ca,
        Ma = 1,
        ka = 2,
        Aa = 4,
        _a = "[object Arguments]",
        Oa = "[object Function]",
        La = "[object GeneratorFunction]",
        Ea = "[object Object]",
        Na = {};
    Na[_a] = Na["[object Array]"] = Na["[object ArrayBuffer]"] = Na["[object DataView]"] = Na["[object Boolean]"] = Na["[object Date]"] = Na["[object Float32Array]"] = Na["[object Float64Array]"] = Na["[object Int8Array]"] = Na["[object Int16Array]"] = Na["[object Int32Array]"] = Na["[object Map]"] = Na["[object Number]"] = Na[Ea] = Na["[object RegExp]"] = Na["[object Set]"] = Na["[object String]"] = Na["[object Symbol]"] = Na["[object Uint8Array]"] = Na["[object Uint8ClampedArray]"] = Na["[object Uint16Array]"] = Na["[object Uint32Array]"] = !0, Na["[object Error]"] = Na[Oa] = Na["[object WeakMap]"] = !1;
    var ja = function t(r, i, o, e, n, a) {
        var l, c = i & Ma,
            s = i & ka,
            u = i & Aa;
        if (o && (l = n ? o(r, e, n, a) : o(r)), void 0 !== l) return l;
        if (!ot(r)) return r;
        var p = yr(r);
        if (p) {
            if (l = ha(r), !c) return er(r, l)
        } else {
            var d = go(r),
                f = d == Oa || d == La;
            if (xr(r)) return Kt(r, c);
            if (d == Ea || d == _a || f && !n) {
                if (l = s || f ? {} : lr(r), !c) return s ? pa(r, ca(l, r)) : sa(r, la(l, r))
            } else {
                if (!Na[d]) return n ? r : {};
                l = ba(r, d, c)
            }
        }
        a || (a = new Yt);
        var h = a.get(r);
        if (h) return h;
        if (a.set(r, l), Ia(r)) return r.forEach(function (e) {
            l.add(t(e, i, o, e, r, a))
        }), l;
        if (Ga(r)) return r.forEach(function (e, n) {
            l.set(n, t(e, i, o, n, r, a))
        }), l;
        var y = u ? s ? da : Ji : s ? keysIn : pi,
            m = p ? void 0 : y(r);
        return di(m || r, function (e, n) {
            m && (e = r[n = e]), Nr(l, n, t(e, i, o, n, r, a))
        }), l
    };
    var Ta = function (e) {
            return ja(e, 5)
        },
        $a = {
            value: function () {}
        };

    function za() {
        for (var e, n = 0, t = arguments.length, r = {}; n < t; ++n) {
            if (!(e = arguments[n] + "") || e in r) throw new Error("illegal type: " + e);
            r[e] = []
        }
        return new Ba(r)
    }

    function Ba(e) {
        this._ = e
    }

    function qa(e, n) {
        for (var t, r = 0, i = e.length; r < i; ++r)
            if ((t = e[r]).name === n) return t.value
    }

    function Fa(e, n, t) {
        for (var r = 0, i = e.length; r < i; ++r)
            if (e[r].name === n) {
                e[r] = $a, e = e.slice(0, r).concat(e.slice(r + 1));
                break
            } return null != t && e.push({
            name: n,
            value: t
        }), e
    }

    function Ra() {
        N.preventDefault(), N.stopImmediatePropagation()
    }

    function Ua(e) {
        return function () {
            return e
        }
    }

    function Ya(n, t) {
        return function (e) {
            return n + e * t
        }
    }

    function Ha(o) {
        return 1 == (o = +o) ? Va : function (e, n) {
            return n - e ? (t = e, r = n, i = o, t = Math.pow(t, i), r = Math.pow(r, i) - t, i = 1 / i, function (e) {
                return Math.pow(t + e * r, i)
            }) : Ua(isNaN(e) ? n : e);
            var t, r, i
        }
    }

    function Va(e, n) {
        var t = n - e;
        return t ? Ya(e, t) : Ua(isNaN(e) ? n : e)
    }
    Ba.prototype = za.prototype = {
        constructor: Ba,
        on: function (e, n) {
            var t, r, i = this._,
                o = (r = i, (e + "").trim().split(/^|\s+/).map(function (e) {
                    var n = "",
                        t = e.indexOf(".");
                    if (0 <= t && (n = e.slice(t + 1), e = e.slice(0, t)), e && !r.hasOwnProperty(e)) throw new Error("unknown type: " + e);
                    return {
                        type: e,
                        name: n
                    }
                })),
                a = -1,
                l = o.length;
            if (!(arguments.length < 2)) {
                if (null != n && "function" != typeof n) throw new Error("invalid callback: " + n);
                for (; ++a < l;)
                    if (t = (e = o[a]).type) i[t] = Fa(i[t], e.name, n);
                    else if (null == n)
                    for (t in i) i[t] = Fa(i[t], e.name, null);
                return this
            }
            for (; ++a < l;)
                if ((t = (e = o[a]).type) && (t = qa(i[t], e.name))) return t
        },
        copy: function () {
            var e = {},
                n = this._;
            for (var t in n) e[t] = n[t].slice();
            return new Ba(e)
        },
        call: function (e, n) {
            if (0 < (t = arguments.length - 2))
                for (var t, r, i = new Array(t), o = 0; o < t; ++o) i[o] = arguments[o + 2];
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for (o = 0, t = (r = this._[e]).length; o < t; ++o) r[o].value.apply(n, i)
        },
        apply: function (e, n, t) {
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for (var r = this._[e], i = 0, o = r.length; i < o; ++i) r[i].value.apply(n, t)
        }
    };
    var Wa = function e(n) {
        var a = Ha(n);

        function t(n, e) {
            var t = a((n = Ke(n)).r, (e = Ke(e)).r),
                r = a(n.g, e.g),
                i = a(n.b, e.b),
                o = Va(n.opacity, e.opacity);
            return function (e) {
                return n.r = t(e), n.g = r(e), n.b = i(e), n.opacity = o(e), n + ""
            }
        }
        return t.gamma = e, t
    }(1);

    function Za(n, t) {
        return t -= n = +n,
            function (e) {
                return n + t * e
            }
    }
    var Ka = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    };
    var Xa = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        Ja = new RegExp(Xa.source, "g");

    function Qa(e, r) {
        var n, t, i, o, a, l = Xa.lastIndex = Ja.lastIndex = 0,
            c = -1,
            s = [],
            u = [];
        for (e += "", r += "";
            (n = Xa.exec(e)) && (t = Ja.exec(r));)(i = t.index) > l && (i = r.slice(l, i), s[c] ? s[c] += i : s[++c] = i), (n = n[0]) === (t = t[0]) ? s[c] ? s[c] += t : s[++c] = t : (s[++c] = null, u.push({
            i: c,
            x: Za(n, t)
        })), l = Ja.lastIndex;
        return l < r.length && (i = r.slice(l), s[c] ? s[c] += i : s[++c] = i), s.length < 2 ? u[0] ? (a = u[0].x, function (e) {
            return a(e) + ""
        }) : (o = r, function () {
            return o
        }) : (r = u.length, function (e) {
            for (var n, t = 0; t < r; ++t) s[(n = u[t]).i] = n.x(e);
            return s.join("")
        })
    }
    var el = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    };

    function nl(e, n) {
        var t, r = void 0 === n ? "undefined" : el(n);
        return null == n || "boolean" === r ? Ua(n) : ("number" === r ? Za : "string" === r ? (t = He(n)) ? (n = t, Wa) : Qa : n instanceof He ? Wa : n instanceof Date ? function (n, t) {
            var r = new Date;
            return t -= n = +n,
                function (e) {
                    return r.setTime(n + t * e), r
                }
        } : Array.isArray(n) ? function (e, n) {
            var t, r = n ? n.length : 0,
                i = e ? Math.min(r, e.length) : 0,
                o = new Array(i),
                a = new Array(r);
            for (t = 0; t < i; ++t) o[t] = nl(e[t], n[t]);
            for (; t < r; ++t) a[t] = n[t];
            return function (e) {
                for (t = 0; t < i; ++t) a[t] = o[t](e);
                return a
            }
        } : "function" != typeof n.valueOf && "function" != typeof n.toString || isNaN(n) ? function (e, n) {
            var t, r = {},
                i = {};
            for (t in null !== e && "object" === (void 0 === e ? "undefined" : Ka(e)) || (e = {}), null !== n && "object" === (void 0 === n ? "undefined" : Ka(n)) || (n = {}), n) t in e ? r[t] = nl(e[t], n[t]) : i[t] = n[t];
            return function (e) {
                for (t in r) i[t] = r[t](e);
                return i
            }
        } : Za)(e, n)
    }

    function tl(n, t) {
        return t -= n = +n,
            function (e) {
                return Math.round(n + t * e)
            }
    }
    var rl, il, ol, al, ll = 180 / Math.PI,
        cl = {
            translateX: 0,
            translateY: 0,
            rotate: 0,
            skewX: 0,
            scaleX: 1,
            scaleY: 1
        };

    function sl(e, n, t, r, i, o) {
        var a, l, c;
        return (a = Math.sqrt(e * e + n * n)) && (e /= a, n /= a), (c = e * t + n * r) && (t -= e * c, r -= n * c), (l = Math.sqrt(t * t + r * r)) && (t /= l, r /= l, c /= l), e * r < n * t && (e = -e, n = -n, c = -c, a = -a), {
            translateX: i,
            translateY: o,
            rotate: Math.atan2(n, e) * ll,
            skewX: Math.atan(c) * ll,
            scaleX: a,
            scaleY: l
        }
    }

    function ul(d, f, h, y) {
        function m(e) {
            return e.length ? e.pop() + " " : ""
        }
        return function (e, n) {
            var t, r, i, o, a, l, c, s, u = [],
                p = [];
            return e = d(e), n = d(n),
                function (e, n, t, r, i, o) {
                    if (e !== t || n !== r) {
                        var a = i.push("translate(", null, f, null, h);
                        o.push({
                            i: a - 4,
                            x: Za(e, t)
                        }, {
                            i: a - 2,
                            x: Za(n, r)
                        })
                    } else(t || r) && i.push("translate(" + t + f + r + h)
                }(e.translateX, e.translateY, n.translateX, n.translateY, u, p), t = e.rotate, r = n.rotate, i = u, o = p, t !== r ? (180 < t - r ? r += 360 : 180 < r - t && (t += 360), o.push({
                    i: i.push(m(i) + "rotate(", null, y) - 2,
                    x: Za(t, r)
                })) : r && i.push(m(i) + "rotate(" + r + y), a = e.skewX, l = n.skewX, c = u, s = p, a !== l ? s.push({
                    i: c.push(m(c) + "skewX(", null, y) - 2,
                    x: Za(a, l)
                }) : l && c.push(m(c) + "skewX(" + l + y),
                function (e, n, t, r, i, o) {
                    if (e !== t || n !== r) {
                        var a = i.push(m(i) + "scale(", null, ",", null, ")");
                        o.push({
                            i: a - 4,
                            x: Za(e, t)
                        }, {
                            i: a - 2,
                            x: Za(n, r)
                        })
                    } else 1 === t && 1 === r || i.push(m(i) + "scale(" + t + "," + r + ")")
                }(e.scaleX, e.scaleY, n.scaleX, n.scaleY, u, p), e = n = null,
                function (e) {
                    for (var n, t = -1, r = p.length; ++t < r;) u[(n = p[t]).i] = n.x(e);
                    return u.join("")
                }
        }
    }
    var pl = ul(function (e) {
            return "none" === e ? cl : (rl || (rl = document.createElement("DIV"), il = document.documentElement, ol = document.defaultView), rl.style.transform = e, e = ol.getComputedStyle(il.appendChild(rl), null).getPropertyValue("transform"), il.removeChild(rl), sl(+(e = e.slice(7, -1).split(","))[0], +e[1], +e[2], +e[3], +e[4], +e[5]))
        }, "px, ", "px)", "deg)"),
        dl = ul(function (e) {
            return null == e ? cl : (al || (al = document.createElementNS("http://www.w3.org/2000/svg", "g")), al.setAttribute("transform", e), (e = al.transform.baseVal.consolidate()) ? sl((e = e.matrix).a, e.b, e.c, e.d, e.e, e.f) : cl)
        }, ", ", ")", ")"),
        fl = Math.SQRT2,
        hl = 2,
        yl = 4,
        ml = 1e-12;

    function gl(e) {
        return ((e = Math.exp(e)) + 1 / e) / 2
    }

    function vl(e, n) {
        var t, a, l = e[0],
            c = e[1],
            s = e[2],
            r = n[0],
            i = n[1],
            o = n[2],
            u = r - l,
            p = i - c,
            d = u * u + p * p;
        if (d < ml) a = Math.log(o / s) / fl, t = function (e) {
            return [l + e * u, c + e * p, s * Math.exp(fl * e * a)]
        };
        else {
            var f = Math.sqrt(d),
                h = (o * o - s * s + yl * d) / (2 * s * hl * f),
                y = (o * o - s * s - yl * d) / (2 * o * hl * f),
                m = Math.log(Math.sqrt(h * h + 1) - h),
                g = Math.log(Math.sqrt(y * y + 1) - y);
            a = (g - m) / fl, t = function (e) {
                var n, t, r = e * a,
                    i = gl(m),
                    o = s / (hl * f) * (i * (t = fl * r + m, ((t = Math.exp(2 * t)) - 1) / (t + 1)) - (n = m, ((n = Math.exp(n)) - 1 / n) / 2));
                return [l + o * u, c + o * p, s * i / gl(fl * r + m)]
            }
        }
        return t.duration = 1e3 * a, t
    }

    function Pl(l) {
        return function e(a) {
            function n(n, e) {
                var t = l((n = Sn(n)).h, (e = Sn(e)).h),
                    r = Va(n.s, e.s),
                    i = Va(n.l, e.l),
                    o = Va(n.opacity, e.opacity);
                return function (e) {
                    return n.h = t(e), n.s = r(e), n.l = i(Math.pow(e, a)), n.opacity = o(e), n + ""
                }
            }
            return a = +a, n.gamma = e, n
        }(1)
    }
    Pl(function (e, n) {
        var t = n - e;
        return t ? Ya(e, 180 < t || t < -180 ? t - 360 * Math.round(t / 360) : t) : Ua(isNaN(e) ? n : e)
    });
    var xl = Pl(Va),
        bl = za("start", "end", "interrupt"),
        wl = [],
        Dl = 0,
        Gl = 1,
        Cl = 2,
        Sl = 3,
        Il = 4,
        Ml = 5,
        kl = 6;

    function Al(e, n, t, r, i, o) {
        var a = e.__transition;
        if (a) {
            if (t in a) return
        } else e.__transition = {};
        ! function (o, a, l) {
            var c, s = o.__transition;

            function u(e) {
                var n, t, r, i;
                if (l.state !== Gl) return d();
                for (n in s)
                    if ((i = s[n]).name === l.name) {
                        if (i.state === Sl) return he(u);
                        i.state === Il ? (i.state = kl, i.timer.stop(), i.on.call("interrupt", o, o.__data__, i.index, i.group), delete s[n]) : +n < a && (i.state = kl, i.timer.stop(), delete s[n])
                    } if (he(function () {
                        l.state === Sl && (l.state = Il, l.timer.restart(p, l.delay, l.time), p(e))
                    }), l.state = Cl, l.on.call("start", o, o.__data__, l.index, l.group), l.state === Cl) {
                    for (l.state = Sl, c = new Array(r = l.tween.length), n = 0, t = -1; n < r; ++n)(i = l.tween[n].value.call(o, o.__data__, l.index, l.group)) && (c[++t] = i);
                    c.length = t + 1
                }
            }

            function p(e) {
                for (var n = e < l.duration ? l.ease.call(null, e / l.duration) : (l.timer.restart(d), l.state = Ml, 1), t = -1, r = c.length; ++t < r;) c[t].call(null, n);
                l.state === Ml && (l.on.call("end", o, o.__data__, l.index, l.group), d())
            }

            function d() {
                for (var e in l.state = kl, l.timer.stop(), delete s[a], s) return;
                delete o.__transition
            }(s[a] = l).timer = ue(function (e) {
                l.state = Gl, l.timer.restart(u, l.delay, l.time), l.delay <= e && u(e - l.delay)
            }, 0, l.time)
        }(e, t, {
            name: n,
            index: r,
            group: i,
            on: bl,
            tween: wl,
            time: o.time,
            delay: o.delay,
            duration: o.duration,
            ease: o.ease,
            timer: null,
            state: Dl
        })
    }

    function _l(e, n) {
        var t = Ll(e, n);
        if (t.state > Dl) throw new Error("too late; already scheduled");
        return t
    }

    function Ol(e, n) {
        var t = Ll(e, n);
        if (t.state > Cl) throw new Error("too late; already started");
        return t
    }

    function Ll(e, n) {
        var t = e.__transition;
        if (!t || !(t = t[n])) throw new Error("transition not found");
        return t
    }

    function El(e, n) {
        var t, r, i, o = e.__transition,
            a = !0;
        if (o) {
            for (i in n = null == n ? null : n + "", o)(t = o[i]).name === n ? (r = t.state > Cl && t.state < Ml, t.state = kl, t.timer.stop(), r && t.on.call("interrupt", e, e.__data__, t.index, t.group), delete o[i]) : a = !1;
            a && delete e.__transition
        }
    }

    function Nl(e, n, t) {
        var r = e._id;
        return e.each(function () {
                var e = Ol(this, r);
                (e.value || (e.value = {}))[n] = t.apply(this, arguments)
            }),
            function (e) {
                return Ll(e, r).value[n]
            }
    }

    function jl(e, n) {
        var t;
        return ("number" == typeof n ? Za : n instanceof He ? Wa : (t = He(n)) ? (n = t, Wa) : Qa)(e, n)
    }
    var Tl = R.prototype.constructor;
    var $l = 0;

    function zl(e, n, t, r) {
        this._groups = e, this._parents = n, this._name = t, this._id = r
    }

    function Bl() {
        return ++$l
    }
    var ql = R.prototype;

    function Fl(e) {
        return +e
    }

    function Rl(e) {
        return e * e * e
    }
    zl.prototype = function (e) {
        return R().transition(e)
    }.prototype = {
        constructor: zl,
        select: function (e) {
            var n = this._name,
                t = this._id;
            "function" != typeof e && (e = f(e));
            for (var r = this._groups, i = r.length, o = new Array(i), a = 0; a < i; ++a)
                for (var l, c, s = r[a], u = s.length, p = o[a] = new Array(u), d = 0; d < u; ++d)(l = s[d]) && (c = e.call(l, l.__data__, d, s)) && ("__data__" in l && (c.__data__ = l.__data__), p[d] = c, Al(p[d], n, t, d, p, Ll(l, t)));
            return new zl(o, this._parents, n, t)
        },
        selectAll: function (e) {
            var n = this._name,
                t = this._id;
            "function" != typeof e && (e = g(e));
            for (var r = this._groups, i = r.length, o = [], a = [], l = 0; l < i; ++l)
                for (var c, s = r[l], u = s.length, p = 0; p < u; ++p)
                    if (c = s[p]) {
                        for (var d, f = e.call(c, c.__data__, p, s), h = Ll(c, t), y = 0, m = f.length; y < m; ++y)(d = f[y]) && Al(d, n, t, y, f, h);
                        o.push(f), a.push(c)
                    } return new zl(o, a, n, t)
        },
        filter: function (e) {
            "function" != typeof e && (e = u(e));
            for (var n = this._groups, t = n.length, r = new Array(t), i = 0; i < t; ++i)
                for (var o, a = n[i], l = a.length, c = r[i] = [], s = 0; s < l; ++s)(o = a[s]) && e.call(o, o.__data__, s, a) && c.push(o);
            return new zl(r, this._parents, this._name, this._id)
        },
        merge: function (e) {
            if (e._id !== this._id) throw new Error;
            for (var n = this._groups, t = e._groups, r = n.length, i = t.length, o = Math.min(r, i), a = new Array(r), l = 0; l < o; ++l)
                for (var c, s = n[l], u = t[l], p = s.length, d = a[l] = new Array(p), f = 0; f < p; ++f)(c = s[f] || u[f]) && (d[f] = c);
            for (; l < r; ++l) a[l] = n[l];
            return new zl(a, this._parents, this._name, this._id)
        },
        selection: function () {
            return new Tl(this._groups, this._parents)
        },
        transition: function () {
            for (var e = this._name, n = this._id, t = Bl(), r = this._groups, i = r.length, o = 0; o < i; ++o)
                for (var a, l = r[o], c = l.length, s = 0; s < c; ++s)
                    if (a = l[s]) {
                        var u = Ll(a, n);
                        Al(a, e, t, s, l, {
                            time: u.time + u.delay + u.duration,
                            delay: 0,
                            duration: u.duration,
                            ease: u.ease
                        })
                    } return new zl(r, this._parents, e, t)
        },
        call: ql.call,
        nodes: ql.nodes,
        node: ql.node,
        size: ql.size,
        empty: ql.empty,
        each: ql.each,
        on: function (e, n) {
            var t, r, i, o, a, l, c = this._id;
            return arguments.length < 2 ? Ll(this.node(), c).on.on(e) : this.each((t = c, i = n, l = ((r = e) + "").trim().split(/^|\s+/).every(function (e) {
                var n = e.indexOf(".");
                return 0 <= n && (e = e.slice(0, n)), !e || "start" === e
            }) ? _l : Ol, function () {
                var e = l(this, t),
                    n = e.on;
                n !== o && (a = (o = n).copy()).on(r, i), e.on = a
            }))
        },
        attr: function (e, n) {
            var t = o(e),
                r = "transform" === t ? dl : jl;
            return this.attrTween(e, "function" == typeof n ? (t.local ? function (t, r, i) {
                var o, a, l;
                return function () {
                    var e, n = i(this);
                    if (null != n) return (e = this.getAttributeNS(t.space, t.local)) === n ? null : e === o && n === a ? l : l = r(o = e, a = n);
                    this.removeAttributeNS(t.space, t.local)
                }
            } : function (t, r, i) {
                var o, a, l;
                return function () {
                    var e, n = i(this);
                    if (null != n) return (e = this.getAttribute(t)) === n ? null : e === o && n === a ? l : l = r(o = e, a = n);
                    this.removeAttribute(t)
                }
            })(t, r, Nl(this, "attr." + e, n)) : null == n ? (t.local ? function (e) {
                return function () {
                    this.removeAttributeNS(e.space, e.local)
                }
            } : function (e) {
                return function () {
                    this.removeAttribute(e)
                }
            })(t) : (t.local ? function (n, t, r) {
                var i, o;
                return function () {
                    var e = this.getAttributeNS(n.space, n.local);
                    return e === r ? null : e === i ? o : o = t(i = e, r)
                }
            } : function (n, t, r) {
                var i, o;
                return function () {
                    var e = this.getAttribute(n);
                    return e === r ? null : e === i ? o : o = t(i = e, r)
                }
            })(t, r, n + ""))
        },
        attrTween: function (e, n) {
            var t = "attr." + e;
            if (arguments.length < 2) return (t = this.tween(t)) && t._value;
            if (null == n) return this.tween(t, null);
            if ("function" != typeof n) throw new Error;
            var r = o(e);
            return this.tween(t, (r.local ? function (r, e) {
                function n() {
                    var n = this,
                        t = e.apply(n, arguments);
                    return t && function (e) {
                        n.setAttributeNS(r.space, r.local, t(e))
                    }
                }
                return n._value = e, n
            } : function (r, e) {
                function n() {
                    var n = this,
                        t = e.apply(n, arguments);
                    return t && function (e) {
                        n.setAttribute(r, t(e))
                    }
                }
                return n._value = e, n
            })(r, n))
        },
        style: function (e, n, t) {
            var r, i, o, a, l, c, s, u, p, d, f, h, y, m, g, v, P, x = "transform" == (e += "") ? pl : jl;
            return null == n ? this.styleTween(e, (y = e, m = x, function () {
                var e = b(this, y),
                    n = (this.style.removeProperty(y), b(this, y));
                return e === n ? null : e === g && n === v ? P : P = m(g = e, v = n)
            })).on("end.style." + e, (h = e, function () {
                this.style.removeProperty(h)
            })) : this.styleTween(e, "function" == typeof n ? (s = x, u = Nl(this, "style." + (c = e), n), function () {
                var e = b(this, c),
                    n = u(this);
                return null == n && (this.style.removeProperty(c), n = b(this, c)), e === n ? null : e === p && n === d ? f : f = s(p = e, d = n)
            }) : (r = e, i = x, o = n + "", function () {
                var e = b(this, r);
                return e === o ? null : e === a ? l : l = i(a = e, o)
            }), t)
        },
        styleTween: function (e, n, t) {
            var r = "style." + (e += "");
            if (arguments.length < 2) return (r = this.tween(r)) && r._value;
            if (null == n) return this.tween(r, null);
            if ("function" != typeof n) throw new Error;
            return this.tween(r, function (r, e, i) {
                function n() {
                    var n = this,
                        t = e.apply(n, arguments);
                    return t && function (e) {
                        n.style.setProperty(r, t(e), i)
                    }
                }
                return n._value = e, n
            }(e, n, null == t ? "" : t))
        },
        text: function (e) {
            return this.tween("text", "function" == typeof e ? (t = Nl(this, "text", e), function () {
                var e = t(this);
                this.textContent = null == e ? "" : e
            }) : (n = null == e ? "" : e + "", function () {
                this.textContent = n
            }));
            var n, t
        },
        remove: function () {
            return this.on("end.remove", (t = this._id, function () {
                var e = this.parentNode;
                for (var n in this.__transition)
                    if (+n !== t) return;
                e && e.removeChild(this)
            }));
            var t
        },
        tween: function (e, n) {
            var t = this._id;
            if (e += "", arguments.length < 2) {
                for (var r, i = Ll(this.node(), t).tween, o = 0, a = i.length; o < a; ++o)
                    if ((r = i[o]).name === e) return r.value;
                return null
            }
            return this.each((null == n ? function (i, o) {
                var a, l;
                return function () {
                    var e = Ol(this, i),
                        n = e.tween;
                    if (n !== a)
                        for (var t = 0, r = (l = a = n).length; t < r; ++t)
                            if (l[t].name === o) {
                                (l = l.slice()).splice(t, 1);
                                break
                            } e.tween = l
                }
            } : function (o, a, l) {
                var c, s;
                if ("function" != typeof l) throw new Error;
                return function () {
                    var e = Ol(this, o),
                        n = e.tween;
                    if (n !== c) {
                        s = (c = n).slice();
                        for (var t = {
                                name: a,
                                value: l
                            }, r = 0, i = s.length; r < i; ++r)
                            if (s[r].name === a) {
                                s[r] = t;
                                break
                            } r === i && s.push(t)
                    }
                    e.tween = s
                }
            })(t, e, n))
        },
        delay: function (e) {
            var n = this._id;
            return arguments.length ? this.each(("function" == typeof e ? function (e, n) {
                return function () {
                    _l(this, e).delay = +n.apply(this, arguments)
                }
            } : function (e, n) {
                return n = +n,
                    function () {
                        _l(this, e).delay = n
                    }
            })(n, e)) : Ll(this.node(), n).delay
        },
        duration: function (e) {
            var n = this._id;
            return arguments.length ? this.each(("function" == typeof e ? function (e, n) {
                return function () {
                    Ol(this, e).duration = +n.apply(this, arguments)
                }
            } : function (e, n) {
                return n = +n,
                    function () {
                        Ol(this, e).duration = n
                    }
            })(n, e)) : Ll(this.node(), n).duration
        },
        ease: function (e) {
            var n = this._id;
            return arguments.length ? this.each(function (e, n) {
                if ("function" != typeof n) throw new Error;
                return function () {
                    Ol(this, e).ease = n
                }
            }(n, e)) : Ll(this.node(), n).ease
        }
    };
    Math.PI, Math.PI;
    var Ul = {
        time: null,
        delay: 0,
        duration: 250,
        ease: function (e) {
            return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2
        }
    };

    function Yl(e, n) {
        for (var t; !(t = e.__transition) || !(t = t[n]);)
            if (!(e = e.parentNode)) return Ul.time = le(), Ul;
        return t
    }

    function Hl(e) {
        return function () {
            return e
        }
    }

    function Vl(e, n, t) {
        this.target = e, this.type = n, this.transform = t
    }

    function Wl(e, n, t) {
        this.k = e, this.x = n, this.y = t
    }
    R.prototype.interrupt = function (e) {
        return this.each(function () {
            El(this, e)
        })
    }, R.prototype.transition = function (e) {
        var n, t;
        e = e instanceof zl ? (n = e._id, e._name) : (n = Bl(), (t = Ul).time = le(), null == e ? null : e + "");
        for (var r = this._groups, i = r.length, o = 0; o < i; ++o)
            for (var a, l = r[o], c = l.length, s = 0; s < c; ++s)(a = l[s]) && Al(a, e, n, s, l, t || Yl(a, n));
        return new zl(r, this._parents, e, n)
    }, Wl.prototype = {
        constructor: Wl,
        scale: function (e) {
            return 1 === e ? this : new Wl(this.k * e, this.x, this.y)
        },
        translate: function (e, n) {
            return 0 === e & 0 === n ? this : new Wl(this.k, this.x + this.k * e, this.y + this.k * n)
        },
        apply: function (e) {
            return [e[0] * this.k + this.x, e[1] * this.k + this.y]
        },
        applyX: function (e) {
            return e * this.k + this.x
        },
        applyY: function (e) {
            return e * this.k + this.y
        },
        invert: function (e) {
            return [(e[0] - this.x) / this.k, (e[1] - this.y) / this.k]
        },
        invertX: function (e) {
            return (e - this.x) / this.k
        },
        invertY: function (e) {
            return (e - this.y) / this.k
        },
        rescaleX: function (e) {
            return e.copy().domain(e.range().map(this.invertX, this).map(e.invert, e))
        },
        rescaleY: function (e) {
            return e.copy().domain(e.range().map(this.invertY, this).map(e.invert, e))
        },
        toString: function () {
            return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")"
        }
    };
    var Zl = new Wl(1, 0, 0);

    function Kl() {
        N.stopImmediatePropagation()
    }

    function Xl() {
        N.preventDefault(), N.stopImmediatePropagation()
    }

    function Jl() {
        return !N.button
    }

    function Ql() {
        var e, n, t = this;
        return n = t instanceof SVGElement ? (e = (t = t.ownerSVGElement || t).width.baseVal.value, t.height.baseVal.value) : (e = t.clientWidth, t.clientHeight), [
            [0, 0],
            [e, n]
        ]
    }

    function ec() {
        return this.__zoom || Zl
    }

    function nc() {
        return -N.deltaY * (N.deltaMode ? 120 : 1) / 500
    }

    function tc() {
        return "ontouchstart" in this
    }

    function rc(e, n, t) {
        var r = e.invertX(n[0][0]) - t[0][0],
            i = e.invertX(n[1][0]) - t[1][0],
            o = e.invertY(n[0][1]) - t[0][1],
            a = e.invertY(n[1][1]) - t[1][1];
        return e.translate(r < i ? (r + i) / 2 : Math.min(0, r) || Math.max(0, i), o < a ? (o + a) / 2 : Math.min(0, o) || Math.max(0, a))
    }

    function ic() {
        var f, c, s = Jl,
            u = Ql,
            h = rc,
            i = nc,
            n = tc,
            o = [0, 1 / 0],
            y = [
                [-1 / 0, -1 / 0],
                [1 / 0, 1 / 0]
            ],
            a = 250,
            p = vl,
            l = [],
            t = za("start", "zoom", "end"),
            d = 500,
            m = 150,
            g = 0;

        function v(e) {
            e.property("__zoom", ec).on("wheel.zoom", r).on("mousedown.zoom", C).on("dblclick.zoom", S).filter(n).on("touchstart.zoom", I).on("touchmove.zoom", M).on("touchend.zoom touchcancel.zoom", k).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")
        }

        function P(e, n) {
            return (n = Math.max(o[0], Math.min(o[1], n))) === e.k ? e : new Wl(n, e.x, e.y)
        }

        function x(e, n, t) {
            var r = n[0] - t[0] * e.k,
                i = n[1] - t[1] * e.k;
            return r === e.x && i === e.y ? e : new Wl(e.k, r, i)
        }

        function b(e) {
            return [(+e[0][0] + +e[1][0]) / 2, (+e[0][1] + +e[1][1]) / 2]
        }

        function w(e, c, s) {
            e.on("start.zoom", function () {
                D(this, arguments).start()
            }).on("interrupt.zoom end.zoom", function () {
                D(this, arguments).end()
            }).tween("zoom", function () {
                var e = arguments,
                    r = D(this, e),
                    n = u.apply(this, e),
                    i = s || b(n),
                    o = Math.max(n[1][0] - n[0][0], n[1][1] - n[0][1]),
                    t = this.__zoom,
                    a = "function" == typeof c ? c.apply(this, e) : c,
                    l = p(t.invert(i).concat(o / t.k), a.invert(i).concat(o / a.k));
                return function (e) {
                    if (1 === e) e = a;
                    else {
                        var n = l(e),
                            t = o / n[2];
                        e = new Wl(t, i[0] - n[0] * t, i[1] - n[1] * t)
                    }
                    r.zoom(null, e)
                }
            })
        }

        function D(e, n) {
            for (var t, r = 0, i = l.length; r < i; ++r)
                if ((t = l[r]).that === e) return t;
            return new G(e, n)
        }

        function G(e, n) {
            this.that = e, this.args = n, this.index = -1, this.active = 0, this.extent = u.apply(e, n)
        }

        function r() {
            if (s.apply(this, arguments)) {
                var e = D(this, arguments),
                    n = this.__zoom,
                    t = Math.max(o[0], Math.min(o[1], n.k * Math.pow(2, i.apply(this, arguments)))),
                    r = V(this);
                if (e.wheel) e.mouse[0][0] === r[0] && e.mouse[0][1] === r[1] || (e.mouse[1] = n.invert(e.mouse[0] = r)), clearTimeout(e.wheel);
                else {
                    if (n.k === t) return;
                    e.mouse = [r, n.invert(r)], El(this), e.start()
                }
                Xl(), e.wheel = setTimeout(function () {
                    e.wheel = null, e.end()
                }, m), e.zoom("mouse", h(x(P(n, t), e.mouse[0], e.mouse[1]), e.extent, y))
            }
        }

        function C() {
            if (!c && s.apply(this, arguments)) {
                var e, n, t, i = D(this, arguments),
                    o = U(N.view).on("mousemove.zoom", function () {
                        if (Xl(), !i.moved) {
                            var e = N.clientX - a,
                                n = N.clientY - l;
                            i.moved = g < e * e + n * n
                        }
                        i.zoom("mouse", h(x(i.that.__zoom, i.mouse[0] = V(i.that), i.mouse[1]), i.extent, y))
                    }, !0).on("mouseup.zoom", function () {
                        o.on("mousemove.zoom mouseup.zoom", null), e = N.view, n = i.moved, t = e.document.documentElement, r = U(e).on("dragstart.drag", null), n && (r.on("click.drag", Ra, !0), setTimeout(function () {
                            r.on("click.drag", null)
                        }, 0)), "onselectstart" in t ? r.on("selectstart.drag", null) : (t.style.MozUserSelect = t.__noselect, delete t.__noselect), Xl(), i.end();
                        var e, n, t, r
                    }, !0),
                    r = V(this),
                    a = N.clientX,
                    l = N.clientY;
                e = N.view, n = e.document.documentElement, t = U(e).on("dragstart.drag", Ra, !0), "onselectstart" in n ? t.on("selectstart.drag", Ra, !0) : (n.__noselect = n.style.MozUserSelect, n.style.MozUserSelect = "none"), Kl(), i.mouse = [r, this.__zoom.invert(r)], El(this), i.start()
            }
        }

        function S() {
            if (s.apply(this, arguments)) {
                var e = this.__zoom,
                    n = V(this),
                    t = e.invert(n),
                    r = e.k * (N.shiftKey ? .5 : 2),
                    i = h(x(P(e, r), n, t), u.apply(this, arguments), y);
                Xl(), 0 < a ? U(this).transition().duration(a).call(w, i, n) : U(this).call(v.transform, i)
            }
        }

        function I() {
            if (s.apply(this, arguments)) {
                var e, n, t, r, i = D(this, arguments),
                    o = N.changedTouches,
                    a = o.length;
                for (Kl(), n = 0; n < a; ++n) r = [r = W(this, o, (t = o[n]).identifier), this.__zoom.invert(r), t.identifier], i.touch0 ? i.touch1 || (i.touch1 = r) : (i.touch0 = r, e = !0);
                if (f && (f = clearTimeout(f), !i.touch1)) return i.end(), void((r = U(this).on("dblclick.zoom")) && r.apply(this, arguments));
                e && (f = setTimeout(function () {
                    f = null
                }, d), El(this), i.start())
            }
        }

        function M() {
            var e, n, t, r, i = D(this, arguments),
                o = N.changedTouches,
                a = o.length;
            for (Xl(), f && (f = clearTimeout(f)), e = 0; e < a; ++e) t = W(this, o, (n = o[e]).identifier), i.touch0 && i.touch0[2] === n.identifier ? i.touch0[0] = t : i.touch1 && i.touch1[2] === n.identifier && (i.touch1[0] = t);
            if (n = i.that.__zoom, i.touch1) {
                var l = i.touch0[0],
                    c = i.touch0[1],
                    s = i.touch1[0],
                    u = i.touch1[1],
                    p = (p = s[0] - l[0]) * p + (p = s[1] - l[1]) * p,
                    d = (d = u[0] - c[0]) * d + (d = u[1] - c[1]) * d;
                n = P(n, Math.sqrt(p / d)), t = [(l[0] + s[0]) / 2, (l[1] + s[1]) / 2], r = [(c[0] + u[0]) / 2, (c[1] + u[1]) / 2]
            } else {
                if (!i.touch0) return;
                t = i.touch0[0], r = i.touch0[1]
            }
            i.zoom("touch", h(x(n, t, r), i.extent, y))
        }

        function k() {
            var e, n, t = D(this, arguments),
                r = N.changedTouches,
                i = r.length;
            for (Kl(), c && clearTimeout(c), c = setTimeout(function () {
                    c = null
                }, d), e = 0; e < i; ++e) n = r[e], t.touch0 && t.touch0[2] === n.identifier ? delete t.touch0 : t.touch1 && t.touch1[2] === n.identifier && delete t.touch1;
            t.touch1 && !t.touch0 && (t.touch0 = t.touch1, delete t.touch1), t.touch0 ? t.touch0[1] = this.__zoom.invert(t.touch0[0]) : t.end()
        }
        return v.transform = function (e, n) {
            var t = e.selection ? e.selection() : e;
            t.property("__zoom", ec), e !== t ? w(e, n) : t.interrupt().each(function () {
                D(this, arguments).start().zoom(null, "function" == typeof n ? n.apply(this, arguments) : n).end()
            })
        }, v.scaleBy = function (e, n) {
            v.scaleTo(e, function () {
                return this.__zoom.k * ("function" == typeof n ? n.apply(this, arguments) : n)
            })
        }, v.scaleTo = function (e, o) {
            v.transform(e, function () {
                var e = u.apply(this, arguments),
                    n = this.__zoom,
                    t = b(e),
                    r = n.invert(t),
                    i = "function" == typeof o ? o.apply(this, arguments) : o;
                return h(x(P(n, i), t, r), e, y)
            })
        }, v.translateBy = function (e, n, t) {
            v.transform(e, function () {
                return h(this.__zoom.translate("function" == typeof n ? n.apply(this, arguments) : n, "function" == typeof t ? t.apply(this, arguments) : t), u.apply(this, arguments), y)
            })
        }, v.translateTo = function (e, r, i) {
            v.transform(e, function () {
                var e = u.apply(this, arguments),
                    n = this.__zoom,
                    t = b(e);
                return h(Zl.translate(t[0], t[1]).scale(n.k).translate("function" == typeof r ? -r.apply(this, arguments) : -r, "function" == typeof i ? -i.apply(this, arguments) : -i), e, y)
            })
        }, G.prototype = {
            start: function () {
                return 1 == ++this.active && (this.index = l.push(this) - 1, this.emit("start")), this
            },
            zoom: function (e, n) {
                return this.mouse && "mouse" !== e && (this.mouse[1] = n.invert(this.mouse[0])), this.touch0 && "touch" !== e && (this.touch0[1] = n.invert(this.touch0[0])), this.touch1 && "touch" !== e && (this.touch1[1] = n.invert(this.touch1[0])), this.that.__zoom = n, this.emit("zoom"), this
            },
            end: function () {
                return 0 == --this.active && (l.splice(this.index, 1), this.index = -1, this.emit("end")), this
            },
            emit: function (e) {
                ! function (e, n, t, r) {
                    var i = N;
                    e.sourceEvent = N, N = e;
                    try {
                        n.apply(t, r)
                    } finally {
                        N = i
                    }
                }(new Vl(v, e, this.that.__zoom), t.apply, t, [e, this.that, this.args])
            }
        }, v.wheelDelta = function (e) {
            return arguments.length ? (i = "function" == typeof e ? e : Hl(+e), v) : i
        }, v.filter = function (e) {
            return arguments.length ? (s = "function" == typeof e ? e : Hl(!!e), v) : s
        }, v.touchable = function (e) {
            return arguments.length ? (n = "function" == typeof e ? e : Hl(!!e), v) : n
        }, v.extent = function (e) {
            return arguments.length ? (u = "function" == typeof e ? e : Hl([
                [+e[0][0], +e[0][1]],
                [+e[1][0], +e[1][1]]
            ]), v) : u
        }, v.scaleExtent = function (e) {
            return arguments.length ? (o[0] = +e[0], o[1] = +e[1], v) : [o[0], o[1]]
        }, v.translateExtent = function (e) {
            return arguments.length ? (y[0][0] = +e[0][0], y[1][0] = +e[1][0], y[0][1] = +e[0][1], y[1][1] = +e[1][1], v) : [
                [y[0][0], y[0][1]],
                [y[1][0], y[1][1]]
            ]
        }, v.constrain = function (e) {
            return arguments.length ? (h = e, v) : h
        }, v.duration = function (e) {
            return arguments.length ? (a = +e, v) : a
        }, v.interpolate = function (e) {
            return arguments.length ? (p = e, v) : p
        }, v.on = function () {
            var e = t.on.apply(t, arguments);
            return e === t ? v : e
        }, v.clickDistance = function (e) {
            return arguments.length ? (g = (e = +e) * e, v) : Math.sqrt(g)
        }, v
    }
    var oc = "$";

    function ac() {}

    function lc(e, n) {
        var t = new ac;
        if (e instanceof ac) e.each(function (e, n) {
            t.set(n, e)
        });
        else if (Array.isArray(e)) {
            var r, i = -1,
                o = e.length;
            if (null == n)
                for (; ++i < o;) t.set(i, e[i]);
            else
                for (; ++i < o;) t.set(n(r = e[i], i, e), r)
        } else if (e)
            for (var a in e) t.set(a, e[a]);
        return t
    }

    function cc() {}
    ac.prototype = lc.prototype = {
        constructor: ac,
        has: function (e) {
            return oc + e in this
        },
        get: function (e) {
            return this[oc + e]
        },
        set: function (e, n) {
            return this[oc + e] = n, this
        },
        remove: function (e) {
            var n = oc + e;
            return n in this && delete this[n]
        },
        clear: function () {
            for (var e in this) e[0] === oc && delete this[e]
        },
        keys: function () {
            var e = [];
            for (var n in this) n[0] === oc && e.push(n.slice(1));
            return e
        },
        values: function () {
            var e = [];
            for (var n in this) n[0] === oc && e.push(this[n]);
            return e
        },
        entries: function () {
            var e = [];
            for (var n in this) n[0] === oc && e.push({
                key: n.slice(1),
                value: this[n]
            });
            return e
        },
        size: function () {
            var e = 0;
            for (var n in this) n[0] === oc && ++e;
            return e
        },
        empty: function () {
            for (var e in this)
                if (e[0] === oc) return !1;
            return !0
        },
        each: function (e) {
            for (var n in this) n[0] === oc && e(this[n], n.slice(1), this)
        }
    };
    var sc = lc.prototype;
    cc.prototype = function (e, n) {
        var t = new cc;
        if (e instanceof cc) e.each(function (e) {
            t.add(e)
        });
        else if (e) {
            var r = -1,
                i = e.length;
            if (null == n)
                for (; ++r < i;) t.add(e[r]);
            else
                for (; ++r < i;) t.add(n(e[r], r, e))
        }
        return t
    }.prototype = {
        constructor: cc,
        has: sc.has,
        add: function (e) {
            return this[oc + (e += "")] = e, this
        },
        remove: sc.remove,
        clear: sc.clear,
        values: sc.keys,
        size: sc.size,
        empty: sc.empty,
        each: sc.each
    };
    var uc = Array.prototype,
        pc = uc.map,
        dc = uc.slice,
        fc = {
            name: "implicit"
        };

    function hc(e) {
        return function () {
            return e
        }
    }

    function yc(e) {
        return +e
    }
    var mc = [0, 1];

    function gc(n, t) {
        return (t -= n = +n) ? function (e) {
            return (e - n) / t
        } : hc(t)
    }

    function vc(e, n, t, r) {
        var i = e[0],
            o = e[1],
            a = n[0],
            l = n[1];
        return a = o < i ? (i = t(o, i), r(l, a)) : (i = t(i, o), r(a, l)),
            function (e) {
                return a(i(e))
            }
    }

    function Pc(t, e, n, r) {
        var i = Math.min(t.length, e.length) - 1,
            o = new Array(i),
            a = new Array(i),
            l = -1;
        for (t[i] < t[0] && (t = t.slice().reverse(), e = e.slice().reverse()); ++l < i;) o[l] = n(t[l], t[l + 1]), a[l] = r(e[l], e[l + 1]);
        return function (e) {
            var n = ve(t, e, 1, i) - 1;
            return a[n](o[n](e))
        }
    }

    function xc(e, n) {
        return n.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp())
    }

    function bc(n, t) {
        var r, o, a, l = mc,
            c = mc,
            s = nl,
            u = !1;

        function i() {
            return r = 2 < Math.min(l.length, c.length) ? Pc : vc, o = a = null, e
        }

        function e(e) {
            return (o || (o = r(l, c, u ? (i = n, function (n, t) {
                var r = i(n = +n, t = +t);
                return function (e) {
                    return e <= n ? 0 : t <= e ? 1 : r(e)
                }
            }) : n, s)))(+e);
            var i
        }
        return e.invert = function (e) {
            return (a || (a = r(c, l, gc, u ? (i = t, function (n, t) {
                var r = i(n = +n, t = +t);
                return function (e) {
                    return e <= 0 ? n : 1 <= e ? t : r(e)
                }
            }) : t)))(+e);
            var i
        }, e.domain = function (e) {
            return arguments.length ? (l = pc.call(e, yc), i()) : l.slice()
        }, e.range = function (e) {
            return arguments.length ? (c = dc.call(e), i()) : c.slice()
        }, e.rangeRound = function (e) {
            return c = dc.call(e), s = tl, i()
        }, e.clamp = function (e) {
            return arguments.length ? (u = !!e, i()) : u
        }, e.interpolate = function (e) {
            return arguments.length ? (s = e, i()) : s
        }, i()
    }

    function wc(e, n) {
        if ((t = (e = n ? e.toExponential(n - 1) : e.toExponential()).indexOf("e")) < 0) return null;
        var t, r = e.slice(0, t);
        return [1 < r.length ? r[0] + r.slice(2) : r, +e.slice(t + 1)]
    }

    function Dc(e) {
        return (e = wc(Math.abs(e))) ? e[1] : NaN
    }
    var Gc, Cc = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

    function Sc(e) {
        return new Ic(e)
    }

    function Ic(e) {
        if (!(n = Cc.exec(e))) throw new Error("invalid format: " + e);
        var n;
        this.fill = n[1] || " ", this.align = n[2] || ">", this.sign = n[3] || "-", this.symbol = n[4] || "", this.zero = !!n[5], this.width = n[6] && +n[6], this.comma = !!n[7], this.precision = n[8] && +n[8].slice(1), this.trim = !!n[9], this.type = n[10] || ""
    }

    function Mc(e, n) {
        var t = wc(e, n);
        if (!t) return e + "";
        var r = t[0],
            i = t[1];
        return i < 0 ? "0." + new Array(-i).join("0") + r : r.length > i + 1 ? r.slice(0, i + 1) + "." + r.slice(i + 1) : r + new Array(i - r.length + 2).join("0")
    }
    Sc.prototype = Ic.prototype, Ic.prototype.toString = function () {
        return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (null == this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (null == this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type
    };
    var kc = {
        "%": function (e, n) {
            return (100 * e).toFixed(n)
        },
        b: function (e) {
            return Math.round(e).toString(2)
        },
        c: function (e) {
            return e + ""
        },
        d: function (e) {
            return Math.round(e).toString(10)
        },
        e: function (e, n) {
            return e.toExponential(n)
        },
        f: function (e, n) {
            return e.toFixed(n)
        },
        g: function (e, n) {
            return e.toPrecision(n)
        },
        o: function (e) {
            return Math.round(e).toString(8)
        },
        p: function (e, n) {
            return Mc(100 * e, n)
        },
        r: Mc,
        s: function (e, n) {
            var t = wc(e, n);
            if (!t) return e + "";
            var r = t[0],
                i = t[1],
                o = i - (Gc = 3 * Math.max(-8, Math.min(8, Math.floor(i / 3)))) + 1,
                a = r.length;
            return o === a ? r : a < o ? r + new Array(o - a + 1).join("0") : 0 < o ? r.slice(0, o) + "." + r.slice(o) : "0." + new Array(1 - o).join("0") + wc(e, Math.max(0, n + o - 1))[0]
        },
        X: function (e) {
            return Math.round(e).toString(16).toUpperCase()
        },
        x: function (e) {
            return Math.round(e).toString(16)
        }
    };

    function Ac(e) {
        return e
    }
    var _c, Oc, Lc, Ec = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

    function Nc(e) {
        var n, l, c, w = e.grouping && e.thousands ? (l = e.grouping, c = e.thousands, function (e, n) {
                for (var t = e.length, r = [], i = 0, o = l[0], a = 0; 0 < t && 0 < o && (n < a + o + 1 && (o = Math.max(1, n - a)), r.push(e.substring(t -= o, t + o)), !((a += o + 1) > n));) o = l[i = (i + 1) % l.length];
                return r.reverse().join(c)
            }) : Ac,
            r = e.currency,
            D = e.decimal,
            G = e.numerals ? (n = e.numerals, function (e) {
                return e.replace(/[0-9]/g, function (e) {
                    return n[+e]
                })
            }) : Ac,
            i = e.percent || "%";

        function a(e) {
            var s = (e = Sc(e)).fill,
                u = e.align,
                p = e.sign,
                n = e.symbol,
                d = e.zero,
                f = e.width,
                h = e.comma,
                y = e.precision,
                m = e.trim,
                g = e.type;
            "n" === g ? (h = !0, g = "g") : kc[g] || (null == y && (y = 12), m = !0, g = "g"), (d || "0" === s && "=" === u) && (d = !0, s = "0", u = "=");
            var v = "$" === n ? r[0] : "#" === n && /[boxX]/.test(g) ? "0" + g.toLowerCase() : "",
                P = "$" === n ? r[1] : /[%p]/.test(g) ? i : "",
                x = kc[g],
                b = /[defgprs%]/.test(g);

            function t(e) {
                var n, t, r, i = v,
                    o = P;
                if ("c" === g) o = x(e) + o, e = "";
                else {
                    var a = (e = +e) < 0;
                    if (e = x(Math.abs(e), y), m && (e = function (e) {
                            e: for (var n, t = e.length, r = 1, i = -1; r < t; ++r) switch (e[r]) {
                            case ".":
                                i = n = r;
                                break;
                            case "0":
                                0 === i && (i = r), n = r;
                                break;
                            default:
                                if (0 < i) {
                                    if (!+e[r]) break e;
                                    i = 0
                                }
                            }
                            return 0 < i ? e.slice(0, i) + e.slice(n + 1) : e
                        }(e)), a && 0 == +e && (a = !1), i = (a ? "(" === p ? p : "-" : "-" === p || "(" === p ? "" : p) + i, o = ("s" === g ? Ec[8 + Gc / 3] : "") + o + (a && "(" === p ? ")" : ""), b)
                        for (n = -1, t = e.length; ++n < t;)
                            if ((r = e.charCodeAt(n)) < 48 || 57 < r) {
                                o = (46 === r ? D + e.slice(n + 1) : e.slice(n)) + o, e = e.slice(0, n);
                                break
                            }
                }
                h && !d && (e = w(e, 1 / 0));
                var l = i.length + e.length + o.length,
                    c = l < f ? new Array(f - l + 1).join(s) : "";
                switch (h && d && (e = w(c + e, c.length ? f - o.length : 1 / 0), c = ""), u) {
                case "<":
                    e = i + e + o + c;
                    break;
                case "=":
                    e = i + c + e + o;
                    break;
                case "^":
                    e = c.slice(0, l = c.length >> 1) + i + e + o + c.slice(l);
                    break;
                default:
                    e = c + i + e + o
                }
                return G(e)
            }
            return y = null == y ? 6 : /[gprs]/.test(g) ? Math.max(1, Math.min(21, y)) : Math.max(0, Math.min(20, y)), t.toString = function () {
                return e + ""
            }, t
        }
        return {
            format: a,
            formatPrefix: function (e, n) {
                var t = a(((e = Sc(e)).type = "f", e)),
                    r = 3 * Math.max(-8, Math.min(8, Math.floor(Dc(n) / 3))),
                    i = Math.pow(10, -r),
                    o = Ec[8 + r / 3];
                return function (e) {
                    return t(i * e) + o
                }
            }
        }
    }

    function jc(e, n, t) {
        var r, i, o, a, l, c, s = e[0],
            u = e[e.length - 1],
            p = Se(s, u, null == n ? 10 : n);
        switch ((t = Sc(null == t ? ",f" : t)).type) {
        case "s":
            var d = Math.max(Math.abs(s), Math.abs(u));
            return null != t.precision || isNaN((l = p, c = d, r = Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(Dc(c) / 3))) - Dc(Math.abs(l))))) || (t.precision = r), Lc(t, d);
        case "":
        case "e":
        case "g":
        case "p":
        case "r":
            null != t.precision || isNaN((o = p, a = Math.max(Math.abs(s), Math.abs(u)), o = Math.abs(o), a = Math.abs(a) - o, r = Math.max(0, Dc(a) - Dc(o)) + 1)) || (t.precision = r - ("e" === t.type));
            break;
        case "f":
        case "%":
            null != t.precision || isNaN((i = p, r = Math.max(0, -Dc(Math.abs(i))))) || (t.precision = r - 2 * ("%" === t.type))
        }
        return Oc(t)
    }

    function Tc(l) {
        var c = l.domain;
        return l.ticks = function (e) {
            var n = c();
            return Ce(n[0], n[n.length - 1], null == e ? 10 : e)
        }, l.tickFormat = function (e, n) {
            return jc(c(), e, n)
        }, l.nice = function (e) {
            var n = c(),
                t = n.length - 1,
                r = null == e ? 10 : e,
                i = n[0],
                o = n[t],
                a = Se(i, o, r);
            return a && (a = Se(Math.floor(i / a) * a, Math.ceil(o / a) * a, r), n[0] = Math.floor(i / a) * a, n[t] = Math.ceil(o / a) * a, c(n)), l
        }, l
    }

    function $c() {
        var e = bc(gc, Za);
        return e.copy = function () {
            return xc(e, $c())
        }, Tc(e)
    }

    function zc(e, n) {
        return e < 0 ? -Math.pow(-e, n) : Math.pow(e, n)
    }

    function Bc() {
        var r = 1,
            e = bc(function (n, t) {
                return (t = zc(t, r) - (n = zc(n, r))) ? function (e) {
                    return (zc(e, r) - n) / t
                } : hc(t)
            }, function (n, t) {
                return t = zc(t, r) - (n = zc(n, r)),
                    function (e) {
                        return zc(n + t * e, 1 / r)
                    }
            }),
            n = e.domain;
        return e.exponent = function (e) {
            return arguments.length ? (r = +e, n(n())) : r
        }, e.copy = function () {
            return xc(e, Bc().exponent(r))
        }, Tc(e)
    }
    _c = Nc({
        decimal: ".",
        thousands: ",",
        grouping: [3],
        currency: ["$", ""]
    }), Oc = _c.format, Lc = _c.formatPrefix;
    var qc = new Date,
        Fc = new Date;

    function Rc(o, a, t, r) {
        function l(e) {
            return o(e = new Date(+e)), e
        }
        return (l.floor = l).ceil = function (e) {
            return o(e = new Date(e - 1)), a(e, 1), o(e), e
        }, l.round = function (e) {
            var n = l(e),
                t = l.ceil(e);
            return e - n < t - e ? n : t
        }, l.offset = function (e, n) {
            return a(e = new Date(+e), null == n ? 1 : Math.floor(n)), e
        }, l.range = function (e, n, t) {
            var r, i = [];
            if (e = l.ceil(e), t = null == t ? 1 : Math.floor(t), !(e < n && 0 < t)) return i;
            for (; i.push(r = new Date(+e)), a(e, t), o(e), r < e && e < n;);
            return i
        }, l.filter = function (t) {
            return Rc(function (e) {
                if (e <= e)
                    for (; o(e), !t(e);) e.setTime(e - 1)
            }, function (e, n) {
                if (e <= e)
                    if (n < 0)
                        for (; ++n <= 0;)
                            for (; a(e, -1), !t(e););
                    else
                        for (; 0 <= --n;)
                            for (; a(e, 1), !t(e););
            })
        }, t && (l.count = function (e, n) {
            return qc.setTime(+e), Fc.setTime(+n), o(qc), o(Fc), Math.floor(t(qc, Fc))
        }, l.every = function (n) {
            return n = Math.floor(n), isFinite(n) && 0 < n ? 1 < n ? l.filter(r ? function (e) {
                return r(e) % n == 0
            } : function (e) {
                return l.count(0, e) % n == 0
            }) : l : null
        }), l
    }
    var Uc = Rc(function () {}, function (e, n) {
        e.setTime(+e + n)
    }, function (e, n) {
        return n - e
    });
    Uc.every = function (t) {
        return t = Math.floor(t), isFinite(t) && 0 < t ? 1 < t ? Rc(function (e) {
            e.setTime(Math.floor(e / t) * t)
        }, function (e, n) {
            e.setTime(+e + n * t)
        }, function (e, n) {
            return (n - e) / t
        }) : Uc : null
    };
    Uc.range;
    var Yc = 6e4,
        Hc = 36e5,
        Vc = (Rc(function (e) {
            e.setTime(1e3 * Math.floor(e / 1e3))
        }, function (e, n) {
            e.setTime(+e + 1e3 * n)
        }, function (e, n) {
            return (n - e) / 1e3
        }, function (e) {
            return e.getUTCSeconds()
        }).range, Rc(function (e) {
            e.setTime(Math.floor(e / Yc) * Yc)
        }, function (e, n) {
            e.setTime(+e + n * Yc)
        }, function (e, n) {
            return (n - e) / Yc
        }, function (e) {
            return e.getMinutes()
        }).range, Rc(function (e) {
            var n = e.getTimezoneOffset() * Yc % Hc;
            n < 0 && (n += Hc), e.setTime(Math.floor((+e - n) / Hc) * Hc + n)
        }, function (e, n) {
            e.setTime(+e + n * Hc)
        }, function (e, n) {
            return (n - e) / Hc
        }, function (e) {
            return e.getHours()
        }).range, Rc(function (e) {
            e.setHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setDate(e.getDate() + n)
        }, function (e, n) {
            return (n - e - (n.getTimezoneOffset() - e.getTimezoneOffset()) * Yc) / 864e5
        }, function (e) {
            return e.getDate() - 1
        }));
    Vc.range;

    function Wc(n) {
        return Rc(function (e) {
            e.setDate(e.getDate() - (e.getDay() + 7 - n) % 7), e.setHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setDate(e.getDate() + 7 * n)
        }, function (e, n) {
            return (n - e - (n.getTimezoneOffset() - e.getTimezoneOffset()) * Yc) / 6048e5
        })
    }
    var Zc = Wc(0),
        Kc = Wc(1),
        Xc = (Wc(2), Wc(3), Wc(4)),
        Jc = (Wc(5), Wc(6), Zc.range, Kc.range, Xc.range, Rc(function (e) {
            e.setDate(1), e.setHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setMonth(e.getMonth() + n)
        }, function (e, n) {
            return n.getMonth() - e.getMonth() + 12 * (n.getFullYear() - e.getFullYear())
        }, function (e) {
            return e.getMonth()
        }).range, Rc(function (e) {
            e.setMonth(0, 1), e.setHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setFullYear(e.getFullYear() + n)
        }, function (e, n) {
            return n.getFullYear() - e.getFullYear()
        }, function (e) {
            return e.getFullYear()
        }));
    Jc.every = function (t) {
        return isFinite(t = Math.floor(t)) && 0 < t ? Rc(function (e) {
            e.setFullYear(Math.floor(e.getFullYear() / t) * t), e.setMonth(0, 1), e.setHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setFullYear(e.getFullYear() + n * t)
        }) : null
    };
    Jc.range, Rc(function (e) {
        e.setUTCSeconds(0, 0)
    }, function (e, n) {
        e.setTime(+e + n * Yc)
    }, function (e, n) {
        return (n - e) / Yc
    }, function (e) {
        return e.getUTCMinutes()
    }).range, Rc(function (e) {
        e.setUTCMinutes(0, 0, 0)
    }, function (e, n) {
        e.setTime(+e + n * Hc)
    }, function (e, n) {
        return (n - e) / Hc
    }, function (e) {
        return e.getUTCHours()
    }).range;
    var Qc = Rc(function (e) {
        e.setUTCHours(0, 0, 0, 0)
    }, function (e, n) {
        e.setUTCDate(e.getUTCDate() + n)
    }, function (e, n) {
        return (n - e) / 864e5
    }, function (e) {
        return e.getUTCDate() - 1
    });
    Qc.range;

    function es(n) {
        return Rc(function (e) {
            e.setUTCDate(e.getUTCDate() - (e.getUTCDay() + 7 - n) % 7), e.setUTCHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setUTCDate(e.getUTCDate() + 7 * n)
        }, function (e, n) {
            return (n - e) / 6048e5
        })
    }
    var ns = es(0),
        ts = es(1),
        rs = (es(2), es(3), es(4)),
        is = (es(5), es(6), ns.range, ts.range, rs.range, Rc(function (e) {
            e.setUTCDate(1), e.setUTCHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setUTCMonth(e.getUTCMonth() + n)
        }, function (e, n) {
            return n.getUTCMonth() - e.getUTCMonth() + 12 * (n.getUTCFullYear() - e.getUTCFullYear())
        }, function (e) {
            return e.getUTCMonth()
        }).range, Rc(function (e) {
            e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setUTCFullYear(e.getUTCFullYear() + n)
        }, function (e, n) {
            return n.getUTCFullYear() - e.getUTCFullYear()
        }, function (e) {
            return e.getUTCFullYear()
        }));
    is.every = function (t) {
        return isFinite(t = Math.floor(t)) && 0 < t ? Rc(function (e) {
            e.setUTCFullYear(Math.floor(e.getUTCFullYear() / t) * t), e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0)
        }, function (e, n) {
            e.setUTCFullYear(e.getUTCFullYear() + n * t)
        }) : null
    };
    is.range;

    function os(e) {
        if (0 <= e.y && e.y < 100) {
            var n = new Date(-1, e.m, e.d, e.H, e.M, e.S, e.L);
            return n.setFullYear(e.y), n
        }
        return new Date(e.y, e.m, e.d, e.H, e.M, e.S, e.L)
    }

    function as(e) {
        if (0 <= e.y && e.y < 100) {
            var n = new Date(Date.UTC(-1, e.m, e.d, e.H, e.M, e.S, e.L));
            return n.setUTCFullYear(e.y), n
        }
        return new Date(Date.UTC(e.y, e.m, e.d, e.H, e.M, e.S, e.L))
    }

    function ls(e) {
        return {
            y: e,
            m: 0,
            d: 1,
            H: 0,
            M: 0,
            S: 0,
            L: 0
        }
    }
    var cs, ss, us, ps = {
            "-": "",
            _: " ",
            0: "0"
        },
        ds = /^\s*\d+/,
        fs = /^%/,
        hs = /[\\^$*+?|[\]().{}]/g;

    function ys(e, n, t) {
        var r = e < 0 ? "-" : "",
            i = (r ? -e : e) + "",
            o = i.length;
        return r + (o < t ? new Array(t - o + 1).join(n) + i : i)
    }

    function ms(e) {
        return e.replace(hs, "\\$&")
    }

    function gs(e) {
        return new RegExp("^(?:" + e.map(ms).join("|") + ")", "i")
    }

    function vs(e) {
        for (var n = {}, t = -1, r = e.length; ++t < r;) n[e[t].toLowerCase()] = t;
        return n
    }

    function Ps(e, n, t) {
        var r = ds.exec(n.slice(t, t + 1));
        return r ? (e.w = +r[0], t + r[0].length) : -1
    }

    function xs(e, n, t) {
        var r = ds.exec(n.slice(t, t + 1));
        return r ? (e.u = +r[0], t + r[0].length) : -1
    }

    function bs(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.U = +r[0], t + r[0].length) : -1
    }

    function ws(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.V = +r[0], t + r[0].length) : -1
    }

    function Ds(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.W = +r[0], t + r[0].length) : -1
    }

    function Gs(e, n, t) {
        var r = ds.exec(n.slice(t, t + 4));
        return r ? (e.y = +r[0], t + r[0].length) : -1
    }

    function Cs(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.y = +r[0] + (68 < +r[0] ? 1900 : 2e3), t + r[0].length) : -1
    }

    function Ss(e, n, t) {
        var r = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(t, t + 6));
        return r ? (e.Z = r[1] ? 0 : -(r[2] + (r[3] || "00")), t + r[0].length) : -1
    }

    function Is(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.m = r[0] - 1, t + r[0].length) : -1
    }

    function Ms(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.d = +r[0], t + r[0].length) : -1
    }

    function ks(e, n, t) {
        var r = ds.exec(n.slice(t, t + 3));
        return r ? (e.m = 0, e.d = +r[0], t + r[0].length) : -1
    }

    function As(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.H = +r[0], t + r[0].length) : -1
    }

    function _s(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.M = +r[0], t + r[0].length) : -1
    }

    function Os(e, n, t) {
        var r = ds.exec(n.slice(t, t + 2));
        return r ? (e.S = +r[0], t + r[0].length) : -1
    }

    function Ls(e, n, t) {
        var r = ds.exec(n.slice(t, t + 3));
        return r ? (e.L = +r[0], t + r[0].length) : -1
    }

    function Es(e, n, t) {
        var r = ds.exec(n.slice(t, t + 6));
        return r ? (e.L = Math.floor(r[0] / 1e3), t + r[0].length) : -1
    }

    function Ns(e, n, t) {
        var r = fs.exec(n.slice(t, t + 1));
        return r ? t + r[0].length : -1
    }

    function js(e, n, t) {
        var r = ds.exec(n.slice(t));
        return r ? (e.Q = +r[0], t + r[0].length) : -1
    }

    function Ts(e, n, t) {
        var r = ds.exec(n.slice(t));
        return r ? (e.Q = 1e3 * +r[0], t + r[0].length) : -1
    }

    function $s(e, n) {
        return ys(e.getDate(), n, 2)
    }

    function zs(e, n) {
        return ys(e.getHours(), n, 2)
    }

    function Bs(e, n) {
        return ys(e.getHours() % 12 || 12, n, 2)
    }

    function qs(e, n) {
        return ys(1 + Vc.count(Jc(e), e), n, 3)
    }

    function Fs(e, n) {
        return ys(e.getMilliseconds(), n, 3)
    }

    function Rs(e, n) {
        return Fs(e, n) + "000"
    }

    function Us(e, n) {
        return ys(e.getMonth() + 1, n, 2)
    }

    function Ys(e, n) {
        return ys(e.getMinutes(), n, 2)
    }

    function Hs(e, n) {
        return ys(e.getSeconds(), n, 2)
    }

    function Vs(e) {
        var n = e.getDay();
        return 0 === n ? 7 : n
    }

    function Ws(e, n) {
        return ys(Zc.count(Jc(e), e), n, 2)
    }

    function Zs(e, n) {
        var t = e.getDay();
        return e = 4 <= t || 0 === t ? Xc(e) : Xc.ceil(e), ys(Xc.count(Jc(e), e) + (4 === Jc(e).getDay()), n, 2)
    }

    function Ks(e) {
        return e.getDay()
    }

    function Xs(e, n) {
        return ys(Kc.count(Jc(e), e), n, 2)
    }

    function Js(e, n) {
        return ys(e.getFullYear() % 100, n, 2)
    }

    function Qs(e, n) {
        return ys(e.getFullYear() % 1e4, n, 4)
    }

    function eu(e) {
        var n = e.getTimezoneOffset();
        return (0 < n ? "-" : (n *= -1, "+")) + ys(n / 60 | 0, "0", 2) + ys(n % 60, "0", 2)
    }

    function nu(e, n) {
        return ys(e.getUTCDate(), n, 2)
    }

    function tu(e, n) {
        return ys(e.getUTCHours(), n, 2)
    }

    function ru(e, n) {
        return ys(e.getUTCHours() % 12 || 12, n, 2)
    }

    function iu(e, n) {
        return ys(1 + Qc.count(is(e), e), n, 3)
    }

    function ou(e, n) {
        return ys(e.getUTCMilliseconds(), n, 3)
    }

    function au(e, n) {
        return ou(e, n) + "000"
    }

    function lu(e, n) {
        return ys(e.getUTCMonth() + 1, n, 2)
    }

    function cu(e, n) {
        return ys(e.getUTCMinutes(), n, 2)
    }

    function su(e, n) {
        return ys(e.getUTCSeconds(), n, 2)
    }

    function uu(e) {
        var n = e.getUTCDay();
        return 0 === n ? 7 : n
    }

    function pu(e, n) {
        return ys(ns.count(is(e), e), n, 2)
    }

    function du(e, n) {
        var t = e.getUTCDay();
        return e = 4 <= t || 0 === t ? rs(e) : rs.ceil(e), ys(rs.count(is(e), e) + (4 === is(e).getUTCDay()), n, 2)
    }

    function fu(e) {
        return e.getUTCDay()
    }

    function hu(e, n) {
        return ys(ts.count(is(e), e), n, 2)
    }

    function yu(e, n) {
        return ys(e.getUTCFullYear() % 100, n, 2)
    }

    function mu(e, n) {
        return ys(e.getUTCFullYear() % 1e4, n, 4)
    }

    function gu() {
        return "+0000"
    }

    function vu() {
        return "%"
    }

    function Pu(e) {
        return +e
    }

    function xu(e) {
        return Math.floor(+e / 1e3)
    }
    cs = function (e) {
        var r = e.dateTime,
            i = e.date,
            o = e.time,
            n = e.periods,
            t = e.days,
            a = e.shortDays,
            l = e.months,
            c = e.shortMonths,
            s = gs(n),
            u = vs(n),
            p = gs(t),
            d = vs(t),
            f = gs(a),
            h = vs(a),
            y = gs(l),
            m = vs(l),
            g = gs(c),
            v = vs(c),
            P = {
                a: function (e) {
                    return a[e.getDay()]
                },
                A: function (e) {
                    return t[e.getDay()]
                },
                b: function (e) {
                    return c[e.getMonth()]
                },
                B: function (e) {
                    return l[e.getMonth()]
                },
                c: null,
                d: $s,
                e: $s,
                f: Rs,
                H: zs,
                I: Bs,
                j: qs,
                L: Fs,
                m: Us,
                M: Ys,
                p: function (e) {
                    return n[+(12 <= e.getHours())]
                },
                Q: Pu,
                s: xu,
                S: Hs,
                u: Vs,
                U: Ws,
                V: Zs,
                w: Ks,
                W: Xs,
                x: null,
                X: null,
                y: Js,
                Y: Qs,
                Z: eu,
                "%": vu
            },
            x = {
                a: function (e) {
                    return a[e.getUTCDay()]
                },
                A: function (e) {
                    return t[e.getUTCDay()]
                },
                b: function (e) {
                    return c[e.getUTCMonth()]
                },
                B: function (e) {
                    return l[e.getUTCMonth()]
                },
                c: null,
                d: nu,
                e: nu,
                f: au,
                H: tu,
                I: ru,
                j: iu,
                L: ou,
                m: lu,
                M: cu,
                p: function (e) {
                    return n[+(12 <= e.getUTCHours())]
                },
                Q: Pu,
                s: xu,
                S: su,
                u: uu,
                U: pu,
                V: du,
                w: fu,
                W: hu,
                x: null,
                X: null,
                y: yu,
                Y: mu,
                Z: gu,
                "%": vu
            },
            b = {
                a: function (e, n, t) {
                    var r = f.exec(n.slice(t));
                    return r ? (e.w = h[r[0].toLowerCase()], t + r[0].length) : -1
                },
                A: function (e, n, t) {
                    var r = p.exec(n.slice(t));
                    return r ? (e.w = d[r[0].toLowerCase()], t + r[0].length) : -1
                },
                b: function (e, n, t) {
                    var r = g.exec(n.slice(t));
                    return r ? (e.m = v[r[0].toLowerCase()], t + r[0].length) : -1
                },
                B: function (e, n, t) {
                    var r = y.exec(n.slice(t));
                    return r ? (e.m = m[r[0].toLowerCase()], t + r[0].length) : -1
                },
                c: function (e, n, t) {
                    return G(e, r, n, t)
                },
                d: Ms,
                e: Ms,
                f: Es,
                H: As,
                I: As,
                j: ks,
                L: Ls,
                m: Is,
                M: _s,
                p: function (e, n, t) {
                    var r = s.exec(n.slice(t));
                    return r ? (e.p = u[r[0].toLowerCase()], t + r[0].length) : -1
                },
                Q: js,
                s: Ts,
                S: Os,
                u: xs,
                U: bs,
                V: ws,
                w: Ps,
                W: Ds,
                x: function (e, n, t) {
                    return G(e, i, n, t)
                },
                X: function (e, n, t) {
                    return G(e, o, n, t)
                },
                y: Cs,
                Y: Gs,
                Z: Ss,
                "%": Ns
            };

        function w(c, s) {
            return function (e) {
                var n, t, r, i = [],
                    o = -1,
                    a = 0,
                    l = c.length;
                for (e instanceof Date || (e = new Date(+e)); ++o < l;) 37 === c.charCodeAt(o) && (i.push(c.slice(a, o)), null != (t = ps[n = c.charAt(++o)]) ? n = c.charAt(++o) : t = "e" === n ? " " : "0", (r = s[n]) && (n = r(e, t)), i.push(n), a = o + 1);
                return i.push(c.slice(a, o)), i.join("")
            }
        }

        function D(i, o) {
            return function (e) {
                var n, t, r = ls(1900);
                if (G(r, i, e += "", 0) != e.length) return null;
                if ("Q" in r) return new Date(r.Q);
                if ("p" in r && (r.H = r.H % 12 + 12 * r.p), "V" in r) {
                    if (r.V < 1 || 53 < r.V) return null;
                    "w" in r || (r.w = 1), r.d = "Z" in r ? (n = 4 < (t = (n = as(ls(r.y))).getUTCDay()) || 0 === t ? ts.ceil(n) : ts(n), n = Qc.offset(n, 7 * (r.V - 1)), r.y = n.getUTCFullYear(), r.m = n.getUTCMonth(), n.getUTCDate() + (r.w + 6) % 7) : (n = 4 < (t = (n = o(ls(r.y))).getDay()) || 0 === t ? Kc.ceil(n) : Kc(n), n = Vc.offset(n, 7 * (r.V - 1)), r.y = n.getFullYear(), r.m = n.getMonth(), n.getDate() + (r.w + 6) % 7)
                } else("W" in r || "U" in r) && ("w" in r || (r.w = "u" in r ? r.u % 7 : "W" in r ? 1 : 0), t = "Z" in r ? as(ls(r.y)).getUTCDay() : o(ls(r.y)).getDay(), r.m = 0, r.d = "W" in r ? (r.w + 6) % 7 + 7 * r.W - (t + 5) % 7 : r.w + 7 * r.U - (t + 6) % 7);
                return "Z" in r ? (r.H += r.Z / 100 | 0, r.M += r.Z % 100, as(r)) : o(r)
            }
        }

        function G(e, n, t, r) {
            for (var i, o, a = 0, l = n.length, c = t.length; a < l;) {
                if (c <= r) return -1;
                if (37 === (i = n.charCodeAt(a++))) {
                    if (i = n.charAt(a++), !(o = b[i in ps ? n.charAt(a++) : i]) || (r = o(e, t, r)) < 0) return -1
                } else if (i != t.charCodeAt(r++)) return -1
            }
            return r
        }
        return P.x = w(i, P), P.X = w(o, P), P.c = w(r, P), x.x = w(i, x), x.X = w(o, x), x.c = w(r, x), {
            format: function (e) {
                var n = w(e += "", P);
                return n.toString = function () {
                    return e
                }, n
            },
            parse: function (e) {
                var n = D(e += "", os);
                return n.toString = function () {
                    return e
                }, n
            },
            utcFormat: function (e) {
                var n = w(e += "", x);
                return n.toString = function () {
                    return e
                }, n
            },
            utcParse: function (e) {
                var n = D(e, as);
                return n.toString = function () {
                    return e
                }, n
            }
        }
    }({
        dateTime: "%x, %X",
        date: "%-m/%-d/%Y",
        time: "%-I:%M:%S %p",
        periods: ["AM", "PM"],
        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    }), cs.format, cs.parse, ss = cs.utcFormat, us = cs.utcParse;
    var bu = "%Y-%m-%dT%H:%M:%S.%LZ";
    Date.prototype.toISOString || ss(bu); + new Date("2000-01-01T00:00:00.000Z") || us(bu);

    function wu(e) {
        return e.match(/.{6}/g).map(function (e) {
            return "#" + e
        })
    }
    wu("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"), wu("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"), wu("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"), wu("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"), xl(Sn(300, .5, 0), Sn(-240, .5, 1));
    xl(Sn(-100, .75, .35), Sn(80, 1.5, .8)), xl(Sn(260, .75, .35), Sn(80, 1.5, .8)), Sn();

    function Du(n) {
        var t = n.length;
        return function (e) {
            return n[Math.max(0, Math.min(t - 1, Math.floor(e * t)))]
        }
    }
    Du(wu("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
    Du(wu("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")), Du(wu("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")), Du(wu("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

    function Gu() {
        return new Cu
    }

    function Cu() {
        this.reset()
    }
    Cu.prototype = {
        constructor: Cu,
        reset: function () {
            this.s = this.t = 0
        },
        add: function (e) {
            Iu(Su, e, this.t), Iu(this, Su.s, this.s), this.s ? this.t += Su.t : this.s = Su.t
        },
        valueOf: function () {
            return this.s
        }
    };
    var Su = new Cu;

    function Iu(e, n, t) {
        var r = e.s = n + t,
            i = r - n,
            o = r - i;
        e.t = n - o + (t - i)
    }
    var Mu = 1e-6,
        ku = Math.PI,
        Au = ku / 2,
        _u = ku / 4,
        Ou = 2 * ku,
        Lu = 180 / ku,
        Eu = ku / 180,
        Nu = Math.abs,
        ju = Math.atan,
        Tu = Math.atan2,
        $u = Math.cos,
        zu = Math.exp,
        Bu = Math.log,
        qu = Math.sin,
        Fu = Math.sqrt,
        Ru = Math.tan;

    function Uu(e) {
        return 1 < e ? Au : e < -1 ? -Au : Math.asin(e)
    }

    function Yu() {}

    function Hu(e, n) {
        e && Wu.hasOwnProperty(e.type) && Wu[e.type](e, n)
    }
    var Vu = {
            Feature: function (e, n) {
                Hu(e.geometry, n)
            },
            FeatureCollection: function (e, n) {
                for (var t = e.features, r = -1, i = t.length; ++r < i;) Hu(t[r].geometry, n)
            }
        },
        Wu = {
            Sphere: function (e, n) {
                n.sphere()
            },
            Point: function (e, n) {
                e = e.coordinates, n.point(e[0], e[1], e[2])
            },
            MultiPoint: function (e, n) {
                for (var t = e.coordinates, r = -1, i = t.length; ++r < i;) e = t[r], n.point(e[0], e[1], e[2])
            },
            LineString: function (e, n) {
                Zu(e.coordinates, n, 0)
            },
            MultiLineString: function (e, n) {
                for (var t = e.coordinates, r = -1, i = t.length; ++r < i;) Zu(t[r], n, 0)
            },
            Polygon: function (e, n) {
                Ku(e.coordinates, n)
            },
            MultiPolygon: function (e, n) {
                for (var t = e.coordinates, r = -1, i = t.length; ++r < i;) Ku(t[r], n)
            },
            GeometryCollection: function (e, n) {
                for (var t = e.geometries, r = -1, i = t.length; ++r < i;) Hu(t[r], n)
            }
        };

    function Zu(e, n, t) {
        var r, i = -1,
            o = e.length - t;
        for (n.lineStart(); ++i < o;) r = e[i], n.point(r[0], r[1], r[2]);
        n.lineEnd()
    }

    function Ku(e, n) {
        var t = -1,
            r = e.length;
        for (n.polygonStart(); ++t < r;) Zu(e[t], n, 1);
        n.polygonEnd()
    }

    function Xu(e, n) {
        e && Vu.hasOwnProperty(e.type) ? Vu[e.type](e, n) : Hu(e, n)
    }
    Gu(), Gu();

    function Ju(e) {
        return [Tu(e[1], e[0]), Uu(e[2])]
    }

    function Qu(e) {
        var n = e[0],
            t = e[1],
            r = $u(t);
        return [r * $u(n), r * qu(n), qu(t)]
    }

    function ep(e, n) {
        return e[0] * n[0] + e[1] * n[1] + e[2] * n[2]
    }

    function np(e, n) {
        return [e[1] * n[2] - e[2] * n[1], e[2] * n[0] - e[0] * n[2], e[0] * n[1] - e[1] * n[0]]
    }

    function tp(e, n) {
        e[0] += n[0], e[1] += n[1], e[2] += n[2]
    }

    function rp(e, n) {
        return [e[0] * n, e[1] * n, e[2] * n]
    }

    function ip(e) {
        var n = Fu(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
        e[0] /= n, e[1] /= n, e[2] /= n
    }
    Gu();

    function op(t, r) {
        function e(e, n) {
            return e = t(e, n), r(e[0], e[1])
        }
        return t.invert && r.invert && (e.invert = function (e, n) {
            return (e = r.invert(e, n)) && t.invert(e[0], e[1])
        }), e
    }

    function ap(e, n) {
        return [Nu(e) > ku ? e + Math.round(-e / Ou) * Ou : e, n]
    }

    function lp(e, n, t) {
        return (e %= Ou) ? n || t ? op(sp(e), up(n, t)) : sp(e) : n || t ? up(n, t) : ap
    }

    function cp(t) {
        return function (e, n) {
            return [ku < (e += t) ? e - Ou : e < -ku ? e + Ou : e, n]
        }
    }

    function sp(e) {
        var n = cp(e);
        return n.invert = cp(-e), n
    }

    function up(e, n) {
        var l = $u(e),
            c = qu(e),
            s = $u(n),
            u = qu(n);

        function t(e, n) {
            var t = $u(n),
                r = $u(e) * t,
                i = qu(e) * t,
                o = qu(n),
                a = o * l + r * c;
            return [Tu(i * s - a * u, r * l - o * c), Uu(a * s + i * u)]
        }
        return t.invert = function (e, n) {
            var t = $u(n),
                r = $u(e) * t,
                i = qu(e) * t,
                o = qu(n),
                a = o * s - i * u;
            return [Tu(i * s + o * u, r * l + a * c), Uu(a * l - r * c)]
        }, t
    }

    function pp(e, n) {
        (n = Qu(n))[0] -= e, ip(n);
        var t, r = 1 < (t = -n[1]) ? 0 : t < -1 ? ku : Math.acos(t);
        return ((-n[2] < 0 ? -r : r) + Ou - Mu) % Ou
    }

    function dp() {
        var t, n = [];
        return {
            point: function (e, n) {
                t.push([e, n])
            },
            lineStart: function () {
                n.push(t = [])
            },
            lineEnd: Yu,
            rejoin: function () {
                1 < n.length && n.push(n.pop().concat(n.shift()))
            },
            result: function () {
                var e = n;
                return n = [], t = null, e
            }
        }
    }

    function fp(e, n) {
        return Nu(e[0] - n[0]) < Mu && Nu(e[1] - n[1]) < Mu
    }

    function hp(e, n, t, r) {
        this.x = e, this.z = n, this.o = t, this.e = r, this.v = !1, this.n = this.p = null
    }

    function yp(e, n, t, r, o) {
        var a, i, l = [],
            c = [];
        if (e.forEach(function (e) {
                if (!((n = e.length - 1) <= 0)) {
                    var n, t, r = e[0],
                        i = e[n];
                    if (fp(r, i)) {
                        for (o.lineStart(), a = 0; a < n; ++a) o.point((r = e[a])[0], r[1]);
                        o.lineEnd()
                    } else l.push(t = new hp(r, e, null, !0)), c.push(t.o = new hp(r, null, t, !1)), l.push(t = new hp(i, e, null, !1)), c.push(t.o = new hp(i, null, t, !0))
                }
            }), l.length) {
            for (c.sort(n), mp(l), mp(c), a = 0, i = c.length; a < i; ++a) c[a].e = t = !t;
            for (var s, u, p = l[0];;) {
                for (var d = p, f = !0; d.v;)
                    if ((d = d.n) === p) return;
                s = d.z, o.lineStart();
                do {
                    if (d.v = d.o.v = !0, d.e) {
                        if (f)
                            for (a = 0, i = s.length; a < i; ++a) o.point((u = s[a])[0], u[1]);
                        else r(d.x, d.n.x, 1, o);
                        d = d.n
                    } else {
                        if (f)
                            for (s = d.p.z, a = s.length - 1; 0 <= a; --a) o.point((u = s[a])[0], u[1]);
                        else r(d.x, d.p.x, -1, o);
                        d = d.p
                    }
                    s = (d = d.o).z, f = !f
                } while (!d.v);
                o.lineEnd()
            }
        }
    }

    function mp(e) {
        if (n = e.length) {
            for (var n, t, r = 0, i = e[0]; ++r < n;) i.n = t = e[r], t.p = i, i = t;
            i.n = t = e[0], t.p = i
        }
    }
    ap.invert = ap;
    var gp = Gu();

    function vp(m, g, v, P) {
        return function (l) {
            var c, s, u, t = g(l),
                p = dp(),
                d = g(p),
                f = !1,
                n = {
                    point: r,
                    lineStart: i,
                    lineEnd: o,
                    polygonStart: function () {
                        n.point = h, n.lineStart = a, n.lineEnd = y, s = [], c = []
                    },
                    polygonEnd: function () {
                        n.point = r, n.lineStart = i, n.lineEnd = o, s = ke(s);
                        var e = function (e, n) {
                            var t = n[0],
                                r = n[1],
                                i = qu(r),
                                o = [qu(t), -$u(t), 0],
                                a = 0,
                                l = 0;
                            gp.reset(), 1 === i ? r = Au + Mu : -1 === i && (r = -Au - Mu);
                            for (var c = 0, s = e.length; c < s; ++c)
                                if (p = (u = e[c]).length)
                                    for (var u, p, d = u[p - 1], f = d[0], h = d[1] / 2 + _u, y = qu(h), m = $u(h), g = 0; g < p; ++g, f = P, y = b, m = w, d = v) {
                                        var v = u[g],
                                            P = v[0],
                                            x = v[1] / 2 + _u,
                                            b = qu(x),
                                            w = $u(x),
                                            D = P - f,
                                            G = 0 <= D ? 1 : -1,
                                            C = G * D,
                                            S = ku < C,
                                            I = y * b;
                                        if (gp.add(Tu(I * G * qu(C), m * w + I * $u(C))), a += S ? D + G * Ou : D, S ^ t <= f ^ t <= P) {
                                            var M = np(Qu(d), Qu(v));
                                            ip(M);
                                            var k = np(o, M);
                                            ip(k);
                                            var A = (S ^ 0 <= D ? -1 : 1) * Uu(k[2]);
                                            (A < r || r === A && (M[0] || M[1])) && (l += S ^ 0 <= D ? 1 : -1)
                                        }
                                    }
                            return (a < -Mu || a < Mu && gp < -Mu) ^ 1 & l
                        }(c, P);
                        s.length ? (f || (l.polygonStart(), f = !0), yp(s, xp, e, v, l)) : e && (f || (l.polygonStart(), f = !0), l.lineStart(), v(null, null, 1, l), l.lineEnd()), f && (l.polygonEnd(), f = !1), s = c = null
                    },
                    sphere: function () {
                        l.polygonStart(), l.lineStart(), v(null, null, 1, l), l.lineEnd(), l.polygonEnd()
                    }
                };

            function r(e, n) {
                m(e, n) && l.point(e, n)
            }

            function e(e, n) {
                t.point(e, n)
            }

            function i() {
                n.point = e, t.lineStart()
            }

            function o() {
                n.point = r, t.lineEnd()
            }

            function h(e, n) {
                u.push([e, n]), d.point(e, n)
            }

            function a() {
                d.lineStart(), u = []
            }

            function y() {
                h(u[0][0], u[0][1]), d.lineEnd();
                var e, n, t, r, i = d.clean(),
                    o = p.result(),
                    a = o.length;
                if (u.pop(), c.push(u), u = null, a)
                    if (1 & i) {
                        if (0 < (n = (t = o[0]).length - 1)) {
                            for (f || (l.polygonStart(), f = !0), l.lineStart(), e = 0; e < n; ++e) l.point((r = t[e])[0], r[1]);
                            l.lineEnd()
                        }
                    } else 1 < a && 2 & i && o.push(o.pop().concat(o.shift())), s.push(o.filter(Pp))
            }
            return n
        }
    }

    function Pp(e) {
        return 1 < e.length
    }

    function xp(e, n) {
        return ((e = e.x)[0] < 0 ? e[1] - Au - Mu : Au - e[1]) - ((n = n.x)[0] < 0 ? n[1] - Au - Mu : Au - n[1])
    }
    var bp = vp(function () {
        return !0
    }, function (p) {
        var d, f = NaN,
            h = NaN,
            y = NaN;
        return {
            lineStart: function () {
                p.lineStart(), d = 1
            },
            point: function (e, n) {
                var t, r, i, o, a, l, c, s = 0 < e ? ku : -ku,
                    u = Nu(e - f);
                Nu(u - ku) < Mu ? (p.point(f, h = 0 < (h + n) / 2 ? Au : -Au), p.point(y, h), p.lineEnd(), p.lineStart(), p.point(s, h), p.point(e, h), d = 0) : y !== s && ku <= u && (Nu(f - y) < Mu && (f -= y * Mu), Nu(e - s) < Mu && (e -= s * Mu), r = h, o = n, c = qu((t = f) - (i = e)), h = Nu(c) > Mu ? ju((qu(r) * (l = $u(o)) * qu(i) - qu(o) * (a = $u(r)) * qu(t)) / (a * l * c)) : (r + o) / 2, p.point(y, h), p.lineEnd(), p.lineStart(), p.point(s, h), d = 0), p.point(f = e, h = n), y = s
            },
            lineEnd: function () {
                p.lineEnd(), f = h = NaN
            },
            clean: function () {
                return 2 - d
            }
        }
    }, function (e, n, t, r) {
        var i;
        if (null == e) i = t * Au, r.point(-ku, i), r.point(0, i), r.point(ku, i), r.point(ku, 0), r.point(ku, -i), r.point(0, -i), r.point(-ku, -i), r.point(-ku, 0), r.point(-ku, i);
        else if (Nu(e[0] - n[0]) > Mu) {
            var o = e[0] < n[0] ? ku : -ku;
            i = t * o / 2, r.point(-o, i), r.point(0, i), r.point(o, i)
        } else r.point(n[0], n[1])
    }, [-ku, -Au]);

    function wp(i) {
        var S = $u(i),
            o = 6 * Eu,
            f = 0 < S,
            h = Nu(S) > Mu;

        function y(e, n) {
            return $u(e) * $u(n) > S
        }

        function m(e, n, t) {
            var r = [1, 0, 0],
                i = np(Qu(e), Qu(n)),
                o = ep(i, i),
                a = i[0],
                l = o - a * a;
            if (!l) return !t && e;
            var c = S * o / l,
                s = -S * a / l,
                u = np(r, i),
                p = rp(r, c);
            tp(p, rp(i, s));
            var d = u,
                f = ep(p, d),
                h = ep(d, d),
                y = f * f - h * (ep(p, p) - 1);
            if (!(y < 0)) {
                var m = Fu(y),
                    g = rp(d, (-f - m) / h);
                if (tp(g, p), g = Ju(g), !t) return g;
                var v, P = e[0],
                    x = n[0],
                    b = e[1],
                    w = n[1];
                x < P && (v = P, P = x, x = v);
                var D = x - P,
                    G = Nu(D - ku) < Mu;
                if (!G && w < b && (v = b, b = w, w = v), G || D < Mu ? G ? 0 < b + w ^ g[1] < (Nu(g[0] - P) < Mu ? b : w) : b <= g[1] && g[1] <= w : ku < D ^ (P <= g[0] && g[0] <= x)) {
                    var C = rp(d, (-f + m) / h);
                    return tp(C, p), [g, Ju(C)]
                }
            }
        }

        function g(e, n) {
            var t = f ? i : ku - i,
                r = 0;
            return e < -t ? r |= 1 : t < e && (r |= 2), n < -t ? r |= 4 : t < n && (r |= 8), r
        }
        return vp(y, function (l) {
            var c, s, u, p, d;
            return {
                lineStart: function () {
                    p = u = !1, d = 1
                },
                point: function (e, n) {
                    var t, r = [e, n],
                        i = y(e, n),
                        o = f ? i ? 0 : g(e, n) : i ? g(e + (e < 0 ? ku : -ku), n) : 0;
                    if (!c && (p = u = i) && l.lineStart(), i !== u && (!(t = m(c, r)) || fp(c, t) || fp(r, t)) && (r[0] += Mu, r[1] += Mu, i = y(r[0], r[1])), i !== u) d = 0, i ? (l.lineStart(), t = m(r, c), l.point(t[0], t[1])) : (t = m(c, r), l.point(t[0], t[1]), l.lineEnd()), c = t;
                    else if (h && c && f ^ i) {
                        var a;
                        o & s || !(a = m(r, c, !0)) || (d = 0, f ? (l.lineStart(), l.point(a[0][0], a[0][1]), l.point(a[1][0], a[1][1]), l.lineEnd()) : (l.point(a[1][0], a[1][1]), l.lineEnd(), l.lineStart(), l.point(a[0][0], a[0][1])))
                    }!i || c && fp(c, r) || l.point(r[0], r[1]), c = r, u = i, s = o
                },
                lineEnd: function () {
                    u && l.lineEnd(), c = null
                },
                clean: function () {
                    return d | (p && u) << 1
                }
            }
        }, function (e, n, t, r) {
            ! function (e, n, t, r, i, o) {
                if (t) {
                    var a = $u(n),
                        l = qu(n),
                        c = r * t;
                    null == i ? (i = n + r * Ou, o = n - c / 2) : (i = pp(a, i), o = pp(a, o), (0 < r ? i < o : o < i) && (i += r * Ou));
                    for (var s, u = i; 0 < r ? o < u : u < o; u -= c) s = Ju([a, -l * $u(u), -l * qu(u)]), e.point(s[0], s[1])
                }
            }(r, i, o, t, e, n)
        }, f ? [0, -i] : [-ku, i - ku])
    }
    var Dp = 1e9,
        Gp = -Dp;

    function Cp(g, v, P, x) {
        function b(e, n) {
            return g <= e && e <= P && v <= n && n <= x
        }

        function w(e, n, t, r) {
            var i = 0,
                o = 0;
            if (null == e || (i = a(e, t)) !== (o = a(n, t)) || l(e, n) < 0 ^ 0 < t)
                for (; r.point(0 === i || 3 === i ? g : P, 1 < i ? x : v), (i = (i + t + 4) % 4) !== o;);
            else r.point(n[0], n[1])
        }

        function a(e, n) {
            return Nu(e[0] - g) < Mu ? 0 < n ? 0 : 3 : Nu(e[0] - P) < Mu ? 0 < n ? 2 : 1 : Nu(e[1] - v) < Mu ? 0 < n ? 1 : 0 : 0 < n ? 3 : 2
        }

        function D(e, n) {
            return l(e.x, n.x)
        }

        function l(e, n) {
            var t = a(e, 1),
                r = a(n, 1);
            return t !== r ? t - r : 0 === t ? n[1] - e[1] : 1 === t ? e[0] - n[0] : 2 === t ? e[1] - n[1] : n[0] - e[0]
        }
        return function (r) {
            var i, p, o, a, l, c, s, u, d, f, h, y = r,
                e = dp(),
                n = {
                    point: t,
                    lineStart: function () {
                        n.point = m, p && p.push(o = []);
                        f = !0, d = !1, s = u = NaN
                    },
                    lineEnd: function () {
                        i && (m(a, l), c && d && e.rejoin(), i.push(e.result()));
                        n.point = t, d && y.lineEnd()
                    },
                    polygonStart: function () {
                        y = e, i = [], p = [], h = !0
                    },
                    polygonEnd: function () {
                        var e = function () {
                                for (var e = 0, n = 0, t = p.length; n < t; ++n)
                                    for (var r, i, o = p[n], a = 1, l = o.length, c = o[0], s = c[0], u = c[1]; a < l; ++a) r = s, i = u, c = o[a], s = c[0], u = c[1], i <= x ? x < u && (u - i) * (g - r) < (s - r) * (x - i) && ++e : u <= x && (s - r) * (x - i) < (u - i) * (g - r) && --e;
                                return e
                            }(),
                            n = h && e,
                            t = (i = ke(i)).length;
                        (n || t) && (r.polygonStart(), n && (r.lineStart(), w(null, null, 1, r), r.lineEnd()), t && yp(i, D, e, w, r), r.polygonEnd());
                        y = r, i = p = o = null
                    }
                };

            function t(e, n) {
                b(e, n) && y.point(e, n)
            }

            function m(e, n) {
                var t = b(e, n);
                if (p && o.push([e, n]), f) a = e, l = n, f = !1, (c = t) && (y.lineStart(), y.point(e, n));
                else if (t && d) y.point(e, n);
                else {
                    var r = [s = Math.max(Gp, Math.min(Dp, s)), u = Math.max(Gp, Math.min(Dp, u))],
                        i = [e = Math.max(Gp, Math.min(Dp, e)), n = Math.max(Gp, Math.min(Dp, n))];
                    ! function (e, n, t, r, i, o) {
                        var a, l = e[0],
                            c = e[1],
                            s = 0,
                            u = 1,
                            p = n[0] - l,
                            d = n[1] - c;
                        if (a = t - l, p || !(0 < a)) {
                            if (a /= p, p < 0) {
                                if (a < s) return;
                                a < u && (u = a)
                            } else if (0 < p) {
                                if (u < a) return;
                                s < a && (s = a)
                            }
                            if (a = i - l, p || !(a < 0)) {
                                if (a /= p, p < 0) {
                                    if (u < a) return;
                                    s < a && (s = a)
                                } else if (0 < p) {
                                    if (a < s) return;
                                    a < u && (u = a)
                                }
                                if (a = r - c, d || !(0 < a)) {
                                    if (a /= d, d < 0) {
                                        if (a < s) return;
                                        a < u && (u = a)
                                    } else if (0 < d) {
                                        if (u < a) return;
                                        s < a && (s = a)
                                    }
                                    if (a = o - c, d || !(a < 0)) {
                                        if (a /= d, d < 0) {
                                            if (u < a) return;
                                            s < a && (s = a)
                                        } else if (0 < d) {
                                            if (a < s) return;
                                            a < u && (u = a)
                                        }
                                        return 0 < s && (e[0] = l + s * p, e[1] = c + s * d), u < 1 && (n[0] = l + u * p, n[1] = c + u * d), !0
                                    }
                                }
                            }
                        }
                    }(r, i, g, v, P, x) ? t && (y.lineStart(), y.point(e, n), h = !1): (d || (y.lineStart(), y.point(r[0], r[1])), y.point(i[0], i[1]), t || y.lineEnd(), h = !1)
                }
                s = e, u = n, d = t
            }
            return n
        }
    }
    Gu();

    function Sp(e) {
        return e
    }
    var Ip, Mp, kp, Ap, _p = Gu(),
        Op = Gu(),
        Lp = {
            point: Yu,
            lineStart: Yu,
            lineEnd: Yu,
            polygonStart: function () {
                Lp.lineStart = Ep, Lp.lineEnd = Tp
            },
            polygonEnd: function () {
                Lp.lineStart = Lp.lineEnd = Lp.point = Yu, _p.add(Nu(Op)), Op.reset()
            },
            result: function () {
                var e = _p / 2;
                return _p.reset(), e
            }
        };

    function Ep() {
        Lp.point = Np
    }

    function Np(e, n) {
        Lp.point = jp, Ip = kp = e, Mp = Ap = n
    }

    function jp(e, n) {
        Op.add(Ap * e - kp * n), kp = e, Ap = n
    }

    function Tp() {
        jp(Ip, Mp)
    }
    var $p = 1 / 0,
        zp = $p,
        Bp = -$p,
        qp = Bp,
        Fp = {
            point: function (e, n) {
                e < $p && ($p = e);
                Bp < e && (Bp = e);
                n < zp && (zp = n);
                qp < n && (qp = n)
            },
            lineStart: Yu,
            lineEnd: Yu,
            polygonStart: Yu,
            polygonEnd: Yu,
            result: function () {
                var e = [
                    [$p, zp],
                    [Bp, qp]
                ];
                return Bp = qp = -(zp = $p = 1 / 0), e
            }
        };
    var Rp, Up, Yp, Hp, Vp = 0,
        Wp = 0,
        Zp = 0,
        Kp = 0,
        Xp = 0,
        Jp = 0,
        Qp = 0,
        ed = 0,
        nd = 0,
        td = {
            point: rd,
            lineStart: id,
            lineEnd: ld,
            polygonStart: function () {
                td.lineStart = cd, td.lineEnd = sd
            },
            polygonEnd: function () {
                td.point = rd, td.lineStart = id, td.lineEnd = ld
            },
            result: function () {
                var e = nd ? [Qp / nd, ed / nd] : Jp ? [Kp / Jp, Xp / Jp] : Zp ? [Vp / Zp, Wp / Zp] : [NaN, NaN];
                return Vp = Wp = Zp = Kp = Xp = Jp = Qp = ed = nd = 0, e
            }
        };

    function rd(e, n) {
        Vp += e, Wp += n, ++Zp
    }

    function id() {
        td.point = od
    }

    function od(e, n) {
        td.point = ad, rd(Yp = e, Hp = n)
    }

    function ad(e, n) {
        var t = e - Yp,
            r = n - Hp,
            i = Fu(t * t + r * r);
        Kp += i * (Yp + e) / 2, Xp += i * (Hp + n) / 2, Jp += i, rd(Yp = e, Hp = n)
    }

    function ld() {
        td.point = rd
    }

    function cd() {
        td.point = ud
    }

    function sd() {
        pd(Rp, Up)
    }

    function ud(e, n) {
        td.point = pd, rd(Rp = Yp = e, Up = Hp = n)
    }

    function pd(e, n) {
        var t = e - Yp,
            r = n - Hp,
            i = Fu(t * t + r * r);
        Kp += i * (Yp + e) / 2, Xp += i * (Hp + n) / 2, Jp += i, Qp += (i = Hp * e - Yp * n) * (Yp + e), ed += i * (Hp + n), nd += 3 * i, rd(Yp = e, Hp = n)
    }

    function dd(e) {
        this._context = e
    }
    dd.prototype = {
        _radius: 4.5,
        pointRadius: function (e) {
            return this._radius = e, this
        },
        polygonStart: function () {
            this._line = 0
        },
        polygonEnd: function () {
            this._line = NaN
        },
        lineStart: function () {
            this._point = 0
        },
        lineEnd: function () {
            0 === this._line && this._context.closePath(), this._point = NaN
        },
        point: function (e, n) {
            switch (this._point) {
            case 0:
                this._context.moveTo(e, n), this._point = 1;
                break;
            case 1:
                this._context.lineTo(e, n);
                break;
            default:
                this._context.moveTo(e + this._radius, n), this._context.arc(e, n, this._radius, 0, Ou)
            }
        },
        result: Yu
    };
    var fd, hd, yd, md, gd, vd = Gu(),
        Pd = {
            point: Yu,
            lineStart: function () {
                Pd.point = xd
            },
            lineEnd: function () {
                fd && bd(hd, yd), Pd.point = Yu
            },
            polygonStart: function () {
                fd = !0
            },
            polygonEnd: function () {
                fd = null
            },
            result: function () {
                var e = +vd;
                return vd.reset(), e
            }
        };

    function xd(e, n) {
        Pd.point = bd, hd = md = e, yd = gd = n
    }

    function bd(e, n) {
        md -= e, gd -= n, vd.add(Fu(md * md + gd * gd)), md = e, gd = n
    }

    function wd() {
        this._string = []
    }

    function Dd(e) {
        return "m0," + e + "a" + e + "," + e + " 0 1,1 0," + -2 * e + "a" + e + "," + e + " 0 1,1 0," + 2 * e + "z"
    }

    function Gd(r) {
        return function (e) {
            var n = new Cd;
            for (var t in r) n[t] = r[t];
            return n.stream = e, n
        }
    }

    function Cd() {}

    function Sd(e, n, t) {
        var r = e.clipExtent && e.clipExtent();
        return e.scale(150).translate([0, 0]), null != r && e.clipExtent(null), Xu(t, e.stream(Fp)), n(Fp.result()), null != r && e.clipExtent(r), e
    }

    function Id(a, l, e) {
        return Sd(a, function (e) {
            var n = l[1][0] - l[0][0],
                t = l[1][1] - l[0][1],
                r = Math.min(n / (e[1][0] - e[0][0]), t / (e[1][1] - e[0][1])),
                i = +l[0][0] + (n - r * (e[1][0] + e[0][0])) / 2,
                o = +l[0][1] + (t - r * (e[1][1] + e[0][1])) / 2;
            a.scale(150 * r).translate([i, o])
        }, e)
    }
    wd.prototype = {
        _radius: 4.5,
        _circle: Dd(4.5),
        pointRadius: function (e) {
            return (e = +e) !== this._radius && (this._radius = e, this._circle = null), this
        },
        polygonStart: function () {
            this._line = 0
        },
        polygonEnd: function () {
            this._line = NaN
        },
        lineStart: function () {
            this._point = 0
        },
        lineEnd: function () {
            0 === this._line && this._string.push("Z"), this._point = NaN
        },
        point: function (e, n) {
            switch (this._point) {
            case 0:
                this._string.push("M", e, ",", n), this._point = 1;
                break;
            case 1:
                this._string.push("L", e, ",", n);
                break;
            default:
                null == this._circle && (this._circle = Dd(this._radius)), this._string.push("M", e, ",", n, this._circle)
            }
        },
        result: function () {
            if (this._string.length) {
                var e = this._string.join("");
                return this._string = [], e
            }
            return null
        }
    }, Cd.prototype = {
        constructor: Cd,
        point: function (e, n) {
            this.stream.point(e, n)
        },
        sphere: function () {
            this.stream.sphere()
        },
        lineStart: function () {
            this.stream.lineStart()
        },
        lineEnd: function () {
            this.stream.lineEnd()
        },
        polygonStart: function () {
            this.stream.polygonStart()
        },
        polygonEnd: function () {
            this.stream.polygonEnd()
        }
    };
    var Md = 16,
        kd = $u(30 * Eu);

    function Ad(e, n) {
        return +n ? function (k, A) {
            function _(e, n, t, r, i, o, a, l, c, s, u, p, d, f) {
                var h = a - e,
                    y = l - n,
                    m = h * h + y * y;
                if (4 * A < m && d--) {
                    var g = r + s,
                        v = i + u,
                        P = o + p,
                        x = Fu(g * g + v * v + P * P),
                        b = Uu(P /= x),
                        w = Nu(Nu(P) - 1) < Mu || Nu(t - c) < Mu ? (t + c) / 2 : Tu(v, g),
                        D = k(w, b),
                        G = D[0],
                        C = D[1],
                        S = G - e,
                        I = C - n,
                        M = y * S - h * I;
                    (A < M * M / m || .3 < Nu((h * S + y * I) / m - .5) || r * s + i * u + o * p < kd) && (_(e, n, t, r, i, o, G, C, w, g /= x, v /= x, P, d, f), f.point(G, C), _(G, C, w, g, v, P, a, l, c, s, u, p, d, f))
                }
            }
            return function (i) {
                var t, r, o, a, l, c, s, u, p, d, f, h, y = {
                    point: e,
                    lineStart: n,
                    lineEnd: g,
                    polygonStart: function () {
                        i.polygonStart(), y.lineStart = v
                    },
                    polygonEnd: function () {
                        i.polygonEnd(), y.lineStart = n
                    }
                };

                function e(e, n) {
                    e = k(e, n), i.point(e[0], e[1])
                }

                function n() {
                    u = NaN, y.point = m, i.lineStart()
                }

                function m(e, n) {
                    var t = Qu([e, n]),
                        r = k(e, n);
                    _(u, p, s, d, f, h, u = r[0], p = r[1], s = e, d = t[0], f = t[1], h = t[2], Md, i), i.point(u, p)
                }

                function g() {
                    y.point = e, i.lineEnd()
                }

                function v() {
                    n(), y.point = P, y.lineEnd = x
                }

                function P(e, n) {
                    m(t = e, n), r = u, o = p, a = d, l = f, c = h, y.point = m
                }

                function x() {
                    _(u, p, s, d, f, h, r, o, t, a, l, c, Md, i), (y.lineEnd = g)()
                }
                return y
            }
        }(e, n) : (t = e, Gd({
            point: function (e, n) {
                e = t(e, n), this.stream.point(e[0], e[1])
            }
        }));
        var t
    }
    var _d = Gd({
        point: function (e, n) {
            this.stream.point(e * Eu, n * Eu)
        }
    });

    function Od(e, t, r, n) {
        var i = $u(n),
            o = qu(n),
            a = i * e,
            l = o * e,
            c = i / e,
            s = o / e,
            u = (o * r - i * t) / e,
            p = (o * t + i * r) / e;

        function d(e, n) {
            return [a * e - l * n + t, r - l * e - a * n]
        }
        return d.invert = function (e, n) {
            return [c * e - s * n + u, p - s * e - c * n]
        }, d
    }

    function Ld(e) {
        return function (e) {
            var t, i, n, r, o, a, l, c, s, u, p = 150,
                d = 480,
                f = 250,
                h = 0,
                y = 0,
                m = 0,
                g = 0,
                v = 0,
                P = 0,
                x = null,
                b = bp,
                w = null,
                D = Sp,
                G = .5;

            function C(e) {
                return c(e[0] * Eu, e[1] * Eu)
            }

            function S(e) {
                return (e = c.invert(e[0], e[1])) && [e[0] * Lu, e[1] * Lu]
            }

            function I() {
                var e = Od(p, 0, 0, P).apply(null, t(h, y)),
                    n = (P ? Od : function (t, r, i) {
                        function e(e, n) {
                            return [r + t * e, i - t * n]
                        }
                        return e.invert = function (e, n) {
                            return [(e - r) / t, (i - n) / t]
                        }, e
                    })(p, d - e[0], f - e[1], P);
                return i = lp(m, g, v), l = op(t, n), c = op(i, l), a = Ad(l, G), M()
            }

            function M() {
                return s = u = null, C
            }
            return C.stream = function (e) {
                    return s && u === e ? s : s = _d((r = i, Gd({
                        point: function (e, n) {
                            var t = r(e, n);
                            return this.stream.point(t[0], t[1])
                        }
                    })(b(a(D(u = e))))));
                    var r
                }, C.preclip = function (e) {
                    return arguments.length ? (b = e, x = void 0, M()) : b
                }, C.postclip = function (e) {
                    return arguments.length ? (D = e, w = n = r = o = null, M()) : D
                }, C.clipAngle = function (e) {
                    return arguments.length ? (b = +e ? wp(x = e * Eu) : (x = null, bp), M()) : x * Lu
                }, C.clipExtent = function (e) {
                    return arguments.length ? (D = null == e ? (w = n = r = o = null, Sp) : Cp(w = +e[0][0], n = +e[0][1], r = +e[1][0], o = +e[1][1]), M()) : null == w ? null : [
                        [w, n],
                        [r, o]
                    ]
                }, C.scale = function (e) {
                    return arguments.length ? (p = +e, I()) : p
                }, C.translate = function (e) {
                    return arguments.length ? (d = +e[0], f = +e[1], I()) : [d, f]
                }, C.center = function (e) {
                    return arguments.length ? (h = e[0] % 360 * Eu, y = e[1] % 360 * Eu, I()) : [h * Lu, y * Lu]
                }, C.rotate = function (e) {
                    return arguments.length ? (m = e[0] % 360 * Eu, g = e[1] % 360 * Eu, v = 2 < e.length ? e[2] % 360 * Eu : 0, I()) : [m * Lu, g * Lu, v * Lu]
                }, C.angle = function (e) {
                    return arguments.length ? (P = e % 360 * Eu, I()) : P * Lu
                }, C.precision = function (e) {
                    return arguments.length ? (a = Ad(l, G = e * e), M()) : Fu(G)
                }, C.fitExtent = function (e, n) {
                    return Id(C, e, n)
                }, C.fitSize = function (e, n) {
                    return Id(C, [
                        [0, 0], e
                    ], n)
                }, C.fitWidth = function (e, n) {
                    return a = e, Sd(o = C, function (e) {
                        var n = +a,
                            t = n / (e[1][0] - e[0][0]),
                            r = (n - t * (e[1][0] + e[0][0])) / 2,
                            i = -t * e[0][1];
                        o.scale(150 * t).translate([r, i])
                    }, n);
                    var o, a
                }, C.fitHeight = function (e, n) {
                    return a = e, Sd(o = C, function (e) {
                        var n = +a,
                            t = n / (e[1][1] - e[0][1]),
                            r = -t * e[0][0],
                            i = (n - t * (e[1][1] + e[0][1])) / 2;
                        o.scale(150 * t).translate([r, i])
                    }, n);
                    var o, a
                },
                function () {
                    return t = e.apply(this, arguments), C.invert = t.invert && S, I()
                }
        }(function () {
            return e
        })()
    }

    function Ed(e, n) {
        return [e, Bu(Ru((Au + n) / 2))]
    }

    function Nd() {
        return function (t) {
            var r, i, o, a = Ld(t),
                n = a.center,
                l = a.scale,
                c = a.translate,
                s = a.clipExtent,
                u = null;

            function p() {
                var e = ku * l(),
                    n = a(function (n) {
                        function e(e) {
                            return (e = n(e[0] * Eu, e[1] * Eu))[0] *= Lu, e[1] *= Lu, e
                        }
                        return n = lp(n[0] * Eu, n[1] * Eu, 2 < n.length ? n[2] * Eu : 0), e.invert = function (e) {
                            return (e = n.invert(e[0] * Eu, e[1] * Eu))[0] *= Lu, e[1] *= Lu, e
                        }, e
                    }(a.rotate()).invert([0, 0]));
                return s(null == u ? [
                    [n[0] - e, n[1] - e],
                    [n[0] + e, n[1] + e]
                ] : t === Ed ? [
                    [Math.max(n[0] - e, u), r],
                    [Math.min(n[0] + e, i), o]
                ] : [
                    [u, Math.max(n[1] - e, r)],
                    [i, Math.min(n[1] + e, o)]
                ])
            }
            return a.scale = function (e) {
                return arguments.length ? (l(e), p()) : l()
            }, a.translate = function (e) {
                return arguments.length ? (c(e), p()) : c()
            }, a.center = function (e) {
                return arguments.length ? (n(e), p()) : n()
            }, a.clipExtent = function (e) {
                return arguments.length ? (null == e ? u = r = i = o = null : (u = +e[0][0], r = +e[0][1], i = +e[1][0], o = +e[1][1]), p()) : null == u ? null : [
                    [u, r],
                    [i, o]
                ]
            }, p()
        }(Ed).scale(961 / Ou)
    }
    Ed.invert = function (e, n) {
        return [e, 2 * ju(zu(n)) - Au]
    };
    var jd = Math.PI,
        Td = 2 * jd,
        $d = 1e-6,
        zd = Td - $d;

    function Bd() {
        this._x0 = this._y0 = this._x1 = this._y1 = null, this._ = ""
    }

    function qd() {
        return new Bd
    }

    function Fd(e) {
        return function () {
            return e
        }
    }
    Bd.prototype = qd.prototype = {
        constructor: Bd,
        moveTo: function (e, n) {
            this._ += "M" + (this._x0 = this._x1 = +e) + "," + (this._y0 = this._y1 = +n)
        },
        closePath: function () {
            null !== this._x1 && (this._x1 = this._x0, this._y1 = this._y0, this._ += "Z")
        },
        lineTo: function (e, n) {
            this._ += "L" + (this._x1 = +e) + "," + (this._y1 = +n)
        },
        quadraticCurveTo: function (e, n, t, r) {
            this._ += "Q" + +e + "," + +n + "," + (this._x1 = +t) + "," + (this._y1 = +r)
        },
        bezierCurveTo: function (e, n, t, r, i, o) {
            this._ += "C" + +e + "," + +n + "," + +t + "," + +r + "," + (this._x1 = +i) + "," + (this._y1 = +o)
        },
        arcTo: function (e, n, t, r, i) {
            e = +e, n = +n, t = +t, r = +r, i = +i;
            var o = this._x1,
                a = this._y1,
                l = t - e,
                c = r - n,
                s = o - e,
                u = a - n,
                p = s * s + u * u;
            if (i < 0) throw new Error("negative radius: " + i);
            if (null === this._x1) this._ += "M" + (this._x1 = e) + "," + (this._y1 = n);
            else if ($d < p)
                if (Math.abs(u * l - c * s) > $d && i) {
                    var d = t - o,
                        f = r - a,
                        h = l * l + c * c,
                        y = d * d + f * f,
                        m = Math.sqrt(h),
                        g = Math.sqrt(p),
                        v = i * Math.tan((jd - Math.acos((h + p - y) / (2 * m * g))) / 2),
                        P = v / g,
                        x = v / m;
                    Math.abs(P - 1) > $d && (this._ += "L" + (e + P * s) + "," + (n + P * u)), this._ += "A" + i + "," + i + ",0,0," + +(s * f < u * d) + "," + (this._x1 = e + x * l) + "," + (this._y1 = n + x * c)
                } else this._ += "L" + (this._x1 = e) + "," + (this._y1 = n);
            else;
        },
        arc: function (e, n, t, r, i, o) {
            e = +e, n = +n;
            var a = (t = +t) * Math.cos(r),
                l = t * Math.sin(r),
                c = e + a,
                s = n + l,
                u = 1 ^ o,
                p = o ? r - i : i - r;
            if (t < 0) throw new Error("negative radius: " + t);
            null === this._x1 ? this._ += "M" + c + "," + s : (Math.abs(this._x1 - c) > $d || Math.abs(this._y1 - s) > $d) && (this._ += "L" + c + "," + s), t && (p < 0 && (p = p % Td + Td), zd < p ? this._ += "A" + t + "," + t + ",0,1," + u + "," + (e - a) + "," + (n - l) + "A" + t + "," + t + ",0,1," + u + "," + (this._x1 = c) + "," + (this._y1 = s) : $d < p && (this._ += "A" + t + "," + t + ",0," + +(jd <= p) + "," + u + "," + (this._x1 = e + t * Math.cos(i)) + "," + (this._y1 = n + t * Math.sin(i))))
        },
        rect: function (e, n, t, r) {
            this._ += "M" + (this._x0 = this._x1 = +e) + "," + (this._y0 = this._y1 = +n) + "h" + +t + "v" + +r + "h" + -t + "Z"
        },
        toString: function () {
            return this._
        }
    };
    var Rd = Math.PI,
        Ud = 2 * Rd,
        Yd = {
            draw: function (e, n) {
                var t = Math.sqrt(n / Rd);
                e.moveTo(t, 0), e.arc(0, 0, t, 0, Ud)
            }
        },
        Hd = {
            draw: function (e, n) {
                var t = Math.sqrt(n / 5) / 2;
                e.moveTo(-3 * t, -t), e.lineTo(-t, -t), e.lineTo(-t, -3 * t), e.lineTo(t, -3 * t), e.lineTo(t, -t), e.lineTo(3 * t, -t), e.lineTo(3 * t, t), e.lineTo(t, t), e.lineTo(t, 3 * t), e.lineTo(-t, 3 * t), e.lineTo(-t, t), e.lineTo(-3 * t, t), e.closePath()
            }
        };

    function Vd() {
        var n = Fd(Yd),
            t = Fd(64),
            r = null;

        function i() {
            var e;
            if (r || (r = e = qd()), n.apply(this, arguments).draw(r, +t.apply(this, arguments)), e) return r = null, e + "" || null
        }
        return i.type = function (e) {
            return arguments.length ? (n = "function" == typeof e ? e : Fd(e), i) : n
        }, i.size = function (e) {
            return arguments.length ? (t = "function" == typeof e ? e : Fd(+e), i) : t
        }, i.context = function (e) {
            return arguments.length ? (r = null == e ? null : e, i) : r
        }, i
    }

    function Wd(e) {
        return e < 0 ? -1 : 1
    }

    function Zd(e, n, t) {
        var r = e._x1 - e._x0,
            i = n - e._x1,
            o = (e._y1 - e._y0) / (r || i < 0 && -0),
            a = (t - e._y1) / (i || r < 0 && -0),
            l = (o * i + a * r) / (r + i);
        return (Wd(o) + Wd(a)) * Math.min(Math.abs(o), Math.abs(a), .5 * Math.abs(l)) || 0
    }

    function Kd(e, n) {
        var t = e._x1 - e._x0;
        return t ? (3 * (e._y1 - e._y0) / t - n) / 2 : n
    }

    function Xd(e, n, t) {
        var r = e._x0,
            i = e._y0,
            o = e._x1,
            a = e._y1,
            l = (o - r) / 3;
        e._context.bezierCurveTo(r + l, i + l * n, o - l, a - l * t, o, a)
    }

    function Jd(e) {
        this._context = e
    }

    function Qd(e) {
        this._context = e
    }

    function ef(e) {
        return e
    }

    function nf(e, n) {
        var t = n.id,
            r = n.bbox,
            i = null == n.properties ? {} : n.properties,
            o = function (e, n) {
                var o = function (e) {
                        if (null == e) return ef;
                        var o, a, l = e.scale[0],
                            c = e.scale[1],
                            s = e.translate[0],
                            u = e.translate[1];
                        return function (e, n) {
                            n || (o = a = 0);
                            var t = 2,
                                r = e.length,
                                i = new Array(r);
                            for (i[0] = (o += e[0]) * l + s, i[1] = (a += e[1]) * c + u; t < r;) i[t] = e[t], ++t;
                            return i
                        }
                    }(e.transform),
                    a = e.arcs;

                function i(e, n) {
                    n.length && n.pop();
                    for (var t = a[e < 0 ? ~e : e], r = 0, i = t.length; r < i; ++r) n.push(o(t[r], r));
                    e < 0 && function (e, n) {
                        for (var t, r = e.length, i = r - n; i < --r;) t = e[i], e[i++] = e[r], e[r] = t
                    }(n, i)
                }

                function l(e) {
                    return o(e)
                }

                function c(e) {
                    for (var n = [], t = 0, r = e.length; t < r; ++t) i(e[t], n);
                    return n.length < 2 && n.push(n[0]), n
                }

                function t(e) {
                    for (var n = c(e); n.length < 4;) n.push(n[0]);
                    return n
                }

                function s(e) {
                    return e.map(t)
                }
                return function e(n) {
                    var t, r = n.type;
                    switch (r) {
                    case "GeometryCollection":
                        return {
                            type: r, geometries: n.geometries.map(e)
                        };
                    case "Point":
                        t = l(n.coordinates);
                        break;
                    case "MultiPoint":
                        t = n.coordinates.map(l);
                        break;
                    case "LineString":
                        t = c(n.arcs);
                        break;
                    case "MultiLineString":
                        t = n.arcs.map(c);
                        break;
                    case "Polygon":
                        t = s(n.arcs);
                        break;
                    case "MultiPolygon":
                        t = n.arcs.map(s);
                        break;
                    default:
                        return null
                    }
                    return {
                        type: r,
                        coordinates: t
                    }
                }(n)
            }(e, n);
        return null == t && null == r ? {
            type: "Feature",
            properties: i,
            geometry: o
        } : null == r ? {
            type: "Feature",
            id: t,
            properties: i,
            geometry: o
        } : {
            type: "Feature",
            id: t,
            bbox: r,
            properties: i,
            geometry: o
        }
    }
    Jd.prototype = {
        areaStart: function () {
            this._line = 0
        },
        areaEnd: function () {
            this._line = NaN
        },
        lineStart: function () {
            this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN, this._point = 0
        },
        lineEnd: function () {
            switch (this._point) {
            case 2:
                this._context.lineTo(this._x1, this._y1);
                break;
            case 3:
                Xd(this, this._t0, Kd(this, this._t0))
            }(this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(), this._line = 1 - this._line
        },
        point: function (e, n) {
            var t = NaN;
            if (n = +n, (e = +e) !== this._x1 || n !== this._y1) {
                switch (this._point) {
                case 0:
                    this._point = 1, this._line ? this._context.lineTo(e, n) : this._context.moveTo(e, n);
                    break;
                case 1:
                    this._point = 2;
                    break;
                case 2:
                    this._point = 3, Xd(this, Kd(this, t = Zd(this, e, n)), t);
                    break;
                default:
                    Xd(this, this._t0, t = Zd(this, e, n))
                }
                this._x0 = this._x1, this._x1 = e, this._y0 = this._y1, this._y1 = n, this._t0 = t
            }
        }
    }, (function (e) {
        this._context = new Qd(e)
    }.prototype = Object.create(Jd.prototype)).point = function (e, n) {
        Jd.prototype.point.call(this, n, e)
    }, Qd.prototype = {
        moveTo: function (e, n) {
            this._context.moveTo(n, e)
        },
        closePath: function () {
            this._context.closePath()
        },
        lineTo: function (e, n) {
            this._context.lineTo(n, e)
        },
        bezierCurveTo: function (e, n, t, r, i, o) {
            this._context.bezierCurveTo(n, e, r, t, o, i)
        }
    };
    Math.PI;
    var tf = ["Africa", "Asia", "Europe", "Middle East", "Oceania", "North America", "South America", "no data"],
        rf = ["AFR", "AS", "EU", "ME", "OC", "NA", "SA", "n/a"],
        of = ["Africa", "Asia", "Europe", "M. East", "Oceania", "N. America", "S. America", "no data"],
        af = {
            Afghanistan: "Asia",
            Albania: "Europe",
            Algeria: "Africa",
            Angola: "Africa",
            Argentina: "South America",
            Armenia: "Asia",
            Australia: "Oceania",
            Austria: "Europe",
            Azerbaijan: "Asia",
            Bahamas: "North America",
            Bahrain: "Middle East",
            Bangladesh: "Asia",
            Barbados: "North America",
            Belarus: "Europe",
            Belgium: "Europe",
            Belize: "North America",
            Benin: "Africa",
            Bhutan: "Asia",
            Bolivia: "South America",
            "Bosnia and Herzegovina": "Europe",
            Botswana: "Africa",
            Brazil: "South America",
            Brunei: "Asia",
            Bulgaria: "Europe",
            "Burkina Faso": "Africa",
            Burundi: "Africa",
            "Cabo Verde": "Africa",
            Cambodia: "Asia",
            Cameroon: "Africa",
            Canada: "North America",
            "Central African Republic": "Africa",
            Chad: "Africa",
            Chile: "South America",
            China: "Asia",
            Colombia: "South America",
            Comoros: "Africa",
            "Congo (Dem. Rep.)": "Africa",
            "Congo (Rep.)": "Africa",
            "Costa Rica": "North America",
            "Cote d'Ivoire": "Africa",
            Croatia: "Europe",
            Cuba: "North America",
            Cyprus: "Middle East",
            "Czech Republic": "Europe",
            Denmark: "Europe",
            Djibouti: "Africa",
            Dominica: "North America",
            "Dominican Republic": "North America",
            Ecuador: "South America",
            Egypt: "Middle East",
            "El Salvador": "North America",
            "Equatorial Guinea": "Africa",
            Eritrea: "Africa",
            Estonia: "Europe",
            Eswatini: "Africa",
            Ethiopia: "Africa",
            Fiji: "Oceania",
            Finland: "Europe",
            France: "Europe",
            Gabon: "Africa",
            "Gambia. The": "Africa",
            Georgia: "Asia",
            Germany: "Europe",
            Ghana: "Africa",
            Greece: "Europe",
            Guatemala: "North America",
            Guinea: "Africa",
            "Guinea-Bissau": "Africa",
            Guyana: "South America",
            Haiti: "North America",
            Honduras: "North America",
            Hungary: "Europe",
            Iceland: "Europe",
            India: "Asia",
            Indonesia: "Asia",
            Iran: "Middle East",
            Iraq: "Middle East",
            Ireland: "Europe",
            Israel: "Middle East",
            Italy: "Europe",
            Jamaica: "North America",
            Japan: "Asia",
            Jordan: "Middle East",
            Kazakhstan: "Asia",
            Kenya: "Africa",
            Kiribati: "Oceania",
            "Korea (Dem. Peoples Rep.)": "Asia",
            "Korea (Rep.)": "Asia",
            Kosovo: "Asia",
            Kuwait: "Middle East",
            Kyrgyzstan: "Asia",
            Laos: "Asia",
            Latvia: "Europe",
            Lebanon: "Middle East",
            Lesotho: "Africa",
            Liberia: "Africa",
            Libya: "Africa",
            Lithuania: "Europe",
            Luxembourg: "Europe",
            Macedonia: "Europe",
            Madagascar: "Africa",
            Malawi: "Africa",
            Malaysia: "Asia",
            Maldives: "Asia",
            Mali: "Africa",
            Malta: "Europe",
            Mauritania: "Africa",
            Mauritius: "Africa",
            Mexico: "North America",
            Micronesia: "Oceania",
            Moldova: "Europe",
            Mongolia: "Asia",
            Montenegro: "Europe",
            Morocco: "Africa",
            Mozambique: "Africa",
            Myanmar: "Asia",
            Namibia: "Africa",
            Nepal: "Asia",
            Netherlands: "Europe",
            "New Zealand": "Oceania",
            Nicaragua: "North America",
            Niger: "Africa",
            Nigeria: "Africa",
            Norway: "Europe",
            Oman: "Middle East",
            Pakistan: "Asia",
            Panama: "North America",
            "Papua New Guinea": "Oceania",
            Paraguay: "South America",
            Peru: "South America",
            Philippines: "Asia",
            Poland: "Europe",
            Portugal: "Europe",
            Qatar: "Middle East",
            Romania: "Europe",
            Russia: "Europe",
            Rwanda: "Africa",
            "Saint Lucia": "North America",
            "Saint Vincent and the Grenadines": "North America",
            Samoa: "Oceania",
            "Sao Tome and Principe": "Africa",
            "Saudi Arabia": "Middle East",
            Senegal: "Africa",
            Serbia: "Europe",
            Seychelles: "Africa",
            "Sierra Leone": "Africa",
            Singapore: "Asia",
            Slovakia: "Europe",
            Slovenia: "Europe",
            "Solomon Islands": "Oceania",
            Somalia: "Africa",
            "South Africa": "Africa",
            Spain: "Europe",
            "Sri Lanka": "Asia",
            Sudan: "Africa",
            Suriname: "South America",
            Sweden: "Europe",
            Switzerland: "Europe",
            Syria: "Middle East",
            Taiwan: "Asia",
            Tajikistan: "Asia",
            Tanzania: "Africa",
            Thailand: "Asia",
            "Timor-Leste": "Asia",
            Togo: "Africa",
            Tonga: "Oceania",
            "Trinidad and Tobago": "North America",
            Tunisia: "Africa",
            Turkey: "Middle East",
            Turkmenistan: "Asia",
            Uganda: "Africa",
            Ukraine: "Europe",
            "United Arab Emirates": "Middle East",
            "United Kingdom": "Europe",
            "United States": "North America",
            Uruguay: "South America",
            Uzbekistan: "Asia",
            Vanuatu: "Oceania",
            Venezuela: "South America",
            Vietnam: "Asia",
            Yemen: "Middle East",
            Zambia: "Africa",
            Zimbabwe: "Africa"
        },
        lf = 0,
        cf = 0,
        sf = 0,
        uf = 0,
        pf = "population",
        df = "indicator",
        ff = ["Andorra", "Antigua & Barbuda", "Grenada", "Liechtenstein", "Marshall Islands", "Monaco", "Nauru", "Palau", "Saint Kitts and Nevis", "San Marino", "South Sudan", "Tuvalu"],
        hf = ["France", "Belgium", "Sweden", "Denmark", "Austria", "Finland", "Norway", "Iceland", "Ireland", "Netherlands", "Germany", "United Kingdom", "New Zealand", "Switzerland", "Luxembourg", "United States", "Austria", "Canada", "Japan", "Australia"],
        yf = ["China", "India"],
        mf = ["Singapore", "Brunei", "United Arab Emirates", "Qatar", "Bahrain", "Saudi Arabia", "Kuwait", "Oman"],
        gf = ["Russia", "Brazil"],
        vf = ["political stability & absence of violence", "rule of law", "regulatory quality", "property rights score", "government integrity score"],
        Pf = [2, 3, 9, 10, 13, 15, 16, 20, 21],
        xf = [4, 5, 8, 23, 24],
        bf = [6, 7, 22, 25, 26],
        wf = [19],
        Df = [4, 17, 18, 20, 21, 27, 28, 29, 30, 31, 21],
        Gf = [{
            "ISO 3166 Country Code": "AD",
            Country: "Andorra",
            Latitude: "42.5",
            Longitude: "1.5"
        }, {
            "ISO 3166 Country Code": "AE",
            Country: "United Arab Emirates",
            Latitude: "24",
            Longitude: "54"
        }, {
            "ISO 3166 Country Code": "AF",
            Country: "Afghanistan",
            Latitude: "33",
            Longitude: "65"
        }, {
            "ISO 3166 Country Code": "AG",
            Country: "Antigua and Barbuda",
            Latitude: "17.05",
            Longitude: "-61.8"
        }, {
            "ISO 3166 Country Code": "AI",
            Country: "Anguilla",
            Latitude: "18.25",
            Longitude: "-63.17"
        }, {
            "ISO 3166 Country Code": "AL",
            Country: "Albania",
            Latitude: "41",
            Longitude: "20"
        }, {
            "ISO 3166 Country Code": "AM",
            Country: "Armenia",
            Latitude: "40",
            Longitude: "45"
        }, {
            "ISO 3166 Country Code": "AO",
            Country: "Angola",
            Latitude: "-12.5",
            Longitude: "18.5"
        }, {
            "ISO 3166 Country Code": "AQ",
            Country: "Antarctica",
            Latitude: "-90",
            Longitude: "0"
        }, {
            "ISO 3166 Country Code": "AR",
            Country: "Argentina",
            Latitude: "-34",
            Longitude: "-64"
        }, {
            "ISO 3166 Country Code": "AS",
            Country: "American Samoa",
            Latitude: "-14.33",
            Longitude: "-170"
        }, {
            "ISO 3166 Country Code": "AT",
            Country: "Austria",
            Latitude: "47.33",
            Longitude: "13.33"
        }, {
            "ISO 3166 Country Code": "AU",
            Country: "Australia",
            Latitude: "-27",
            Longitude: "133"
        }, {
            "ISO 3166 Country Code": "AW",
            Country: "Aruba",
            Latitude: "12.5",
            Longitude: "-69.97"
        }, {
            "ISO 3166 Country Code": "AX",
            Country: "Aland Islands",
            Latitude: "60.1",
            Longitude: "19.93"
        }, {
            "ISO 3166 Country Code": "AZ",
            Country: "Azerbaijan",
            Latitude: "40.5",
            Longitude: "47.5"
        }, {
            "ISO 3166 Country Code": "BA",
            Country: "Bosnia and Herzegovina",
            Latitude: "44",
            Longitude: "18"
        }, {
            "ISO 3166 Country Code": "BB",
            Country: "Barbados",
            Latitude: "13.17",
            Longitude: "-59.53"
        }, {
            "ISO 3166 Country Code": "BD",
            Country: "Bangladesh",
            Latitude: "24",
            Longitude: "90"
        }, {
            "ISO 3166 Country Code": "BE",
            Country: "Belgium",
            Latitude: "50.83",
            Longitude: "4"
        }, {
            "ISO 3166 Country Code": "BF",
            Country: "Burkina Faso",
            Latitude: "13",
            Longitude: "-2"
        }, {
            "ISO 3166 Country Code": "BG",
            Country: "Bulgaria",
            Latitude: "43",
            Longitude: "25"
        }, {
            "ISO 3166 Country Code": "BH",
            Country: "Bahrain",
            Latitude: "26",
            Longitude: "50.55"
        }, {
            "ISO 3166 Country Code": "BI",
            Country: "Burundi",
            Latitude: "-3.5",
            Longitude: "30"
        }, {
            "ISO 3166 Country Code": "BJ",
            Country: "Benin",
            Latitude: "9.5",
            Longitude: "2.25"
        }, {
            "ISO 3166 Country Code": "BL",
            Country: "St. Barthelemy",
            Latitude: "17.897908",
            Longitude: "-62.850556"
        }, {
            "ISO 3166 Country Code": "BM",
            Country: "Bermuda",
            Latitude: "32.33",
            Longitude: "-64.75"
        }, {
            "ISO 3166 Country Code": "BN",
            Country: "Brunei",
            Latitude: "4.5",
            Longitude: "114.67"
        }, {
            "ISO 3166 Country Code": "BO",
            Country: "Bolivia",
            Latitude: "-17",
            Longitude: "-65"
        }, {
            "ISO 3166 Country Code": "BQ",
            Country: "Bonaire, Saint Eustatius and Saba",
            Latitude: "12.25",
            Longitude: "-68.75"
        }, {
            "ISO 3166 Country Code": "BR",
            Country: "Brazil",
            Latitude: "-10",
            Longitude: "-55"
        }, {
            "ISO 3166 Country Code": "BS",
            Country: "Bahamas",
            Latitude: "24.25",
            Longitude: "-76"
        }, {
            "ISO 3166 Country Code": "BT",
            Country: "Bhutan",
            Latitude: "27.5",
            Longitude: "90.5"
        }, {
            "ISO 3166 Country Code": "BV",
            Country: "Bouvet Island",
            Latitude: "-54.43",
            Longitude: "3.4"
        }, {
            "ISO 3166 Country Code": "BW",
            Country: "Botswana",
            Latitude: "-22",
            Longitude: "24"
        }, {
            "ISO 3166 Country Code": "BY",
            Country: "Belarus",
            Latitude: "53",
            Longitude: "28"
        }, {
            "ISO 3166 Country Code": "BZ",
            Country: "Belize",
            Latitude: "17.25",
            Longitude: "-88.75"
        }, {
            "ISO 3166 Country Code": "CA",
            Country: "Canada",
            Latitude: "60",
            Longitude: "-95"
        }, {
            "ISO 3166 Country Code": "CC",
            Country: "Cocos (Keeling) Islands",
            Latitude: "-12.5",
            Longitude: "96.83"
        }, {
            "ISO 3166 Country Code": "CD",
            Country: "Congo (Dem. Rep.)",
            Latitude: "0",
            Longitude: "25"
        }, {
            "ISO 3166 Country Code": "CF",
            Country: "Central African Republic",
            Latitude: "7",
            Longitude: "21"
        }, {
            "ISO 3166 Country Code": "CG",
            Country: "Congo (Rep.)",
            Latitude: "-1",
            Longitude: "15"
        }, {
            "ISO 3166 Country Code": "CH",
            Country: "Switzerland",
            Latitude: "47",
            Longitude: "8"
        }, {
            "ISO 3166 Country Code": "CI",
            Country: "Cote d'Ivoire",
            Latitude: "8",
            Longitude: "-5"
        }, {
            "ISO 3166 Country Code": "CK",
            Country: "Cook Islands",
            Latitude: "-21.23",
            Longitude: "-159.77"
        }, {
            "ISO 3166 Country Code": "CL",
            Country: "Chile",
            Latitude: "-30",
            Longitude: "-71"
        }, {
            "ISO 3166 Country Code": "CM",
            Country: "Cameroon",
            Latitude: "6",
            Longitude: "12"
        }, {
            "ISO 3166 Country Code": "CN",
            Country: "China",
            Latitude: "35",
            Longitude: "105"
        }, {
            "ISO 3166 Country Code": "CO",
            Country: "Colombia",
            Latitude: "4",
            Longitude: "-72"
        }, {
            "ISO 3166 Country Code": "CR",
            Country: "Costa Rica",
            Latitude: "10",
            Longitude: "-84"
        }, {
            "ISO 3166 Country Code": "CU",
            Country: "Cuba",
            Latitude: "21.5",
            Longitude: "-80"
        }, {
            "ISO 3166 Country Code": "CV",
            Country: "Cabo Verde",
            Latitude: "16",
            Longitude: "-24"
        }, {
            "ISO 3166 Country Code": "CW",
            Country: "Curaçao",
            Latitude: "12.25",
            Longitude: "-68.75"
        }, {
            "ISO 3166 Country Code": "CX",
            Country: "Christmas Island",
            Latitude: "-10.5",
            Longitude: "105.67"
        }, {
            "ISO 3166 Country Code": "CY",
            Country: "Cyprus",
            Latitude: "35",
            Longitude: "33"
        }, {
            "ISO 3166 Country Code": "CZ",
            Country: "Czech Republic",
            Latitude: "49.75",
            Longitude: "15.5"
        }, {
            "ISO 3166 Country Code": "DE",
            Country: "Germany",
            Latitude: "51",
            Longitude: "9"
        }, {
            "ISO 3166 Country Code": "DJ",
            Country: "Djibouti",
            Latitude: "11.5",
            Longitude: "43"
        }, {
            "ISO 3166 Country Code": "DK",
            Country: "Denmark",
            Latitude: "56",
            Longitude: "10"
        }, {
            "ISO 3166 Country Code": "DM",
            Country: "Dominica",
            Latitude: "15.42",
            Longitude: "-61.33"
        }, {
            "ISO 3166 Country Code": "DO",
            Country: "Dominican Republic",
            Latitude: "19",
            Longitude: "-70.67"
        }, {
            "ISO 3166 Country Code": "DZ",
            Country: "Algeria",
            Latitude: "28",
            Longitude: "3"
        }, {
            "ISO 3166 Country Code": "EC",
            Country: "Ecuador",
            Latitude: "-2",
            Longitude: "-77.5"
        }, {
            "ISO 3166 Country Code": "EE",
            Country: "Estonia",
            Latitude: "59",
            Longitude: "26"
        }, {
            "ISO 3166 Country Code": "EG",
            Country: "Egypt",
            Latitude: "27",
            Longitude: "30"
        }, {
            "ISO 3166 Country Code": "EH",
            Country: "Western Sahara",
            Latitude: "24.5",
            Longitude: "-13"
        }, {
            "ISO 3166 Country Code": "ER",
            Country: "Eritrea",
            Latitude: "15",
            Longitude: "39"
        }, {
            "ISO 3166 Country Code": "",
            Country: "Eswatini",
            Latitude: "-26",
            Longitude: "31"
        }, {
            "ISO 3166 Country Code": "ES",
            Country: "Spain",
            Latitude: "40",
            Longitude: "-4"
        }, {
            "ISO 3166 Country Code": "ET",
            Country: "Ethiopia",
            Latitude: "8",
            Longitude: "38"
        }, {
            "ISO 3166 Country Code": "FI",
            Country: "Finland",
            Latitude: "64",
            Longitude: "26"
        }, {
            "ISO 3166 Country Code": "FJ",
            Country: "Fiji",
            Latitude: "-18",
            Longitude: "175"
        }, {
            "ISO 3166 Country Code": "FK",
            Country: "Falkland Islands (Malvinas)",
            Latitude: "-51.75",
            Longitude: "-59"
        }, {
            "ISO 3166 Country Code": "FM",
            Country: "Micronesia",
            Latitude: "6.92",
            Longitude: "158.25"
        }, {
            "ISO 3166 Country Code": "FO",
            Country: "Faroe Islands",
            Latitude: "62",
            Longitude: "-7"
        }, {
            "ISO 3166 Country Code": "FR",
            Country: "France",
            Latitude: "46",
            Longitude: "2"
        }, {
            "ISO 3166 Country Code": "GA",
            Country: "Gabon",
            Latitude: "-1",
            Longitude: "11.75"
        }, {
            "ISO 3166 Country Code": "GB",
            Country: "United Kingdom",
            Latitude: "54",
            Longitude: "-2"
        }, {
            "ISO 3166 Country Code": "GD",
            Country: "Grenada",
            Latitude: "12.12",
            Longitude: "-61.67"
        }, {
            "ISO 3166 Country Code": "GE",
            Country: "Georgia",
            Latitude: "42",
            Longitude: "43.5"
        }, {
            "ISO 3166 Country Code": "GF",
            Country: "French Guiana",
            Latitude: "4",
            Longitude: "-53"
        }, {
            "ISO 3166 Country Code": "GG",
            Country: "Guernsey",
            Latitude: "49.45",
            Longitude: "-2.533333"
        }, {
            "ISO 3166 Country Code": "GH",
            Country: "Ghana",
            Latitude: "8",
            Longitude: "-2"
        }, {
            "ISO 3166 Country Code": "GI",
            Country: "Gibraltar",
            Latitude: "36.18",
            Longitude: "-5.37"
        }, {
            "ISO 3166 Country Code": "GL",
            Country: "Greenland",
            Latitude: "72",
            Longitude: "-40"
        }, {
            "ISO 3166 Country Code": "GM",
            Country: "Gambia. The",
            Latitude: "13.47",
            Longitude: "-16.57"
        }, {
            "ISO 3166 Country Code": "GN",
            Country: "Guinea",
            Latitude: "11",
            Longitude: "-10"
        }, {
            "ISO 3166 Country Code": "GP",
            Country: "Guadeloupe",
            Latitude: "16.25",
            Longitude: "-61.58"
        }, {
            "ISO 3166 Country Code": "GQ",
            Country: "Equatorial Guinea",
            Latitude: "2",
            Longitude: "10"
        }, {
            "ISO 3166 Country Code": "GR",
            Country: "Greece",
            Latitude: "39",
            Longitude: "22"
        }, {
            "ISO 3166 Country Code": "GS",
            Country: "South Georgia and the South Sandwich Islands",
            Latitude: "-54.5",
            Longitude: "-37"
        }, {
            "ISO 3166 Country Code": "GT",
            Country: "Guatemala",
            Latitude: "15.5",
            Longitude: "-90.25"
        }, {
            "ISO 3166 Country Code": "GU",
            Country: "Guam",
            Latitude: "13.47",
            Longitude: "144.78"
        }, {
            "ISO 3166 Country Code": "GW",
            Country: "Guinea-Bissau",
            Latitude: "12",
            Longitude: "-15"
        }, {
            "ISO 3166 Country Code": "GY",
            Country: "Guyana",
            Latitude: "5",
            Longitude: "-59"
        }, {
            "ISO 3166 Country Code": "HK",
            Country: "Hong Kong",
            Latitude: "22.25",
            Longitude: "114.17"
        }, {
            "ISO 3166 Country Code": "HM",
            Country: "Heard Island and McDonald Islands",
            Latitude: "-53.1",
            Longitude: "72.52"
        }, {
            "ISO 3166 Country Code": "HN",
            Country: "Honduras",
            Latitude: "15",
            Longitude: "-86.5"
        }, {
            "ISO 3166 Country Code": "HR",
            Country: "Croatia",
            Latitude: "45.17",
            Longitude: "15.5"
        }, {
            "ISO 3166 Country Code": "HT",
            Country: "Haiti",
            Latitude: "19",
            Longitude: "-72.42"
        }, {
            "ISO 3166 Country Code": "HU",
            Country: "Hungary",
            Latitude: "47",
            Longitude: "20"
        }, {
            "ISO 3166 Country Code": "ID",
            Country: "Indonesia",
            Latitude: "-5",
            Longitude: "120"
        }, {
            "ISO 3166 Country Code": "IE",
            Country: "Ireland",
            Latitude: "53",
            Longitude: "-8"
        }, {
            "ISO 3166 Country Code": "IL",
            Country: "Israel",
            Latitude: "31.5",
            Longitude: "34.75"
        }, {
            "ISO 3166 Country Code": "IM",
            Country: "Isle of Man",
            Latitude: "54.14521",
            Longitude: "-4.48172"
        }, {
            "ISO 3166 Country Code": "IN",
            Country: "India",
            Latitude: "20",
            Longitude: "77"
        }, {
            "ISO 3166 Country Code": "IO",
            Country: "British Indian Ocean Territory",
            Latitude: "-6",
            Longitude: "71.5"
        }, {
            "ISO 3166 Country Code": "IQ",
            Country: "Iraq",
            Latitude: "33",
            Longitude: "44"
        }, {
            "ISO 3166 Country Code": "IR",
            Country: "Iran",
            Latitude: "32",
            Longitude: "53"
        }, {
            "ISO 3166 Country Code": "IS",
            Country: "Iceland",
            Latitude: "65",
            Longitude: "-18"
        }, {
            "ISO 3166 Country Code": "IT",
            Country: "Italy",
            Latitude: "42.83",
            Longitude: "12.83"
        }, {
            "ISO 3166 Country Code": "JE",
            Country: "Jersey",
            Latitude: "49.190017",
            Longitude: "-2.11"
        }, {
            "ISO 3166 Country Code": "JM",
            Country: "Jamaica",
            Latitude: "18.25",
            Longitude: "-77.5"
        }, {
            "ISO 3166 Country Code": "JO",
            Country: "Jordan",
            Latitude: "31",
            Longitude: "36"
        }, {
            "ISO 3166 Country Code": "JP",
            Country: "Japan",
            Latitude: "36",
            Longitude: "138"
        }, {
            "ISO 3166 Country Code": "KE",
            Country: "Kenya",
            Latitude: "1",
            Longitude: "38"
        }, {
            "ISO 3166 Country Code": "",
            Country: "Kosovo",
            Latitude: "42",
            Longitude: "21"
        }, {
            "ISO 3166 Country Code": "KG",
            Country: "Kyrgyzstan",
            Latitude: "41",
            Longitude: "75"
        }, {
            "ISO 3166 Country Code": "KH",
            Country: "Cambodia",
            Latitude: "13",
            Longitude: "105"
        }, {
            "ISO 3166 Country Code": "KI",
            Country: "Kiribati",
            Latitude: "1.42",
            Longitude: "173"
        }, {
            "ISO 3166 Country Code": "KM",
            Country: "Comoros",
            Latitude: "-12.17",
            Longitude: "44.25"
        }, {
            "ISO 3166 Country Code": "KN",
            Country: "Saint Kitts and Nevis",
            Latitude: "17.33",
            Longitude: "-62.75"
        }, {
            "ISO 3166 Country Code": "KP",
            Country: "Korea (Dem. Peoples Rep.)",
            Latitude: "40",
            Longitude: "127"
        }, {
            "ISO 3166 Country Code": "KR",
            Country: "Korea (Rep.)",
            Latitude: "37",
            Longitude: "127.5"
        }, {
            "ISO 3166 Country Code": "KW",
            Country: "Kuwait",
            Latitude: "29.34",
            Longitude: "47.66"
        }, {
            "ISO 3166 Country Code": "KY",
            Country: "Cayman Islands",
            Latitude: "19.5",
            Longitude: "-80.5"
        }, {
            "ISO 3166 Country Code": "KZ",
            Country: "Kazakhstan",
            Latitude: "48",
            Longitude: "68"
        }, {
            "ISO 3166 Country Code": "LA",
            Country: "Laos",
            Latitude: "18",
            Longitude: "105"
        }, {
            "ISO 3166 Country Code": "LB",
            Country: "Lebanon",
            Latitude: "33.83",
            Longitude: "35.83"
        }, {
            "ISO 3166 Country Code": "LC",
            Country: "Saint Lucia",
            Latitude: "13.88",
            Longitude: "-61.13"
        }, {
            "ISO 3166 Country Code": "LI",
            Country: "Liechtenstein",
            Latitude: "47.17",
            Longitude: "9.53"
        }, {
            "ISO 3166 Country Code": "LK",
            Country: "Sri Lanka",
            Latitude: "7",
            Longitude: "81"
        }, {
            "ISO 3166 Country Code": "LR",
            Country: "Liberia",
            Latitude: "6.5",
            Longitude: "-9.5"
        }, {
            "ISO 3166 Country Code": "LS",
            Country: "Lesotho",
            Latitude: "-29.5",
            Longitude: "28.5"
        }, {
            "ISO 3166 Country Code": "LT",
            Country: "Lithuania",
            Latitude: "56",
            Longitude: "24"
        }, {
            "ISO 3166 Country Code": "LU",
            Country: "Luxembourg",
            Latitude: "49.75",
            Longitude: "6.17"
        }, {
            "ISO 3166 Country Code": "LV",
            Country: "Latvia",
            Latitude: "57",
            Longitude: "25"
        }, {
            "ISO 3166 Country Code": "LY",
            Country: "Libya",
            Latitude: "25",
            Longitude: "17"
        }, {
            "ISO 3166 Country Code": "MA",
            Country: "Morocco",
            Latitude: "32",
            Longitude: "-5"
        }, {
            "ISO 3166 Country Code": "MC",
            Country: "Monaco",
            Latitude: "43.73",
            Longitude: "7.4"
        }, {
            "ISO 3166 Country Code": "MD",
            Country: "Moldova",
            Latitude: "47",
            Longitude: "29"
        }, {
            "ISO 3166 Country Code": "ME",
            Country: "Montenegro",
            Latitude: "42",
            Longitude: "19"
        }, {
            "ISO 3166 Country Code": "MF",
            Country: "Saint Martin",
            Latitude: "18.066667",
            Longitude: "-63.05"
        }, {
            "ISO 3166 Country Code": "MG",
            Country: "Madagascar",
            Latitude: "-20",
            Longitude: "47"
        }, {
            "ISO 3166 Country Code": "MH",
            Country: "Marshall Islands",
            Latitude: "9",
            Longitude: "168"
        }, {
            "ISO 3166 Country Code": "MK",
            Country: "Macedonia",
            Latitude: "41.83",
            Longitude: "22"
        }, {
            "ISO 3166 Country Code": "ML",
            Country: "Mali",
            Latitude: "17",
            Longitude: "-4"
        }, {
            "ISO 3166 Country Code": "MM",
            Country: "Myanmar",
            Latitude: "22",
            Longitude: "98"
        }, {
            "ISO 3166 Country Code": "MN",
            Country: "Mongolia",
            Latitude: "46",
            Longitude: "105"
        }, {
            "ISO 3166 Country Code": "MO",
            Country: "Macao",
            Latitude: "22.17",
            Longitude: "113.55"
        }, {
            "ISO 3166 Country Code": "MP",
            Country: "Northern Mariana Islands",
            Latitude: "15.2",
            Longitude: "145.75"
        }, {
            "ISO 3166 Country Code": "MQ",
            Country: "Martinique",
            Latitude: "14.67",
            Longitude: "-61"
        }, {
            "ISO 3166 Country Code": "MR",
            Country: "Mauritania",
            Latitude: "20",
            Longitude: "-12"
        }, {
            "ISO 3166 Country Code": "MS",
            Country: "Montserrat",
            Latitude: "16.75",
            Longitude: "-62.2"
        }, {
            "ISO 3166 Country Code": "MT",
            Country: "Malta",
            Latitude: "35.83",
            Longitude: "14.58"
        }, {
            "ISO 3166 Country Code": "MU",
            Country: "Mauritius",
            Latitude: "-20.28",
            Longitude: "57.55"
        }, {
            "ISO 3166 Country Code": "MV",
            Country: "Maldives",
            Latitude: "3.25",
            Longitude: "73"
        }, {
            "ISO 3166 Country Code": "MW",
            Country: "Malawi",
            Latitude: "-13.5",
            Longitude: "34"
        }, {
            "ISO 3166 Country Code": "MX",
            Country: "Mexico",
            Latitude: "23",
            Longitude: "-102"
        }, {
            "ISO 3166 Country Code": "MY",
            Country: "Malaysia",
            Latitude: "2.5",
            Longitude: "112.5"
        }, {
            "ISO 3166 Country Code": "MZ",
            Country: "Mozambique",
            Latitude: "-18.25",
            Longitude: "35"
        }, {
            "ISO 3166 Country Code": "NA",
            Country: "Namibia",
            Latitude: "-22",
            Longitude: "17"
        }, {
            "ISO 3166 Country Code": "NC",
            Country: "New Caledonia",
            Latitude: "-21.5",
            Longitude: "165.5"
        }, {
            "ISO 3166 Country Code": "NE",
            Country: "Niger",
            Latitude: "16",
            Longitude: "8"
        }, {
            "ISO 3166 Country Code": "NF",
            Country: "Norfolk Island",
            Latitude: "-29.03",
            Longitude: "167.95"
        }, {
            "ISO 3166 Country Code": "NG",
            Country: "Nigeria",
            Latitude: "10",
            Longitude: "8"
        }, {
            "ISO 3166 Country Code": "NI",
            Country: "Nicaragua",
            Latitude: "13",
            Longitude: "-85"
        }, {
            "ISO 3166 Country Code": "NL",
            Country: "Netherlands",
            Latitude: "52.5",
            Longitude: "5.75"
        }, {
            "ISO 3166 Country Code": "NO",
            Country: "Norway",
            Latitude: "62",
            Longitude: "10"
        }, {
            "ISO 3166 Country Code": "NP",
            Country: "Nepal",
            Latitude: "28",
            Longitude: "84"
        }, {
            "ISO 3166 Country Code": "NR",
            Country: "Nauru",
            Latitude: "-0.53",
            Longitude: "166.92"
        }, {
            "ISO 3166 Country Code": "NU",
            Country: "Niue",
            Latitude: "-19.03",
            Longitude: "-169.87"
        }, {
            "ISO 3166 Country Code": "NZ",
            Country: "New Zealand",
            Latitude: "-41",
            Longitude: "174"
        }, {
            "ISO 3166 Country Code": "OM",
            Country: "Oman",
            Latitude: "21",
            Longitude: "57"
        }, {
            "ISO 3166 Country Code": "PA",
            Country: "Panama",
            Latitude: "9",
            Longitude: "-80"
        }, {
            "ISO 3166 Country Code": "PE",
            Country: "Peru",
            Latitude: "-10",
            Longitude: "-76"
        }, {
            "ISO 3166 Country Code": "PF",
            Country: "French Polynesia",
            Latitude: "-15",
            Longitude: "-140"
        }, {
            "ISO 3166 Country Code": "PG",
            Country: "Papua New Guinea",
            Latitude: "-6",
            Longitude: "147"
        }, {
            "ISO 3166 Country Code": "PH",
            Country: "Philippines",
            Latitude: "13",
            Longitude: "122"
        }, {
            "ISO 3166 Country Code": "PK",
            Country: "Pakistan",
            Latitude: "30",
            Longitude: "70"
        }, {
            "ISO 3166 Country Code": "PL",
            Country: "Poland",
            Latitude: "52",
            Longitude: "20"
        }, {
            "ISO 3166 Country Code": "PM",
            Country: "Saint Pierre and Miquelon",
            Latitude: "46.83",
            Longitude: "-56.33"
        }, {
            "ISO 3166 Country Code": "PN",
            Country: "Pitcairn",
            Latitude: "-25.066667",
            Longitude: "-130.1"
        }, {
            "ISO 3166 Country Code": "PR",
            Country: "Puerto Rico",
            Latitude: "18.25",
            Longitude: "-66.5"
        }, {
            "ISO 3166 Country Code": "PS",
            Country: "Palestinian Territory",
            Latitude: "32",
            Longitude: "35.25"
        }, {
            "ISO 3166 Country Code": "PT",
            Country: "Portugal",
            Latitude: "39.5",
            Longitude: "-8"
        }, {
            "ISO 3166 Country Code": "PW",
            Country: "Palau",
            Latitude: "7.5",
            Longitude: "134.5"
        }, {
            "ISO 3166 Country Code": "PY",
            Country: "Paraguay",
            Latitude: "-23",
            Longitude: "-58"
        }, {
            "ISO 3166 Country Code": "QA",
            Country: "Qatar",
            Latitude: "25.5",
            Longitude: "51.25"
        }, {
            "ISO 3166 Country Code": "RE",
            Country: "Reunion",
            Latitude: "-21.1",
            Longitude: "55.6"
        }, {
            "ISO 3166 Country Code": "RO",
            Country: "Romania",
            Latitude: "46",
            Longitude: "25"
        }, {
            "ISO 3166 Country Code": "RS",
            Country: "Serbia",
            Latitude: "44",
            Longitude: "21"
        }, {
            "ISO 3166 Country Code": "RU",
            Country: "Russia",
            Latitude: "60",
            Longitude: "100"
        }, {
            "ISO 3166 Country Code": "RW",
            Country: "Rwanda",
            Latitude: "-2",
            Longitude: "30"
        }, {
            "ISO 3166 Country Code": "SA",
            Country: "Saudi Arabia",
            Latitude: "25",
            Longitude: "45"
        }, {
            "ISO 3166 Country Code": "SB",
            Country: "Solomon Islands",
            Latitude: "-8",
            Longitude: "159"
        }, {
            "ISO 3166 Country Code": "SC",
            Country: "Seychelles",
            Latitude: "-4.58",
            Longitude: "55.67"
        }, {
            "ISO 3166 Country Code": "SD",
            Country: "Sudan",
            Latitude: "15",
            Longitude: "30"
        }, {
            "ISO 3166 Country Code": "SE",
            Country: "Sweden",
            Latitude: "62",
            Longitude: "15"
        }, {
            "ISO 3166 Country Code": "SG",
            Country: "Singapore",
            Latitude: "1.37",
            Longitude: "103.8"
        }, {
            "ISO 3166 Country Code": "SH",
            Country: "Saint Helena",
            Latitude: "-15.93",
            Longitude: "-5.7"
        }, {
            "ISO 3166 Country Code": "SI",
            Country: "Slovenia",
            Latitude: "46",
            Longitude: "15"
        }, {
            "ISO 3166 Country Code": "SJ",
            Country: "Svalbard and Jan Mayen",
            Latitude: "78",
            Longitude: "20"
        }, {
            "ISO 3166 Country Code": "SK",
            Country: "Slovakia",
            Latitude: "48.67",
            Longitude: "19.5"
        }, {
            "ISO 3166 Country Code": "SL",
            Country: "Sierra Leone",
            Latitude: "8.5",
            Longitude: "-11.5"
        }, {
            "ISO 3166 Country Code": "SM",
            Country: "San Marino",
            Latitude: "43.77",
            Longitude: "12.42"
        }, {
            "ISO 3166 Country Code": "SN",
            Country: "Senegal",
            Latitude: "14",
            Longitude: "-14"
        }, {
            "ISO 3166 Country Code": "SO",
            Country: "Somalia",
            Latitude: "10",
            Longitude: "49"
        }, {
            "ISO 3166 Country Code": "SR",
            Country: "Suriname",
            Latitude: "4",
            Longitude: "-56"
        }, {
            "ISO 3166 Country Code": "ST",
            Country: "Sao Tome and Principe",
            Latitude: "1",
            Longitude: "7"
        }, {
            "ISO 3166 Country Code": "SS",
            Country: "South Sudan",
            Latitude: "7.95",
            Longitude: "29.775"
        }, {
            "ISO 3166 Country Code": "SV",
            Country: "El Salvador",
            Latitude: "13.83",
            Longitude: "-88.92"
        }, {
            "ISO 3166 Country Code": "SX",
            Country: "Dutch Sint Maarten",
            Latitude: "12.25",
            Longitude: "-68.75"
        }, {
            "ISO 3166 Country Code": "SY",
            Country: "Syria",
            Latitude: "35",
            Longitude: "38"
        }, {
            "ISO 3166 Country Code": "SZ",
            Country: "Swaziland",
            Latitude: "-26.5",
            Longitude: "31.5"
        }, {
            "ISO 3166 Country Code": "TC",
            Country: "Turks and Caicos Islands",
            Latitude: "21.75",
            Longitude: "-71.58"
        }, {
            "ISO 3166 Country Code": "TD",
            Country: "Chad",
            Latitude: "15",
            Longitude: "19"
        }, {
            "ISO 3166 Country Code": "TF",
            Country: "French Southern Territories",
            Latitude: "-43",
            Longitude: "67"
        }, {
            "ISO 3166 Country Code": "TG",
            Country: "Togo",
            Latitude: "8",
            Longitude: "1.17"
        }, {
            "ISO 3166 Country Code": "TH",
            Country: "Thailand",
            Latitude: "15",
            Longitude: "100"
        }, {
            "ISO 3166 Country Code": "TJ",
            Country: "Tajikistan",
            Latitude: "39",
            Longitude: "71"
        }, {
            "ISO 3166 Country Code": "TK",
            Country: "Tokelau",
            Latitude: "-9",
            Longitude: "-172"
        }, {
            "ISO 3166 Country Code": "TL",
            Country: "Timor-Leste",
            Latitude: "-8.566667",
            Longitude: "125.566667"
        }, {
            "ISO 3166 Country Code": "TM",
            Country: "Turkmenistan",
            Latitude: "40",
            Longitude: "60"
        }, {
            "ISO 3166 Country Code": "TN",
            Country: "Tunisia",
            Latitude: "34",
            Longitude: "9"
        }, {
            "ISO 3166 Country Code": "TO",
            Country: "Tonga",
            Latitude: "-20",
            Longitude: "-175"
        }, {
            "ISO 3166 Country Code": "TR",
            Country: "Turkey",
            Latitude: "39",
            Longitude: "35"
        }, {
            "ISO 3166 Country Code": "TT",
            Country: "Trinidad and Tobago",
            Latitude: "11",
            Longitude: "-61"
        }, {
            "ISO 3166 Country Code": "TV",
            Country: "Tuvalu",
            Latitude: "-8",
            Longitude: "178"
        }, {
            "ISO 3166 Country Code": "TW",
            Country: "Taiwan",
            Latitude: "23.5",
            Longitude: "121"
        }, {
            "ISO 3166 Country Code": "TZ",
            Country: "Tanzania",
            Latitude: "-6",
            Longitude: "35"
        }, {
            "ISO 3166 Country Code": "UA",
            Country: "Ukraine",
            Latitude: "49",
            Longitude: "32"
        }, {
            "ISO 3166 Country Code": "UG",
            Country: "Uganda",
            Latitude: "1",
            Longitude: "32"
        }, {
            "ISO 3166 Country Code": "UM",
            Country: "United States Minor Outlying Islands",
            Latitude: "19.28",
            Longitude: "166.6"
        }, {
            "ISO 3166 Country Code": "US",
            Country: "United States",
            Latitude: "38",
            Longitude: "-97"
        }, {
            "ISO 3166 Country Code": "UY",
            Country: "Uruguay",
            Latitude: "-33",
            Longitude: "-56"
        }, {
            "ISO 3166 Country Code": "UZ",
            Country: "Uzbekistan",
            Latitude: "41",
            Longitude: "64"
        }, {
            "ISO 3166 Country Code": "VA",
            Country: "Holy See (Vatican City State)",
            Latitude: "41.9",
            Longitude: "12.45"
        }, {
            "ISO 3166 Country Code": "VC",
            Country: "Saint Vincent and the Grenadines",
            Latitude: "13.25",
            Longitude: "-61.2"
        }, {
            "ISO 3166 Country Code": "VE",
            Country: "Venezuela",
            Latitude: "8",
            Longitude: "-66"
        }, {
            "ISO 3166 Country Code": "VG",
            Country: "Virgin Islands, British",
            Latitude: "18.5",
            Longitude: "-64.5"
        }, {
            "ISO 3166 Country Code": "VI",
            Country: "Virgin Islands, U.S.",
            Latitude: "18.33",
            Longitude: "-64.83"
        }, {
            "ISO 3166 Country Code": "VN",
            Country: "Vietnam",
            Latitude: "16",
            Longitude: "106"
        }, {
            "ISO 3166 Country Code": "VU",
            Country: "Vanuatu",
            Latitude: "-16",
            Longitude: "167"
        }, {
            "ISO 3166 Country Code": "WF",
            Country: "Wallis and Futuna",
            Latitude: "-13.3",
            Longitude: "-176.2"
        }, {
            "ISO 3166 Country Code": "WS",
            Country: "Samoa",
            Latitude: "-13.58",
            Longitude: "-172.33"
        }, {
            "ISO 3166 Country Code": "YE",
            Country: "Yemen",
            Latitude: "15",
            Longitude: "48"
        }, {
            "ISO 3166 Country Code": "YT",
            Country: "Mayotte",
            Latitude: "-12.83",
            Longitude: "45.17"
        }, {
            "ISO 3166 Country Code": "ZA",
            Country: "South Africa",
            Latitude: "-29",
            Longitude: "24"
        }, {
            "ISO 3166 Country Code": "ZM",
            Country: "Zambia",
            Latitude: "-15",
            Longitude: "30"
        }, {
            "ISO 3166 Country Code": "ZW",
            Country: "Zimbabwe",
            Latitude: "-20",
            Longitude: "30"
        }],
        Cf = ["#FD8A6D", "#F9B888", "#F6E6B1", "#C9ECC6", "#90D6D8", "#72C1FC", "#c7b6eb"],
        Sf = ["#cefda9", "#c0f0b8", "#afe2c7", "#9dd5d5", "#87c8e2", "#6cbbef", "#41affc"],
        If = {
            Africa: Cf[0],
            Asia: Cf[1],
            Europe: Cf[2],
            "Middle East": Cf[3],
            Oceania: Cf[4],
            "North America": Cf[5],
            "South America": Cf[6]
        },
        Mf = "#9B9BA5",
        kf = "#5b6370",
        Af = "#22252A",
        _f = "#393e46",
        Of = "#CFD0D6",
        Lf = "rgba(28, 30, 34, 0.725)",
        Ef = Sf[4],
        Nf = Sf[6],
        jf = Sf[1];

    function Tf(e) {
        return If[af[e.indicator]]
    }

    function $f(n) {
        var e = aa(Gf, function (e) {
            return n.indicator === e.Country
        });
        return e || console.log(n.indicator), e ? [+e.Longitude, +e.Latitude] : [0, 0]
    }

    function zf(e) {
        if (Array.isArray(e)) {
            for (var n = 0, t = Array(e.length); n < e.length; n++) t[n] = e[n];
            return t
        }
        return Array.from(e)
    }
    var Bf = function (e) {
        return function e(r) {
            var o = lc(),
                a = [],
                i = fc;

            function l(e) {
                var n = e + "",
                    t = o.get(n);
                if (!t) {
                    if (i !== fc) return i;
                    o.set(n, t = a.push(e))
                }
                return r[(t - 1) % r.length]
            }
            return r = null == r ? [] : dc.call(r), l.domain = function (e) {
                if (!arguments.length) return a.slice();
                a = [], o = lc();
                for (var n, t, r = -1, i = e.length; ++r < i;) o.has(t = (n = e[r]) + "") || o.set(t, a.push(n));
                return l
            }, l.range = function (e) {
                return arguments.length ? (r = dc.call(e), l) : r.slice()
            }, l.unknown = function (e) {
                return arguments.length ? (i = e, l) : i
            }, l.copy = function () {
                return e().domain(a).range(r).unknown(i)
            }, l
        }().domain([].concat(zf(tf), ["no data"])).range([].concat(zf(e), ["#cccccc"]))
    };
    $c().domain([1, 50]).range([1, 10]).clamp(!0), Bc().exponent(.5).range([2, 15]);

    function qf(e, n) {
        var t = n.indexOf(e);
        return -1 !== Pf.indexOf(t) ? function (e) {
            return 1e9 <= e ? parseFloat((e / 1e9).toFixed(1)) + "B" : 1e6 <= e ? (e / 1e6).toFixed(0) + "M" : 1e3 <= e ? parseFloat((e / 1e3).toFixed(1e4 < e ? 0 : 1)) + "K" : "" + e.toFixed(0)
        } : -1 !== xf.indexOf(t) ? function (e) {
            return e.toFixed(1)
        } : -1 !== bf.indexOf(t) ? function (e) {
            return e.toFixed(2)
        } : -1 !== wf.indexOf(t) ? function (e) {
            return parseFloat(e.toFixed(0)) + "%"
        } : function (e) {
            return parseFloat(e.toFixed(1)) + "%"
        }
    }
    var Ff = {
        animationIterationCount: 1,
        borderImageOutset: 1,
        borderImageSlice: 1,
        borderImageWidth: 1,
        boxFlex: 1,
        boxFlexGroup: 1,
        boxOrdinalGroup: 1,
        columnCount: 1,
        columns: 1,
        flex: 1,
        flexGrow: 1,
        flexPositive: 1,
        flexShrink: 1,
        flexNegative: 1,
        flexOrder: 1,
        gridRow: 1,
        gridRowEnd: 1,
        gridRowSpan: 1,
        gridRowStart: 1,
        gridColumn: 1,
        gridColumnEnd: 1,
        gridColumnSpan: 1,
        gridColumnStart: 1,
        fontWeight: 1,
        lineHeight: 1,
        opacity: 1,
        order: 1,
        orphans: 1,
        tabSize: 1,
        widows: 1,
        zIndex: 1,
        zoom: 1,
        WebkitLineClamp: 1,
        fillOpacity: 1,
        floodOpacity: 1,
        stopOpacity: 1,
        strokeDasharray: 1,
        strokeDashoffset: 1,
        strokeMiterlimit: 1,
        strokeOpacity: 1,
        strokeWidth: 1
    };

    function Rf(e) {
        function M(e, n, t) {
            var r = n.trim().split(p),
                i = (n = r).length,
                o = e.length;
            switch (o) {
            case 0:
            case 1:
                var a = 0;
                for (e = 0 === o ? "" : e[0] + " "; a < i; ++a) n[a] = s(e, n[a], t).trim();
                break;
            default:
                var l = a = 0;
                for (n = []; a < i; ++a)
                    for (var c = 0; c < o; ++c) n[l++] = s(e[c] + " ", r[a], t).trim()
            }
            return n
        }

        function s(e, n, t) {
            var r = n.charCodeAt(0);
            switch (r < 33 && (r = (n = n.trim()).charCodeAt(0)), r) {
            case 38:
                return n.replace(i, "$1" + e.trim());
            case 58:
                return e.trim() + n.replace(i, "$1" + e.trim());
            default:
                if (0 < 1 * t && 0 < n.indexOf("\f")) return n.replace(i, (58 === e.charCodeAt(0) ? "" : "$1") + e.trim())
            }
            return e + n
        }

        function k(e, n, t, r) {
            var i = e + ";",
                o = 2 * n + 3 * t + 4 * r;
            if (944 === o) {
                e = i.indexOf(":", 9) + 1;
                var a = i.substring(e, i.length - 1).trim();
                return a = i.substring(0, e).trim() + a + ";", 1 === F || 2 === F && A(a, 1) ? "-webkit-" + a + a : a
            }
            if (0 === F || 2 === F && !A(i, 1)) return i;
            switch (o) {
            case 1015:
                return 97 === i.charCodeAt(10) ? "-webkit-" + i + i : i;
            case 951:
                return 116 === i.charCodeAt(3) ? "-webkit-" + i + i : i;
            case 963:
                return 110 === i.charCodeAt(5) ? "-webkit-" + i + i : i;
            case 1009:
                if (100 !== i.charCodeAt(4)) break;
            case 969:
            case 942:
                return "-webkit-" + i + i;
            case 978:
                return "-webkit-" + i + "-moz-" + i + i;
            case 1019:
            case 983:
                return "-webkit-" + i + "-moz-" + i + "-ms-" + i + i;
            case 883:
                if (45 === i.charCodeAt(8)) return "-webkit-" + i + i;
                if (0 < i.indexOf("image-set(", 11)) return i.replace(m, "$1-webkit-$2") + i;
                break;
            case 932:
                if (45 === i.charCodeAt(4)) switch (i.charCodeAt(5)) {
                case 103:
                    return "-webkit-box-" + i.replace("-grow", "") + "-webkit-" + i + "-ms-" + i.replace("grow", "positive") + i;
                case 115:
                    return "-webkit-" + i + "-ms-" + i.replace("shrink", "negative") + i;
                case 98:
                    return "-webkit-" + i + "-ms-" + i.replace("basis", "preferred-size") + i
                }
                return "-webkit-" + i + "-ms-" + i + i;
            case 964:
                return "-webkit-" + i + "-ms-flex-" + i + i;
            case 1023:
                if (99 !== i.charCodeAt(8)) break;
                return "-webkit-box-pack" + (a = i.substring(i.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify")) + "-webkit-" + i + "-ms-flex-pack" + a + i;
            case 1005:
                return c.test(i) ? i.replace(l, ":-webkit-") + i.replace(l, ":-moz-") + i : i;
            case 1e3:
                switch (n = (a = i.substring(13).trim()).indexOf("-") + 1, a.charCodeAt(0) + a.charCodeAt(n)) {
                case 226:
                    a = i.replace(d, "tb");
                    break;
                case 232:
                    a = i.replace(d, "tb-rl");
                    break;
                case 220:
                    a = i.replace(d, "lr");
                    break;
                default:
                    return i
                }
                return "-webkit-" + i + "-ms-" + a + i;
            case 1017:
                if (-1 === i.indexOf("sticky", 9)) break;
            case 975:
                switch (n = (i = e).length - 10, o = (a = (33 === i.charCodeAt(n) ? i.substring(0, n) : i).substring(e.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | a.charCodeAt(7))) {
                case 203:
                    if (a.charCodeAt(8) < 111) break;
                case 115:
                    i = i.replace(a, "-webkit-" + a) + ";" + i;
                    break;
                case 207:
                case 102:
                    i = i.replace(a, "-webkit-" + (102 < o ? "inline-" : "") + "box") + ";" + i.replace(a, "-webkit-" + a) + ";" + i.replace(a, "-ms-" + a + "box") + ";" + i
                }
                return i + ";";
            case 938:
                if (45 === i.charCodeAt(5)) switch (i.charCodeAt(6)) {
                case 105:
                    return a = i.replace("-items", ""), "-webkit-" + i + "-webkit-box-" + a + "-ms-flex-" + a + i;
                case 115:
                    return "-webkit-" + i + "-ms-flex-item-" + i.replace(h, "") + i;
                default:
                    return "-webkit-" + i + "-ms-flex-line-pack" + i.replace("align-content", "").replace(h, "") + i
                }
                break;
            case 973:
            case 989:
                if (45 !== i.charCodeAt(3) || 122 === i.charCodeAt(4)) break;
            case 931:
            case 953:
                if (!0 === y.test(e)) return 115 === (a = e.substring(e.indexOf(":") + 1)).charCodeAt(0) ? k(e.replace("stretch", "fill-available"), n, t, r).replace(":fill-available", ":stretch") : i.replace(a, "-webkit-" + a) + i.replace(a, "-moz-" + a.replace("fill-", "")) + i;
                break;
            case 962:
                if (i = "-webkit-" + i + (102 === i.charCodeAt(5) ? "-ms-" + i : "") + i, 211 === t + r && 105 === i.charCodeAt(13) && 0 < i.indexOf("transform", 10)) return i.substring(0, i.indexOf(";", 27) + 1).replace(u, "$1-webkit-$2") + i
            }
            return i
        }

        function A(e, n) {
            var t = e.indexOf(1 === n ? ":" : "{"),
                r = e.substring(0, 3 !== n ? t : 10);
            return t = e.substring(t + 1, e.length - 1), a(2 !== n ? r : r.replace(o, "$1"), t, n)
        }

        function _(e, n) {
            var t = k(n, n.charCodeAt(0), n.charCodeAt(1), n.charCodeAt(2));
            return t !== n + ";" ? t.replace(r, " or ($1)").substring(4) : "(" + n + ")"
        }

        function O(e, n, t, r, i, o, a, l, c, s) {
            for (var u, p = 0, d = n; p < U; ++p) switch (u = g[p].call(f, e, d, t, r, i, o, a, l, c, s)) {
            case void 0:
            case !1:
            case !0:
            case null:
                break;
            default:
                d = u
            }
            if (d !== n) return d
        }

        function n(e) {
            return void 0 !== (e = e.prefix) && (a = null, e ? "function" != typeof e ? F = 1 : (F = 2, a = e) : F = 0), n
        }

        function f(e, n) {
            var t = e;
            if (t.charCodeAt(0) < 33 && (t = t.trim()), t = [t], 0 < U) {
                var r = O(-1, n, t, t, B, z, 0, 0, 0, 0);
                void 0 !== r && "string" == typeof r && (n = r)
            }
            var i = function e(n, t, r, i, o) {
                for (var a, l, c, s, u, p = 0, d = 0, f = 0, h = 0, y = 0, m = 0, g = c = a = 0, v = 0, P = 0, x = 0, b = 0, w = r.length, D = w - 1, G = "", C = "", S = "", I = ""; v < w;) {
                    if (l = r.charCodeAt(v), v === D && 0 !== d + h + f + p && (0 !== d && (l = 47 === d ? 10 : 47), h = f = p = 0, w++, D++), 0 === d + h + f + p) {
                        if (v === D && (0 < P && (G = G.replace(E, "")), 0 < G.trim().length)) {
                            switch (l) {
                            case 32:
                            case 9:
                            case 59:
                            case 13:
                            case 10:
                                break;
                            default:
                                G += r.charAt(v)
                            }
                            l = 59
                        }
                        switch (l) {
                        case 123:
                            for (a = (G = G.trim()).charCodeAt(0), c = 1, b = ++v; v < w;) {
                                switch (l = r.charCodeAt(v)) {
                                case 123:
                                    c++;
                                    break;
                                case 125:
                                    c--;
                                    break;
                                case 47:
                                    switch (l = r.charCodeAt(v + 1)) {
                                    case 42:
                                    case 47:
                                        e: {
                                            for (g = v + 1; g < D; ++g) switch (r.charCodeAt(g)) {
                                            case 47:
                                                if (42 !== l || 42 !== r.charCodeAt(g - 1) || v + 2 === g) break;
                                                v = g + 1;
                                                break e;
                                            case 10:
                                                if (47 === l) {
                                                    v = g + 1;
                                                    break e
                                                }
                                            }
                                            v = g
                                        }
                                    }
                                    break;
                                case 91:
                                    l++;
                                case 40:
                                    l++;
                                case 34:
                                case 39:
                                    for (; v++ < D && r.charCodeAt(v) !== l;);
                                }
                                if (0 === c) break;
                                v++
                            }
                            switch (c = r.substring(b, v), 0 === a && (a = (G = G.replace(L, "").trim()).charCodeAt(0)), a) {
                            case 64:
                                switch (0 < P && (G = G.replace(E, "")), l = G.charCodeAt(1)) {
                                case 100:
                                case 109:
                                case 115:
                                case 45:
                                    P = t;
                                    break;
                                default:
                                    P = R
                                }
                                if (b = (c = e(t, P, c, l, o + 1)).length, 0 < U && (u = O(3, c, P = M(R, G, x), t, B, z, b, l, o, i), G = P.join(""), void 0 !== u && 0 === (b = (c = u.trim()).length) && (l = 0, c = "")), 0 < b) switch (l) {
                                case 115:
                                    G = G.replace($, _);
                                case 100:
                                case 109:
                                case 45:
                                    c = G + "{" + c + "}";
                                    break;
                                case 107:
                                    c = (G = G.replace(N, "$1 $2")) + "{" + c + "}", c = 1 === F || 2 === F && A("@" + c, 3) ? "@-webkit-" + c + "@" + c : "@" + c;
                                    break;
                                default:
                                    c = G + c, 112 === i && (C += c, c = "")
                                } else c = "";
                                break;
                            default:
                                c = e(t, M(t, G, x), c, i, o + 1)
                            }
                            S += c, c = x = P = g = a = 0, G = "", l = r.charCodeAt(++v);
                            break;
                        case 125:
                        case 59:
                            if (1 < (b = (G = (0 < P ? G.replace(E, "") : G).trim()).length)) switch (0 === g && (a = G.charCodeAt(0), 45 === a || 96 < a && a < 123) && (b = (G = G.replace(" ", ":")).length), 0 < U && void 0 !== (u = O(1, G, t, n, B, z, C.length, i, o, i)) && 0 === (b = (G = u.trim()).length) && (G = "\0\0"), a = G.charCodeAt(0), l = G.charCodeAt(1), a) {
                            case 0:
                                break;
                            case 64:
                                if (105 === l || 99 === l) {
                                    I += G + r.charAt(v);
                                    break
                                }
                                default:
                                    58 !== G.charCodeAt(b - 1) && (C += k(G, a, l, G.charCodeAt(2)))
                            }
                            x = P = g = a = 0, G = "", l = r.charCodeAt(++v)
                        }
                    }
                    switch (l) {
                    case 13:
                    case 10:
                        47 === d ? d = 0 : 0 === 1 + a && 107 !== i && 0 < G.length && (P = 1, G += "\0"), 0 < U * Y && O(0, G, t, n, B, z, C.length, i, o, i), z = 1, B++;
                        break;
                    case 59:
                    case 125:
                        if (0 === d + h + f + p) {
                            z++;
                            break
                        }
                        default:
                            switch (z++, s = r.charAt(v), l) {
                            case 9:
                            case 32:
                                if (0 === h + p + d) switch (y) {
                                case 44:
                                case 58:
                                case 9:
                                case 32:
                                    s = "";
                                    break;
                                default:
                                    32 !== l && (s = " ")
                                }
                                break;
                            case 0:
                                s = "\\0";
                                break;
                            case 12:
                                s = "\\f";
                                break;
                            case 11:
                                s = "\\v";
                                break;
                            case 38:
                                0 === h + d + p && (P = x = 1, s = "\f" + s);
                                break;
                            case 108:
                                if (0 === h + d + p + q && 0 < g) switch (v - g) {
                                case 2:
                                    112 === y && 58 === r.charCodeAt(v - 3) && (q = y);
                                case 8:
                                    111 === m && (q = m)
                                }
                                break;
                            case 58:
                                0 === h + d + p && (g = v);
                                break;
                            case 44:
                                0 === d + f + h + p && (P = 1, s += "\r");
                                break;
                            case 34:
                            case 39:
                                0 === d && (h = h === l ? 0 : 0 === h ? l : h);
                                break;
                            case 91:
                                0 === h + d + f && p++;
                                break;
                            case 93:
                                0 === h + d + f && p--;
                                break;
                            case 41:
                                0 === h + d + p && f--;
                                break;
                            case 40:
                                if (0 === h + d + p) {
                                    if (0 === a) switch (2 * y + 3 * m) {
                                    case 533:
                                        break;
                                    default:
                                        a = 1
                                    }
                                    f++
                                }
                                break;
                            case 64:
                                0 === d + f + h + p + g + c && (c = 1);
                                break;
                            case 42:
                            case 47:
                                if (!(0 < h + p + f)) switch (d) {
                                case 0:
                                    switch (2 * l + 3 * r.charCodeAt(v + 1)) {
                                    case 235:
                                        d = 47;
                                        break;
                                    case 220:
                                        b = v, d = 42
                                    }
                                    break;
                                case 42:
                                    47 === l && 42 === y && b + 2 !== v && (33 === r.charCodeAt(b + 2) && (C += r.substring(b, v + 1)), s = "", d = 0)
                                }
                            }
                            0 === d && (G += s)
                    }
                    m = y, y = l, v++
                }
                if (0 < (b = C.length)) {
                    if (P = t, 0 < U && void 0 !== (u = O(2, C, P, n, B, z, b, i, o, i)) && 0 === (C = u).length) return I + C + S;
                    if (C = P.join(",") + "{" + C + "}", 0 != F * q) {
                        switch (2 !== F || A(C, 2) || (q = 0), q) {
                        case 111:
                            C = C.replace(T, ":-moz-$1") + C;
                            break;
                        case 112:
                            C = C.replace(j, "::-webkit-input-$1") + C.replace(j, "::-moz-$1") + C.replace(j, ":-ms-input-$1") + C
                        }
                        q = 0
                    }
                }
                return I + C + S
            }(R, t, n, 0, 0);
            return 0 < U && (void 0 !== (r = O(-2, i, t, t, B, z, i.length, 0, 0, 0)) && (i = r)), "", q = 0, z = B = 1, i
        }
        var L = /^\0+/g,
            E = /[\0\r\f]/g,
            l = /: */g,
            c = /zoo|gra/,
            u = /([,: ])(transform)/g,
            p = /,\r+?/g,
            i = /([\t\r\n ])*\f?&/g,
            N = /@(k\w+)\s*(\S*)\s*/,
            j = /::(place)/g,
            T = /:(read-only)/g,
            d = /[svh]\w+-[tblr]{2}/,
            $ = /\(\s*(.*)\s*\)/g,
            r = /([\s\S]*?);/g,
            h = /-self|flex-/g,
            o = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
            y = /stretch|:\s*\w+\-(?:conte|avail)/,
            m = /([^-])(image-set\()/,
            z = 1,
            B = 1,
            q = 0,
            F = 1,
            R = [],
            g = [],
            U = 0,
            a = null,
            Y = 0;
        return f.use = function e(n) {
            switch (n) {
            case void 0:
            case null:
                U = g.length = 0;
                break;
            default:
                switch (n.constructor) {
                case Array:
                    for (var t = 0, r = n.length; t < r; ++t) e(n[t]);
                    break;
                case Function:
                    g[U++] = n;
                    break;
                case Boolean:
                    Y = 0 | !!n
                }
            }
            return e
        }, f.set = n, void 0 !== e && n(e), f
    }
    var Uf, Yf, Hf = Rn(function (e, n) {
            e.exports = function (u) {
                function p(e) {
                    if (e) try {
                        u(e + "}")
                    } catch (e) {}
                }
                return function (e, n, t, r, i, o, a, l, c, s) {
                    switch (e) {
                    case 1:
                        if (0 === c && 64 === n.charCodeAt(0)) return u(n + ";"), "";
                        break;
                    case 2:
                        if (0 === l) return n + "";
                        break;
                    case 3:
                        switch (l) {
                        case 102:
                        case 112:
                            return u(t[0] + n), "";
                        default:
                            return n + (0 === s ? "" : "")
                        }
                        case -2:
                            n.split("}").forEach(p)
                    }
                }
            }
        }),
        Vf = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        Wf = /[A-Z]|^ms/g,
        Zf = (Uf = function (e) {
            return e.replace(Wf, "-$&").toLowerCase()
        }, Yf = {}, function (e) {
            return void 0 === Yf[e] && (Yf[e] = Uf(e)), Yf[e]
        }),
        Kf = function (e, n) {
            return null == n || "boolean" == typeof n ? "" : 1 === Ff[e] || 45 === e.charCodeAt(1) || isNaN(n) || 0 === n ? n : n + "px"
        },
        Xf = /(attr|calc|counters?|url)\(/,
        Jf = ["normal", "none", "counter", "open-quote", "close-quote", "no-open-quote", "no-close-quote", "initial", "inherit", "unset"],
        Qf = Kf;
    Kf = function (e, n) {
        return "content" === e && ("string" != typeof n || -1 === Jf.indexOf(n) && !Xf.test(n) && (n.charAt(0) !== n.charAt(n.length - 1) || '"' !== n.charAt(0) && "'" !== n.charAt(0))) && console.error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + n + "\"'`"), Qf(e, n)
    };
    var eh = "undefined" != typeof document;

    function nh(e) {
        var n = document.createElement("style");
        return n.setAttribute("data-emotion", e.key || ""), void 0 !== e.nonce && n.setAttribute("nonce", e.nonce), n.appendChild(document.createTextNode("")), (void 0 !== e.container ? e.container : document.head).appendChild(n), n
    }
    var th = function () {
        function e(e) {
            this.isSpeedy = !1, this.tags = [], this.ctr = 0, this.opts = e
        }
        var n = e.prototype;
        return n.inject = function () {
            if (this.injected) throw new Error("already injected!");
            this.tags[0] = nh(this.opts), this.injected = !0
        }, n.speedy = function (e) {
            if (0 !== this.ctr) throw new Error("cannot change speedy now");
            this.isSpeedy = !!e
        }, n.insert = function (n, e) {
            if (this.isSpeedy) {
                var t = function (e) {
                    if (e.sheet) return e.sheet;
                    for (var n = 0; n < document.styleSheets.length; n++)
                        if (document.styleSheets[n].ownerNode === e) return document.styleSheets[n]
                }(this.tags[this.tags.length - 1]);
                try {
                    t.insertRule(n, t.cssRules.length)
                } catch (e) {
                    console.warn("illegal rule", n)
                }
            } else {
                var r = nh(this.opts);
                this.tags.push(r), r.appendChild(document.createTextNode(n + (e || "")))
            }
            this.ctr++, this.ctr % 65e3 == 0 && this.tags.push(nh(this.opts))
        }, n.flush = function () {
            this.tags.forEach(function (e) {
                return e.parentNode.removeChild(e)
            }), this.tags = [], this.ctr = 0, this.injected = !1
        }, e
    }();
    var rh, ih, oh = function (e, n) {
            if (void 0 !== e.__SECRET_EMOTION__) return e.__SECRET_EMOTION__;
            void 0 === n && (n = {});
            var t, r = n.key || "css";
            if (/[^a-z-]/.test(r)) throw new Error('Emotion key must only contain lower case alphabetical characters and - but "' + r + '" was passed');
            var i, o = Hf(function (e) {
                t += e, eh && l.insert(e, s)
            });
            void 0 !== n.prefix && (i = {
                prefix: n.prefix
            });
            var a = {
                    registered: {},
                    inserted: {},
                    nonce: n.nonce,
                    key: r
                },
                l = new th(n);
            eh && l.inject();
            var c = new Rf(i);
            c.use(n.stylisPlugins)(o);
            var s = "";

            function u(e, n) {
                if (null == e) return "";
                switch (void 0 === e ? "undefined" : Vf(e)) {
                case "boolean":
                    return "";
                case "function":
                    if (void 0 === e.__emotion_styles) return void 0 === this && console.error("Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\nIf you want to have a css call based on props, create a function that returns a css call like this\nlet dynamicStyle = (props) => css`color: ${props.color}`\nIt can be called directly with props or interpolated in a styled call like this\nlet SomeComponent = styled('div')`${dynamicStyle}`"), u.call(this, void 0 === this ? e() : e(this.mergedProps, this.context), n);
                    var t = e.toString();
                    if ("NO_COMPONENT_SELECTOR" === t) throw new Error("Component selectors can only be used in conjunction with babel-plugin-emotion.");
                    return t;
                case "object":
                    return function (e) {
                        if (f.has(e)) return f.get(e);
                        var t = "";
                        return Array.isArray(e) ? e.forEach(function (e) {
                            t += u.call(this, e, !1)
                        }, this) : Object.keys(e).forEach(function (n) {
                            if ("object" !== Vf(e[n])) void 0 !== a.registered[e[n]] ? t += n + "{" + a.registered[e[n]] + "}" : t += Zf(n) + ":" + Kf(n, e[n]) + ";";
                            else {
                                if ("NO_COMPONENT_SELECTOR" === n) throw new Error("Component selectors can only be used in conjunction with babel-plugin-emotion.");
                                Array.isArray(e[n]) && "string" == typeof e[n][0] && void 0 === a.registered[e[n][0]] ? e[n].forEach(function (e) {
                                    t += Zf(n) + ":" + Kf(n, e) + ";"
                                }) : t += n + "{" + u.call(this, e[n], !1) + "}"
                            }
                        }, this), f.set(e, t), t
                    }.call(this, e);
                default:
                    var r = a.registered[e];
                    return !1 === n && void 0 !== r ? r : e
                }
            }
            var p, d, f = new WeakMap,
                h = /label:\s*([^\s;\n{]+)\s*;/g,
                y = function (e, n) {
                    return function (e) {
                        for (var n, t = e.length, r = t ^ t, i = 0; 4 <= t;) n = 1540483477 * (65535 & (n = 255 & e.charCodeAt(i) | (255 & e.charCodeAt(++i)) << 8 | (255 & e.charCodeAt(++i)) << 16 | (255 & e.charCodeAt(++i)) << 24)) + ((1540483477 * (n >>> 16) & 65535) << 16), r = 1540483477 * (65535 & r) + ((1540483477 * (r >>> 16) & 65535) << 16) ^ (n = 1540483477 * (65535 & (n ^= n >>> 24)) + ((1540483477 * (n >>> 16) & 65535) << 16)), t -= 4, ++i;
                        switch (t) {
                        case 3:
                            r ^= (255 & e.charCodeAt(i + 2)) << 16;
                        case 2:
                            r ^= (255 & e.charCodeAt(i + 1)) << 8;
                        case 1:
                            r = 1540483477 * (65535 & (r ^= 255 & e.charCodeAt(i))) + ((1540483477 * (r >>> 16) & 65535) << 16)
                        }
                        return r = 1540483477 * (65535 & (r ^= r >>> 13)) + ((1540483477 * (r >>> 16) & 65535) << 16), ((r ^= r >>> 15) >>> 0).toString(36)
                    }(e + n) + n
                },
                m = y,
                g = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
            y = function (e, n) {
                return m(e.replace(g, function (e) {
                    return s = e, ""
                }), n)
            };
            var v = function (t) {
                    var r = !0,
                        i = "",
                        o = "";
                    null == t || void 0 === t.raw ? i += u.call(this, t, r = !1) : i += t[0];
                    for (var e = arguments.length, n = new Array(1 < e ? e - 1 : 0), a = 1; a < e; a++) n[a - 1] = arguments[a];
                    return n.forEach(function (e, n) {
                        i += u.call(this, e, 46 === i.charCodeAt(i.length - 1)), !0 === r && void 0 !== t[n + 1] && (i += t[n + 1])
                    }, this), i = (d = i).replace(h, function (e, n) {
                        return o += "-" + n, ""
                    }), p = y(i, o), i
                },
                P = c;

            function x(e, n) {
                void 0 === a.inserted[p] && (t = "", c(e, n), a.inserted[p] = t)
            }
            c = function (e, n) {
                P(e, n), s = ""
            };
            var b = function () {
                var e = v.apply(this, arguments),
                    n = r + "-" + p;
                return void 0 === a.registered[n] && (a.registered[n] = d), x("." + n, e), n
            };

            function w(n, e) {
                var t = "";
                return e.split(" ").forEach(function (e) {
                    void 0 !== a.registered[e] ? n.push(e) : t += e + " "
                }), t
            }

            function D(e, n) {
                var t = [],
                    r = w(t, e);
                return t.length < 2 ? e : r + b(t, n)
            }

            function G(e) {
                a.inserted[e] = !0
            }
            if (eh) {
                var C = document.querySelectorAll("[data-emotion-" + r + "]");
                Array.prototype.forEach.call(C, function (e) {
                    l.tags[0].parentNode.insertBefore(e, l.tags[0]), e.getAttribute("data-emotion-" + r).split(" ").forEach(G)
                })
            }
            var S = {
                flush: function () {
                    eh && (l.flush(), l.inject()), a.inserted = {}, a.registered = {}
                },
                hydrate: function (e) {
                    e.forEach(G)
                },
                cx: function () {
                    for (var e = arguments.length, n = new Array(e), t = 0; t < e; t++) n[t] = arguments[t];
                    return D(function e(n) {
                        for (var t = n.length, r = 0, i = ""; r < t; r++) {
                            var o = n[r];
                            if (null != o) {
                                var a = void 0;
                                switch (void 0 === o ? "undefined" : Vf(o)) {
                                case "boolean":
                                    break;
                                case "function":
                                    console.error("Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\nPlease call the function before passing it to cx."), a = e([o()]);
                                    break;
                                case "object":
                                    if (Array.isArray(o)) a = e(o);
                                    else
                                        for (var l in a = "", o) o[l] && l && (a && (a += " "), a += l);
                                    break;
                                default:
                                    a = o
                                }
                                a && (i && (i += " "), i += a)
                            }
                        }
                        return i
                    }(n))
                },
                merge: D,
                getRegisteredStyles: w,
                injectGlobal: function () {
                    x("", v.apply(this, arguments))
                },
                keyframes: function () {
                    var e = v.apply(this, arguments),
                        n = "animation-" + p;
                    return x("", "@keyframes " + n + "{" + e + "}"), n
                },
                css: b,
                sheet: l,
                caches: a
            };
            return e.__SECRET_EMOTION__ = S
        }("undefined" != typeof global ? global : {}),
        ah = (oh.flush, oh.hydrate, oh.cx, oh.merge, oh.getRegisteredStyles, oh.injectGlobal, oh.keyframes, oh.css),
        lh = (oh.sheet, oh.caches, rh = ["\n  label: scatter;\n  width: 100%;\n  height: 100%;\n  cursor: crosshair;\n  user-select: none;\n\n  .point {\n    cursor: pointer;\n    opacity: 0.8;\n\n    text {\n      text-anchor: middle;\n      font-family: 'Roboto', sans-serif;\n      text-shadow: 1px 1px 1px rgba(28, 30, 34, 0.725);\n      visibility: 'visible';\n      opacity: 1;\n      transition: visibility 0.5s, opacity 0.5s;\n\n      &.hidden {\n        visibility: 'hidden';\n        opacity: 0;\n      }\n    }\n  }\n"], ih = ["\n  label: scatter;\n  width: 100%;\n  height: 100%;\n  cursor: crosshair;\n  user-select: none;\n\n  .point {\n    cursor: pointer;\n    opacity: 0.8;\n\n    text {\n      text-anchor: middle;\n      font-family: 'Roboto', sans-serif;\n      text-shadow: 1px 1px 1px rgba(28, 30, 34, 0.725);\n      visibility: 'visible';\n      opacity: 1;\n      transition: visibility 0.5s, opacity 0.5s;\n\n      &.hidden {\n        visibility: 'hidden';\n        opacity: 0;\n      }\n    }\n  }\n"], Object.freeze(Object.defineProperties(rh, {
            raw: {
                value: Object.freeze(ih)
            }
        })));
    var ch = ah(lh),
        sh = {
            type: "Topology",
            objects: {
                countries: {
                    type: "GeometryCollection",
                    geometries: [{
                        type: "Polygon",
                        arcs: [
                            [0, 1, 2, 3, 4, 5]
                        ],
                        id: "004"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [6, 7, 8, 9]
                            ],
                            [
                                [10, 11, 12]
                            ]
                        ],
                        id: "024"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [13, 14, 15, 16, 17]
                        ],
                        id: "008"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [18, 19, 20, 21, 22]
                        ],
                        id: "784"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [23, 24]
                            ],
                            [
                                [25, 26, 27, 28, 29, 30]
                            ]
                        ],
                        id: "032"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [31, 32, 33, 34, 35]
                        ],
                        id: "051"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [36]
                            ],
                            [
                                [37]
                            ],
                            [
                                [38]
                            ],
                            [
                                [39]
                            ],
                            [
                                [40]
                            ],
                            [
                                [41]
                            ],
                            [
                                [42]
                            ],
                            [
                                [43]
                            ]
                        ],
                        id: "010"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [44]
                        ],
                        id: "260"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [45]
                            ],
                            [
                                [46]
                            ]
                        ],
                        id: "036"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [47, 48, 49, 50, 51, 52, 53]
                        ],
                        id: "040"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [54, -35]
                            ],
                            [
                                [55, 56, -33, 57, 58]
                            ]
                        ],
                        id: "031"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [59, 60, 61]
                        ],
                        id: "108"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [62, 63, 64, 65, 66]
                        ],
                        id: "056"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [67, 68, 69, 70, 71]
                        ],
                        id: "204"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [72, 73, 74, -70, 75, 76]
                        ],
                        id: "854"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [77, 78, 79]
                        ],
                        id: "050"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [80, 81, 82, 83, 84, 85]
                        ],
                        id: "100"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [86]
                            ],
                            [
                                [87]
                            ],
                            [
                                [88]
                            ]
                        ],
                        id: "044"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [89, 90, 91]
                        ],
                        id: "070"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [92, 93, 94, 95, 96]
                        ],
                        id: "112"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [97, 98, 99]
                        ],
                        id: "084"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [100, 101, 102, 103, -31]
                        ],
                        id: "068"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]
                        ],
                        id: "076"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [113, 114]
                        ],
                        id: "096"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [115, 116]
                        ],
                        id: "064"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [117, 118, 119, 120]
                        ],
                        id: "072"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [121, 122, 123, 124, 125, 126, 127]
                        ],
                        id: "140"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [128]
                            ],
                            [
                                [129]
                            ],
                            [
                                [130]
                            ],
                            [
                                [131]
                            ],
                            [
                                [132]
                            ],
                            [
                                [133]
                            ],
                            [
                                [134]
                            ],
                            [
                                [135]
                            ],
                            [
                                [136]
                            ],
                            [
                                [137]
                            ],
                            [
                                [138, 139, 140, 141]
                            ],
                            [
                                [142]
                            ],
                            [
                                [143]
                            ],
                            [
                                [144]
                            ],
                            [
                                [145]
                            ],
                            [
                                [146]
                            ],
                            [
                                [147]
                            ],
                            [
                                [148]
                            ],
                            [
                                [149]
                            ],
                            [
                                [150]
                            ],
                            [
                                [151]
                            ],
                            [
                                [152]
                            ],
                            [
                                [153]
                            ],
                            [
                                [154]
                            ],
                            [
                                [155]
                            ],
                            [
                                [156]
                            ],
                            [
                                [157]
                            ],
                            [
                                [158]
                            ],
                            [
                                [159]
                            ],
                            [
                                [160]
                            ]
                        ],
                        id: "124"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-51, 161, 162, 163]
                        ],
                        id: "756"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [-24, 164]
                            ],
                            [
                                [-30, 165, 166, -101]
                            ]
                        ],
                        id: "152"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [167]
                            ],
                            [
                                [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]
                            ]
                        ],
                        id: "156"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [184, 185, 186, 187, -73, 188]
                        ],
                        id: "384"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [189, 190, 191, 192, 193, 194, -128, 195]
                        ],
                        id: "120"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [196, 197, -60, 198, 199, 200, 201, -10, 202, -13, 203, -126, 204]
                        ],
                        id: "180"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-12, 205, 206, -196, -127, -204]
                        ],
                        id: "178"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [207, 208, 209, 210, 211, -107, 212]
                        ],
                        id: "170"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [213, 214, 215, 216]
                        ],
                        id: "188"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [217]
                        ],
                        id: "192"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [218, 219]
                        ],
                        id: "-99"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [220, -220]
                        ],
                        id: "196"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-53, 221, 222, 223]
                        ],
                        id: "203"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [224, 225, -222, -52, -164, 226, 227, -64, 228, 229, 230]
                        ],
                        id: "276"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [231, 232, 233, 234]
                        ],
                        id: "262"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [235]
                            ],
                            [
                                [-231, 236]
                            ]
                        ],
                        id: "208"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [237, 238]
                        ],
                        id: "214"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [239, 240, 241, 242, 243, 244, 245, 246]
                        ],
                        id: "012"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [247, -208, 248]
                        ],
                        id: "218"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [249, 250, 251, 252, 253]
                        ],
                        id: "818"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [254, 255, 256, -235]
                        ],
                        id: "232"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [257, 258, 259, 260]
                        ],
                        id: "724"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [261, 262, 263]
                        ],
                        id: "233"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-234, 264, 265, 266, 267, 268, 269, -255]
                        ],
                        id: "231"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [270, 271, 272, 273]
                        ],
                        id: "246"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [274]
                            ],
                            [
                                [275]
                            ]
                        ],
                        id: "242"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [276]
                        ],
                        id: "238"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [277, 278, 279, -111]
                            ],
                            [
                                [280]
                            ],
                            [
                                [281, -227, -163, 282, 283, -259, 284, -66]
                            ]
                        ],
                        id: "250"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [285, 286, -190, -207]
                        ],
                        id: "266"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [287, 288]
                            ],
                            [
                                [289]
                            ]
                        ],
                        id: "826"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [290, 291, -58, -32, 292]
                        ],
                        id: "268"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [293, -189, -77, 294]
                        ],
                        id: "288"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [295, 296, 297, 298, 299, 300, -187]
                        ],
                        id: "324"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [301, 302]
                        ],
                        id: "270"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [303, 304, -299]
                        ],
                        id: "624"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [305, -191, -287]
                        ],
                        id: "226"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [306]
                            ],
                            [
                                [307, -15, 308, -84, 309]
                            ]
                        ],
                        id: "300"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [310]
                        ],
                        id: "304"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [311, 312, -100, 313, 314, 315]
                        ],
                        id: "320"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [316, 317, -109, 318]
                        ],
                        id: "328"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [319, 320, -315, 321, 322]
                        ],
                        id: "340"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [323, -92, 324, 325, 326, 327]
                        ],
                        id: "191"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-239, 328]
                        ],
                        id: "332"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-48, 329, 330, 331, 332, -328, 333]
                        ],
                        id: "348"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [334]
                            ],
                            [
                                [335, 336]
                            ],
                            [
                                [337]
                            ],
                            [
                                [338]
                            ],
                            [
                                [339]
                            ],
                            [
                                [340]
                            ],
                            [
                                [341]
                            ],
                            [
                                [342]
                            ],
                            [
                                [343, 344]
                            ],
                            [
                                [345]
                            ],
                            [
                                [346]
                            ],
                            [
                                [347, 348]
                            ],
                            [
                                [349]
                            ]
                        ],
                        id: "360"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-177, 350, -175, -116, -174, 351, -80, 352, 353]
                        ],
                        id: "356"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [354, -288]
                        ],
                        id: "372"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [355, -6, 356, 357, 358, 359, -55, -34, -57, 360]
                        ],
                        id: "364"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [361, 362, 363, 364, 365, 366, -359]
                        ],
                        id: "368"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [367]
                        ],
                        id: "352"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [368, 369, 370, -254, 371, 372, 373]
                        ],
                        id: "376"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [374]
                            ],
                            [
                                [375]
                            ],
                            [
                                [376, 377, -283, -162, -50]
                            ]
                        ],
                        id: "380"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [378]
                        ],
                        id: "388"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-369, 379, -365, 380, 381, -371, 382]
                        ],
                        id: "400"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [383]
                            ],
                            [
                                [384]
                            ],
                            [
                                [385]
                            ]
                        ],
                        id: "392"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [386, 387, 388, 389, -181, 390]
                        ],
                        id: "398"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [391, 392, 393, 394, -267, 395]
                        ],
                        id: "404"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-391, -180, 396, 397]
                        ],
                        id: "417"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [398, 399, 400, 401]
                        ],
                        id: "116"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [402, 403]
                        ],
                        id: "410"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-18, 404, 405, 406]
                        ],
                        id: "-99"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [407, 408, -363]
                        ],
                        id: "414"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [409, 410, -172, 411, -400]
                        ],
                        id: "418"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-373, 412, 413]
                        ],
                        id: "422"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [414, 415, -296, -186]
                        ],
                        id: "430"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [416, -247, 417, 418, -252, 419, 420]
                        ],
                        id: "434"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [421]
                        ],
                        id: "144"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [422]
                        ],
                        id: "426"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [423, 424, 425, -93, 426]
                        ],
                        id: "440"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-228, -282, -65]
                        ],
                        id: "442"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [427, -264, 428, -94, -426]
                        ],
                        id: "428"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-244, 429, 430]
                        ],
                        id: "504"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [431, 432]
                        ],
                        id: "498"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [433]
                        ],
                        id: "450"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [434, -98, -313, 435, 436]
                        ],
                        id: "484"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-407, 437, -85, -309, -14]
                        ],
                        id: "807"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [438, -241, 439, -74, -188, -301, 440]
                        ],
                        id: "466"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [441, -78, -352, -173, -411, 442]
                        ],
                        id: "104"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [443, -325, -91, 444, -405, -17]
                        ],
                        id: "499"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [445, -183]
                        ],
                        id: "496"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [446, 447, 448, 449, 450, 451, 452, 453]
                        ],
                        id: "508"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [454, 455, 456, -242, -439]
                        ],
                        id: "478"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-454, 457, 458]
                        ],
                        id: "454"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [459, 460]
                            ],
                            [
                                [-348, 461, -115, 462]
                            ]
                        ],
                        id: "458"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [463, -8, 464, -119, 465]
                        ],
                        id: "516"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [466]
                        ],
                        id: "540"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-75, -440, -240, -417, 467, -194, 468, -71]
                        ],
                        id: "562"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [469, -72, -469, -193]
                        ],
                        id: "566"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [470, -323, 471, -215]
                        ],
                        id: "558"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-229, -63, 472]
                        ],
                        id: "528"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [473, -274, 474, 475]
                            ],
                            [
                                [476]
                            ],
                            [
                                [477]
                            ],
                            [
                                [478]
                            ]
                        ],
                        id: "578"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-351, -176]
                        ],
                        id: "524"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [479]
                            ],
                            [
                                [480]
                            ]
                        ],
                        id: "554"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [481, 482, -22, 483]
                            ],
                            [
                                [-20, 484]
                            ]
                        ],
                        id: "512"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-178, -354, 485, -357, -5]
                        ],
                        id: "586"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [486, -217, 487, -210]
                        ],
                        id: "591"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-167, 488, -249, -213, -106, -102]
                        ],
                        id: "604"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [489]
                            ],
                            [
                                [490]
                            ],
                            [
                                [491]
                            ],
                            [
                                [492]
                            ],
                            [
                                [493]
                            ],
                            [
                                [494]
                            ],
                            [
                                [495]
                            ]
                        ],
                        id: "608"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [496]
                            ],
                            [
                                [497]
                            ],
                            [
                                [-344, 498]
                            ],
                            [
                                [499]
                            ]
                        ],
                        id: "598"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-226, 500, 501, -427, -97, 502, 503, -223]
                        ],
                        id: "616"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [504]
                        ],
                        id: "630"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [505, 506, -404, 507, -169]
                        ],
                        id: "408"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-261, 508]
                        ],
                        id: "620"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-104, -105, -26]
                        ],
                        id: "600"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-383, -370]
                        ],
                        id: "275"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [509, 510]
                        ],
                        id: "634"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [511, -433, 512, 513, -81, 514, -332]
                        ],
                        id: "642"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [515]
                            ],
                            [
                                [-502, 516, -424]
                            ],
                            [
                                [517]
                            ],
                            [
                                [518]
                            ],
                            [
                                [519]
                            ],
                            [
                                [520]
                            ],
                            [
                                [521]
                            ],
                            [
                                [-506, -184, -446, -182, -390, 522, -59, -292, 523, 524, -95, -429, -263, 525, -271, -474, 526]
                            ],
                            [
                                [527]
                            ],
                            [
                                [528]
                            ],
                            [
                                [529]
                            ]
                        ],
                        id: "643"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [530, -61, -198, 531]
                        ],
                        id: "646"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-243, -457, 532, -430]
                        ],
                        id: "732"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [533, -381, -364, -409, 534, -511, 535, -23, -483, 536]
                        ],
                        id: "682"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [537, 538, -123, 539, -420, -251, 540, -256, -270, 541]
                        ],
                        id: "729"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [542, -268, -395, 543, -205, -125, 544, -538]
                        ],
                        id: "728"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [545, -455, -441, -300, -305, 546, -303]
                        ],
                        id: "686"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [547]
                            ],
                            [
                                [548]
                            ],
                            [
                                [549]
                            ],
                            [
                                [550]
                            ],
                            [
                                [551]
                            ]
                        ],
                        id: "090"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [552, -297, -416]
                        ],
                        id: "694"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [553, -316, -321]
                        ],
                        id: "222"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-265, -233, 554, 555]
                        ],
                        id: "-99"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-396, -266, -556, 556]
                        ],
                        id: "706"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-86, -438, -406, -445, -90, -324, -333, -515]
                        ],
                        id: "688"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [557, -279, 558, -110, -318]
                        ],
                        id: "740"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-504, 559, -330, -54, -224]
                        ],
                        id: "703"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-49, -334, -327, 560, -377]
                        ],
                        id: "705"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-475, -273, 561]
                        ],
                        id: "752"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [562, -450]
                        ],
                        id: "748"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-380, -374, -414, 563, 564, -366]
                        ],
                        id: "760"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-468, -421, -540, -122, -195]
                        ],
                        id: "148"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [565, -295, -76, -69]
                        ],
                        id: "768"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [566, -461, 567, -443, -410, -399]
                        ],
                        id: "764"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-397, -179, -3, 568]
                        ],
                        id: "762"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-356, 569, -388, 570, -1]
                        ],
                        id: "795"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [571, -336]
                        ],
                        id: "626"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [572]
                        ],
                        id: "780"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-246, 573, -418]
                        ],
                        id: "788"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [-293, -36, -360, -367, -565, 574]
                            ],
                            [
                                [-310, -83, 575]
                            ]
                        ],
                        id: "792"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [576]
                        ],
                        id: "158"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-393, 577, -447, -459, 578, -201, 579, -199, -62, -531, 580]
                        ],
                        id: "834"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-532, -197, -544, -394, -581]
                        ],
                        id: "800"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-525, 581, -513, -432, -512, -331, -560, -503, -96]
                        ],
                        id: "804"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-113, 582, -28]
                        ],
                        id: "858"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [583]
                            ],
                            [
                                [584]
                            ],
                            [
                                [585]
                            ],
                            [
                                [586]
                            ],
                            [
                                [587]
                            ],
                            [
                                [588, -437, 589, -139]
                            ],
                            [
                                [590]
                            ],
                            [
                                [591]
                            ],
                            [
                                [592]
                            ],
                            [
                                [-141, 593]
                            ]
                        ],
                        id: "840"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-571, -387, -398, -569, -2]
                        ],
                        id: "860"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [594, -319, -108, -212]
                        ],
                        id: "862"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [595, -401, -412, -171]
                        ],
                        id: "704"
                    }, {
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [596]
                            ],
                            [
                                [597]
                            ]
                        ],
                        id: "548"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [598, -537, -482]
                        ],
                        id: "887"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-466, -118, 599, -451, -563, -449, 600],
                            [-423]
                        ],
                        id: "710"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-458, -453, 601, -120, -465, -7, -202, -579]
                        ],
                        id: "894"
                    }, {
                        type: "Polygon",
                        arcs: [
                            [-600, -121, -602, -452]
                        ],
                        id: "716"
                    }]
                },
                land: {
                    type: "GeometryCollection",
                    geometries: [{
                        type: "MultiPolygon",
                        arcs: [
                            [
                                [595, 401, 566, 459, 567, 441, 78, 352, 485, 357, 361, 407, 534, 509, 535, 18, 484, 20, 483, 598, 533, 381, 249, 540, 256, 231, 554, 556, 391, 577, 447, 600, 463, 8, 202, 10, 205, 285, 305, 191, 469, 67, 565, 293, 184, 414, 552, 297, 303, 546, 301, 545, 455, 532, 430, 244, 573, 418, 252, 371, 412, 563, 574, 290, 523, 581, 513, 81, 575, 307, 15, 443, 325, 560, 377, 283, 259, 508, 257, 284, 66, 472, 229, 236, 224, 500, 516, 424, 427, 261, 525, 271, 561, 475, 526, 506, 402, 507, 169],
                                [123, 544, 538],
                                [199, 579],
                                [542, 268, 541],
                                [388, 522, 55, 360, 569]
                            ],
                            [
                                [24, 164]
                            ],
                            [
                                [582, 28, 165, 488, 247, 208, 486, 213, 470, 319, 553, 311, 435, 589, 139, 593, 141, 588, 434, 98, 313, 321, 471, 215, 487, 210, 594, 316, 557, 279, 111],
                                [558, 277]
                            ],
                            [
                                [36]
                            ],
                            [
                                [37]
                            ],
                            [
                                [38]
                            ],
                            [
                                [39]
                            ],
                            [
                                [40]
                            ],
                            [
                                [41]
                            ],
                            [
                                [42]
                            ],
                            [
                                [43]
                            ],
                            [
                                [44]
                            ],
                            [
                                [45]
                            ],
                            [
                                [46]
                            ],
                            [
                                [86]
                            ],
                            [
                                [87]
                            ],
                            [
                                [88]
                            ],
                            [
                                [461, 113, 462, 348]
                            ],
                            [
                                [128]
                            ],
                            [
                                [129]
                            ],
                            [
                                [130]
                            ],
                            [
                                [131]
                            ],
                            [
                                [132]
                            ],
                            [
                                [133]
                            ],
                            [
                                [134]
                            ],
                            [
                                [135]
                            ],
                            [
                                [136]
                            ],
                            [
                                [137]
                            ],
                            [
                                [142]
                            ],
                            [
                                [143]
                            ],
                            [
                                [144]
                            ],
                            [
                                [145]
                            ],
                            [
                                [146]
                            ],
                            [
                                [147]
                            ],
                            [
                                [148]
                            ],
                            [
                                [149]
                            ],
                            [
                                [150]
                            ],
                            [
                                [151]
                            ],
                            [
                                [152]
                            ],
                            [
                                [153]
                            ],
                            [
                                [154]
                            ],
                            [
                                [155]
                            ],
                            [
                                [156]
                            ],
                            [
                                [157]
                            ],
                            [
                                [158]
                            ],
                            [
                                [159]
                            ],
                            [
                                [160]
                            ],
                            [
                                [167]
                            ],
                            [
                                [217]
                            ],
                            [
                                [218, 220]
                            ],
                            [
                                [235]
                            ],
                            [
                                [237, 328]
                            ],
                            [
                                [274]
                            ],
                            [
                                [275]
                            ],
                            [
                                [276]
                            ],
                            [
                                [280]
                            ],
                            [
                                [288, 354]
                            ],
                            [
                                [289]
                            ],
                            [
                                [306]
                            ],
                            [
                                [310]
                            ],
                            [
                                [334]
                            ],
                            [
                                [336, 571]
                            ],
                            [
                                [337]
                            ],
                            [
                                [338]
                            ],
                            [
                                [339]
                            ],
                            [
                                [340]
                            ],
                            [
                                [341]
                            ],
                            [
                                [342]
                            ],
                            [
                                [344, 498]
                            ],
                            [
                                [345]
                            ],
                            [
                                [346]
                            ],
                            [
                                [349]
                            ],
                            [
                                [367]
                            ],
                            [
                                [374]
                            ],
                            [
                                [375]
                            ],
                            [
                                [378]
                            ],
                            [
                                [383]
                            ],
                            [
                                [384]
                            ],
                            [
                                [385]
                            ],
                            [
                                [421]
                            ],
                            [
                                [433]
                            ],
                            [
                                [466]
                            ],
                            [
                                [476]
                            ],
                            [
                                [477]
                            ],
                            [
                                [478]
                            ],
                            [
                                [479]
                            ],
                            [
                                [480]
                            ],
                            [
                                [489]
                            ],
                            [
                                [490]
                            ],
                            [
                                [491]
                            ],
                            [
                                [492]
                            ],
                            [
                                [493]
                            ],
                            [
                                [494]
                            ],
                            [
                                [495]
                            ],
                            [
                                [496]
                            ],
                            [
                                [497]
                            ],
                            [
                                [499]
                            ],
                            [
                                [504]
                            ],
                            [
                                [515]
                            ],
                            [
                                [517]
                            ],
                            [
                                [518]
                            ],
                            [
                                [519]
                            ],
                            [
                                [520]
                            ],
                            [
                                [521]
                            ],
                            [
                                [527]
                            ],
                            [
                                [528]
                            ],
                            [
                                [529]
                            ],
                            [
                                [547]
                            ],
                            [
                                [548]
                            ],
                            [
                                [549]
                            ],
                            [
                                [550]
                            ],
                            [
                                [551]
                            ],
                            [
                                [572]
                            ],
                            [
                                [576]
                            ],
                            [
                                [583]
                            ],
                            [
                                [584]
                            ],
                            [
                                [585]
                            ],
                            [
                                [586]
                            ],
                            [
                                [587]
                            ],
                            [
                                [590]
                            ],
                            [
                                [591]
                            ],
                            [
                                [592]
                            ],
                            [
                                [596]
                            ],
                            [
                                [597]
                            ]
                        ]
                    }]
                }
            },
            arcs: [
                [
                    [67002, 71642],
                    [284, -224],
                    [209, 79],
                    [58, 268],
                    [219, 89],
                    [157, 180],
                    [55, 472],
                    [234, 114],
                    [44, 211],
                    [131, -158],
                    [84, -19]
                ],
                [
                    [68477, 72654],
                    [154, -4],
                    [210, -124]
                ],
                [
                    [68841, 72526],
                    [85, -72],
                    [201, 189],
                    [93, -114],
                    [90, 271],
                    [166, -12],
                    [43, 86],
                    [29, 239],
                    [120, 205],
                    [150, -134],
                    [-30, -181],
                    [84, -28],
                    [-26, -496],
                    [110, -194],
                    [97, 125],
                    [123, 58],
                    [173, 265],
                    [192, -44],
                    [286, -1]
                ],
                [
                    [70827, 72688],
                    [50, -169]
                ],
                [
                    [70877, 72519],
                    [-162, -67],
                    [-141, -109],
                    [-319, -68],
                    [-298, -124],
                    [-163, -258],
                    [66, -250],
                    [32, -294],
                    [-139, -248],
                    [12, -227],
                    [-76, -213],
                    [-265, 18],
                    [110, -390],
                    [-177, -150],
                    [-118, -356],
                    [15, -355],
                    [-108, -166],
                    [-103, 55],
                    [-212, -77],
                    [-31, -166],
                    [-207, 1],
                    [-154, -334],
                    [-10, -503],
                    [-361, -246],
                    [-194, 52],
                    [-56, -129],
                    [-166, 75],
                    [-278, -88],
                    [-465, 301]
                ],
                [
                    [66909, 68203],
                    [252, 536],
                    [-23, 380],
                    [-210, 100],
                    [-22, 375],
                    [-91, 472],
                    [119, 323],
                    [-121, 87],
                    [76, 430],
                    [113, 736]
                ],
                [
                    [56642, 44124],
                    [29, -184],
                    [-32, -286],
                    [49, -277],
                    [-41, -222],
                    [24, -203],
                    [-579, 7],
                    [-13, -1880],
                    [188, -483],
                    [181, -369]
                ],
                [
                    [56448, 40227],
                    [-510, -241],
                    [-673, 83],
                    [-192, 284],
                    [-1126, -26],
                    [-42, -41],
                    [-166, 267],
                    [-180, 17],
                    [-166, -100],
                    [-134, -113]
                ],
                [
                    [53259, 40357],
                    [-26, 372],
                    [38, 519],
                    [96, 541],
                    [15, 254],
                    [90, 532],
                    [66, 243],
                    [159, 386],
                    [90, 263],
                    [29, 438],
                    [-15, 335],
                    [-83, 211],
                    [-74, 358],
                    [-68, 355],
                    [15, 122],
                    [85, 235],
                    [-84, 570],
                    [-57, 396],
                    [-139, 374],
                    [26, 115]
                ],
                [
                    [53422, 46976],
                    [115, 79],
                    [80, -11],
                    [98, 71],
                    [820, -8],
                    [68, -440],
                    [80, -354],
                    [64, -191],
                    [106, -309],
                    [184, 47],
                    [91, 83],
                    [154, -83],
                    [42, 148],
                    [69, 344],
                    [172, 23],
                    [15, 103],
                    [142, 2],
                    [-24, -213],
                    [337, 5],
                    [5, -372],
                    [56, -228],
                    [-41, -356],
                    [21, -363],
                    [93, -219],
                    [-15, -703],
                    [68, 54],
                    [121, -15],
                    [172, 89],
                    [127, -35]
                ],
                [
                    [53383, 47159],
                    [-74, 444]
                ],
                [
                    [53309, 47603],
                    [112, 255],
                    [84, 100],
                    [104, -203]
                ],
                [
                    [53609, 47755],
                    [-101, -124],
                    [-45, -152],
                    [-9, -258],
                    [-71, -62]
                ],
                [
                    [55719, 75309],
                    [-35, -201],
                    [39, -254],
                    [115, -144]
                ],
                [
                    [55838, 74710],
                    [-5, -155],
                    [-91, -85],
                    [-16, -192],
                    [-129, -287]
                ],
                [
                    [55597, 73991],
                    [-48, 41],
                    [-5, 130],
                    [-154, 199],
                    [-24, 281],
                    [23, 403],
                    [38, 184],
                    [-47, 93]
                ],
                [
                    [55380, 75322],
                    [-18, 188],
                    [120, 291],
                    [18, -111],
                    [75, 52]
                ],
                [
                    [55575, 75742],
                    [59, -159],
                    [66, -60],
                    [19, -214]
                ],
                [
                    [64327, 64904],
                    [49, 29],
                    [11, -162],
                    [217, 93],
                    [230, -15],
                    [168, -18],
                    [190, 400],
                    [207, 379],
                    [176, 364]
                ],
                [
                    [65575, 65974],
                    [52, -202]
                ],
                [
                    [65627, 65772],
                    [38, -466]
                ],
                [
                    [65665, 65306],
                    [-142, -3],
                    [-23, -384],
                    [50, -82],
                    [-126, -117],
                    [-1, -241],
                    [-81, -245],
                    [-7, -238]
                ],
                [
                    [65335, 63996],
                    [-56, -125],
                    [-835, 298],
                    [-106, 599],
                    [-11, 136]
                ],
                [
                    [31400, 18145],
                    [-168, 16],
                    [-297, 1],
                    [0, 1319]
                ],
                [
                    [30935, 19481],
                    [106, -274],
                    [139, -443],
                    [361, -355],
                    [389, -147],
                    [-125, -296],
                    [-264, -29],
                    [-141, 208]
                ],
                [
                    [32587, 37434],
                    [511, -964],
                    [227, -89],
                    [339, -437],
                    [286, -231],
                    [40, -261],
                    [-273, -898],
                    [280, -160],
                    [312, -91],
                    [220, 95],
                    [252, 453],
                    [45, 521]
                ],
                [
                    [34826, 35372],
                    [138, 114],
                    [139, -341],
                    [-6, -472],
                    [-234, -326],
                    [-186, -241],
                    [-314, -573],
                    [-370, -806]
                ],
                [
                    [33993, 32727],
                    [-70, -473],
                    [-74, -607],
                    [3, -588],
                    [-61, -132],
                    [-21, -382]
                ],
                [
                    [33770, 30545],
                    [-19, -308],
                    [353, -506],
                    [-38, -408],
                    [173, -257],
                    [-14, -289],
                    [-267, -757],
                    [-412, -317],
                    [-557, -123],
                    [-305, 59],
                    [59, -352],
                    [-57, -442],
                    [51, -298],
                    [-167, -208],
                    [-284, -82],
                    [-267, 216],
                    [-108, -155],
                    [39, -587],
                    [188, -178],
                    [152, 186],
                    [82, -307],
                    [-255, -183],
                    [-223, -367],
                    [-41, -595],
                    [-66, -316],
                    [-262, -2],
                    [-218, -302],
                    [-80, -443],
                    [273, -433],
                    [266, -119],
                    [-96, -531],
                    [-328, -333],
                    [-180, -692],
                    [-254, -234],
                    [-113, -276],
                    [89, -614],
                    [185, -342],
                    [-117, 30]
                ],
                [
                    [30952, 19680],
                    [-257, 93],
                    [-672, 79],
                    [-115, 344],
                    [6, 443],
                    [-185, -38],
                    [-98, 214],
                    [-24, 626],
                    [213, 260],
                    [88, 375],
                    [-33, 299],
                    [148, 504],
                    [101, 782],
                    [-30, 347],
                    [122, 112],
                    [-30, 223],
                    [-129, 118],
                    [92, 248],
                    [-126, 224],
                    [-65, 682],
                    [112, 120],
                    [-47, 720],
                    [65, 605],
                    [75, 527],
                    [166, 215],
                    [-84, 576],
                    [-1, 543],
                    [210, 386],
                    [-7, 494],
                    [159, 576],
                    [1, 544],
                    [-72, 108],
                    [-128, 1020],
                    [171, 607],
                    [-27, 572],
                    [100, 537],
                    [182, 555],
                    [196, 367],
                    [-83, 232],
                    [58, 190],
                    [-9, 985],
                    [302, 291],
                    [96, 614],
                    [-34, 148]
                ],
                [
                    [31359, 37147],
                    [231, 534],
                    [364, -144],
                    [163, -427],
                    [109, 475],
                    [316, -24],
                    [45, -127]
                ],
                [
                    [62106, 74858],
                    [386, 92]
                ],
                [
                    [62492, 74950],
                    [57, -155],
                    [106, -103],
                    [-56, -148],
                    [148, -202],
                    [-78, -189],
                    [118, -160],
                    [124, -97],
                    [7, -410]
                ],
                [
                    [62918, 73486],
                    [-101, -17]
                ],
                [
                    [62817, 73469],
                    [-113, 342],
                    [1, 91],
                    [-123, -2],
                    [-82, 159],
                    [-58, -16]
                ],
                [
                    [62442, 74043],
                    [-109, 172],
                    [-207, 147],
                    [27, 288],
                    [-47, 208]
                ],
                [
                    [33452, 3290],
                    [-82, -301],
                    [-81, -266],
                    [-582, 81],
                    [-621, -35],
                    [-348, 197],
                    [0, 23],
                    [-152, 174],
                    [625, -23],
                    [599, -58],
                    [207, 243],
                    [147, 208],
                    [288, -243]
                ],
                [
                    [5775, 3611],
                    [-533, -81],
                    [-364, 208],
                    [-163, 209],
                    [-11, 35],
                    [-180, 162],
                    [169, 220],
                    [517, -93],
                    [277, -185],
                    [212, -209],
                    [76, -266]
                ],
                [
                    [37457, 4468],
                    [342, -255],
                    [120, -359],
                    [33, -254],
                    [11, -301],
                    [-430, -186],
                    [-452, -150],
                    [-522, -139],
                    [-582, -116],
                    [-658, 35],
                    [-365, 197],
                    [49, 243],
                    [593, 162],
                    [239, 197],
                    [174, 254],
                    [126, 220],
                    [168, 209],
                    [180, 243],
                    [141, 0],
                    [414, 127],
                    [419, -127]
                ],
                [
                    [16330, 7154],
                    [359, -93],
                    [332, 104],
                    [-158, -208],
                    [-261, -151],
                    [-386, 47],
                    [-278, 208],
                    [60, 197],
                    [332, -104]
                ],
                [
                    [15122, 7165],
                    [425, -231],
                    [-164, 23],
                    [-359, 58],
                    [-381, 162],
                    [202, 127],
                    [277, -139]
                ],
                [
                    [22505, 8080],
                    [305, -81],
                    [304, 69],
                    [163, -335],
                    [-217, 46],
                    [-337, -23],
                    [-343, 23],
                    [-376, -35],
                    [-283, 116],
                    [-146, 243],
                    [174, 104],
                    [353, -81],
                    [403, -46]
                ],
                [
                    [30985, 8657],
                    [33, -266],
                    [-49, -231],
                    [-76, -220],
                    [-326, -81],
                    [-311, -116],
                    [-364, 11],
                    [136, 232],
                    [-327, -81],
                    [-310, -81],
                    [-212, 174],
                    [-16, 243],
                    [305, 231],
                    [190, 70],
                    [321, -23],
                    [82, 301],
                    [16, 219],
                    [-6, 475],
                    [158, 278],
                    [256, 93],
                    [147, -220],
                    [65, -220],
                    [120, -267],
                    [92, -254],
                    [76, -267]
                ],
                [
                    [0, 529],
                    [16, -5],
                    [245, 344],
                    [501, -185],
                    [32, 21],
                    [294, 188],
                    [38, -7],
                    [32, -4],
                    [402, -246],
                    [352, 246],
                    [63, 34],
                    [816, 104],
                    [265, -138],
                    [130, -71],
                    [419, -196],
                    [789, -151],
                    [625, -185],
                    [1072, -139],
                    [800, 162],
                    [1181, -116],
                    [669, -185],
                    [734, 174],
                    [773, 162],
                    [60, 278],
                    [-1094, 23],
                    [-898, 139],
                    [-234, 231],
                    [-745, 128],
                    [49, 266],
                    [103, 243],
                    [104, 220],
                    [-55, 243],
                    [-462, 162],
                    [-212, 209],
                    [-430, 185],
                    [675, -35],
                    [642, 93],
                    [402, -197],
                    [495, 173],
                    [457, 220],
                    [223, 197],
                    [-98, 243],
                    [-359, 162],
                    [-408, 174],
                    [-571, 35],
                    [-500, 81],
                    [-539, 58],
                    [-180, 220],
                    [-359, 185],
                    [-217, 208],
                    [-87, 672],
                    [136, -58],
                    [250, -185],
                    [457, 58],
                    [441, 81],
                    [228, -255],
                    [441, 58],
                    [370, 127],
                    [348, 162],
                    [315, 197],
                    [419, 58],
                    [-11, 220],
                    [-97, 220],
                    [81, 208],
                    [359, 104],
                    [163, -196],
                    [425, 115],
                    [321, 151],
                    [397, 12],
                    [375, 57],
                    [376, 139],
                    [299, 128],
                    [337, 127],
                    [218, -35],
                    [190, -46],
                    [414, 81],
                    [370, -104],
                    [381, 11],
                    [364, 81],
                    [375, -57],
                    [414, -58],
                    [386, 23],
                    [403, -12],
                    [413, -11],
                    [381, 23],
                    [283, 174],
                    [337, 92],
                    [349, -127],
                    [331, 104],
                    [300, 208],
                    [179, -185],
                    [98, -208],
                    [180, -197],
                    [288, 174],
                    [332, -220],
                    [375, -70],
                    [321, -162],
                    [392, 35],
                    [354, 104],
                    [418, -23],
                    [376, -81],
                    [381, -104],
                    [147, 254],
                    [-180, 197],
                    [-136, 209],
                    [-359, 46],
                    [-158, 220],
                    [-60, 220],
                    [-98, 440],
                    [213, -81],
                    [364, -35],
                    [359, 35],
                    [327, -93],
                    [283, -174],
                    [119, -208],
                    [376, -35],
                    [359, 81],
                    [381, 116],
                    [342, 70],
                    [283, -139],
                    [370, 46],
                    [239, 451],
                    [224, -266],
                    [321, -104],
                    [348, 58],
                    [228, -232],
                    [365, -23],
                    [337, -69],
                    [332, -128],
                    [218, 220],
                    [108, 209],
                    [278, -232],
                    [381, 58],
                    [283, -127],
                    [190, -197],
                    [370, 58],
                    [288, 127],
                    [283, 151],
                    [337, 81],
                    [392, 69],
                    [354, 81],
                    [272, 127],
                    [163, 186],
                    [65, 254],
                    [-32, 244],
                    [-87, 231],
                    [-98, 232],
                    [-87, 231],
                    [-71, 209],
                    [-16, 231],
                    [27, 232],
                    [130, 220],
                    [109, 243],
                    [44, 231],
                    [-55, 255],
                    [-32, 232],
                    [136, 266],
                    [152, 173],
                    [180, 220],
                    [190, 186],
                    [223, 173],
                    [109, 255],
                    [152, 162],
                    [174, 151],
                    [267, 34],
                    [174, 186],
                    [196, 115],
                    [228, 70],
                    [202, 150],
                    [157, 186],
                    [218, 69],
                    [163, -151],
                    [-103, -196],
                    [-283, -174],
                    [-120, -127],
                    [-206, 92],
                    [-229, -58],
                    [-190, -139],
                    [-202, -150],
                    [-136, -174],
                    [-38, -231],
                    [17, -220],
                    [130, -197],
                    [-190, -139],
                    [-261, -46],
                    [-153, -197],
                    [-163, -185],
                    [-174, -255],
                    [-44, -220],
                    [98, -243],
                    [147, -185],
                    [229, -139],
                    [212, -185],
                    [114, -232],
                    [60, -220],
                    [82, -232],
                    [130, -196],
                    [82, -220],
                    [38, -544],
                    [81, -220],
                    [22, -232],
                    [87, -231],
                    [-38, -313],
                    [-152, -243],
                    [-163, -197],
                    [-370, -81],
                    [-125, -208],
                    [-169, -197],
                    [-419, -220],
                    [-370, -93],
                    [-348, -127],
                    [-376, -128],
                    [-223, -243],
                    [-446, -23],
                    [-489, 23],
                    [-441, -46],
                    [-468, 0],
                    [87, -232],
                    [424, -104],
                    [311, -162],
                    [174, -208],
                    [-310, -185],
                    [-479, 58],
                    [-397, -151],
                    [-17, -243],
                    [-11, -232],
                    [327, -196],
                    [60, -220],
                    [353, -220],
                    [588, -93],
                    [500, -162],
                    [398, -185],
                    [506, -186],
                    [690, -92],
                    [681, -162],
                    [473, -174],
                    [517, -197],
                    [272, -278],
                    [136, -220],
                    [337, 209],
                    [457, 173],
                    [484, 186],
                    [577, 150],
                    [495, 162],
                    [691, 12],
                    [680, -81],
                    [560, -139],
                    [180, 255],
                    [386, 173],
                    [702, 12],
                    [550, 127],
                    [522, 128],
                    [577, 81],
                    [614, 104],
                    [430, 150],
                    [-196, 209],
                    [-119, 208],
                    [0, 220],
                    [-539, -23],
                    [-571, -93],
                    [-544, 0],
                    [-77, 220],
                    [39, 440],
                    [125, 128],
                    [397, 138],
                    [468, 139],
                    [337, 174],
                    [337, 174],
                    [251, 231],
                    [380, 104],
                    [376, 81],
                    [190, 47],
                    [430, 23],
                    [408, 81],
                    [343, 116],
                    [337, 139],
                    [305, 139],
                    [386, 185],
                    [245, 197],
                    [261, 173],
                    [82, 232],
                    [-294, 139],
                    [98, 243],
                    [185, 185],
                    [288, 116],
                    [305, 139],
                    [283, 185],
                    [217, 232],
                    [136, 277],
                    [202, 163],
                    [331, -35],
                    [136, -197],
                    [332, -23],
                    [11, 220],
                    [142, 231],
                    [299, -58],
                    [71, -220],
                    [331, -34],
                    [360, 104],
                    [348, 69],
                    [315, -34],
                    [120, -243],
                    [305, 196],
                    [283, 105],
                    [315, 81],
                    [310, 81],
                    [283, 139],
                    [310, 92],
                    [240, 128],
                    [168, 208],
                    [207, -151],
                    [288, 81],
                    [202, -277],
                    [157, -209],
                    [316, 116],
                    [125, 232],
                    [283, 162],
                    [365, -35],
                    [108, -220],
                    [229, 220],
                    [299, 69],
                    [326, 23],
                    [294, -11],
                    [310, -70],
                    [300, -34],
                    [130, -197],
                    [180, -174],
                    [304, 104],
                    [327, 24],
                    [315, 0],
                    [310, 11],
                    [278, 81],
                    [294, 70],
                    [245, 162],
                    [261, 104],
                    [283, 58],
                    [212, 162],
                    [152, 324],
                    [158, 197],
                    [288, -93],
                    [109, -208],
                    [239, -139],
                    [289, 46],
                    [196, -208],
                    [206, -151],
                    [283, 139],
                    [98, 255],
                    [250, 104],
                    [289, 197],
                    [272, 81],
                    [326, 116],
                    [218, 127],
                    [228, 139],
                    [218, 127],
                    [261, -69],
                    [250, 208],
                    [180, 162],
                    [261, -11],
                    [229, 139],
                    [54, 208],
                    [234, 162],
                    [228, 116],
                    [278, 93],
                    [256, 46],
                    [244, -35],
                    [262, -58],
                    [223, -162],
                    [27, -254],
                    [245, -197],
                    [168, -162],
                    [332, -70],
                    [185, -162],
                    [229, -162],
                    [266, -35],
                    [223, 116],
                    [240, 243],
                    [261, -127],
                    [272, -70],
                    [261, -69],
                    [272, -46],
                    [277, 0],
                    [229, -614],
                    [-11, -150],
                    [-33, -267],
                    [-266, -150],
                    [-218, -220],
                    [38, -232],
                    [310, 12],
                    [-38, -232],
                    [-141, -220],
                    [-131, -243],
                    [212, -185],
                    [321, -58],
                    [321, 104],
                    [153, 232],
                    [92, 220],
                    [153, 185],
                    [174, 174],
                    [70, 208],
                    [147, 289],
                    [174, 58],
                    [316, 24],
                    [277, 69],
                    [283, 93],
                    [136, 231],
                    [82, 220],
                    [190, 220],
                    [272, 151],
                    [234, 115],
                    [153, 197],
                    [157, 104],
                    [202, 93],
                    [277, -58],
                    [250, 58],
                    [272, 69],
                    [305, -34],
                    [201, 162],
                    [142, 393],
                    [103, -162],
                    [131, -278],
                    [234, -115],
                    [266, -47],
                    [267, 70],
                    [283, -46],
                    [261, -12],
                    [174, 58],
                    [234, -35],
                    [212, -127],
                    [250, 81],
                    [300, 0],
                    [255, 81],
                    [289, -81],
                    [185, 197],
                    [141, 196],
                    [191, 163],
                    [348, 439],
                    [179, -81],
                    [212, -162],
                    [185, -208],
                    [354, -359],
                    [272, -12],
                    [256, 0],
                    [299, 70],
                    [299, 81],
                    [229, 162],
                    [190, 174],
                    [310, 23],
                    [207, 127],
                    [218, -116],
                    [141, -185],
                    [196, -185],
                    [305, 23],
                    [190, -150],
                    [332, -151],
                    [348, -58],
                    [288, 47],
                    [218, 185],
                    [185, 185],
                    [250, 46],
                    [251, -81],
                    [288, -58],
                    [261, 93],
                    [250, 0],
                    [245, -58],
                    [256, -58],
                    [250, 104],
                    [299, 93],
                    [283, 23],
                    [316, 0],
                    [255, 58],
                    [251, 46],
                    [76, 290],
                    [11, 243],
                    [174, -162],
                    [49, -266],
                    [92, -244],
                    [115, -196],
                    [234, -105],
                    [315, 35],
                    [365, 12],
                    [250, 35],
                    [364, 0],
                    [262, 11],
                    [364, -23],
                    [310, -46],
                    [196, -186],
                    [-54, -220],
                    [179, -173],
                    [299, -139],
                    [310, -151],
                    [360, -104],
                    [375, -92],
                    [283, -93],
                    [315, -12],
                    [180, 197],
                    [245, -162],
                    [212, -185],
                    [245, -139],
                    [337, -58],
                    [321, -69],
                    [136, -232],
                    [316, -139],
                    [212, -208],
                    [310, -93],
                    [321, 12],
                    [299, -35],
                    [332, 12],
                    [332, -47],
                    [310, -81],
                    [288, -139],
                    [289, -116],
                    [195, -173],
                    [-32, -232],
                    [-147, -208],
                    [-125, -266],
                    [-98, -209],
                    [-131, -243],
                    [-364, -93],
                    [-163, -208],
                    [-360, -127],
                    [-125, -232],
                    [-190, -220],
                    [-201, -185],
                    [-115, -243],
                    [-70, -220],
                    [-28, -266],
                    [6, -220],
                    [158, -232],
                    [60, -220],
                    [130, -208],
                    [517, -81],
                    [109, -255],
                    [-501, -93],
                    [-424, -127],
                    [-528, -23],
                    [-234, -336],
                    [-49, -278],
                    [-119, -220],
                    [-147, -220],
                    [370, -196],
                    [141, -244],
                    [239, -219],
                    [338, -197],
                    [386, -186],
                    [419, -185],
                    [636, -185],
                    [142, -289],
                    [800, -128],
                    [53, -45],
                    [208, -175],
                    [767, 151],
                    [636, -186],
                    [-99520, -142]
                ],
                [
                    [69148, 21851],
                    [179, -186],
                    [263, -74],
                    [9, -112],
                    [-77, -269],
                    [-427, -38],
                    [-7, 314],
                    [41, 244],
                    [19, 121]
                ],
                [
                    [90387, 26479],
                    [269, -204],
                    [151, 81],
                    [217, 113],
                    [166, -39],
                    [20, -702],
                    [-95, -203],
                    [-29, -476],
                    [-97, 162],
                    [-193, -412],
                    [-57, 32],
                    [-171, 19],
                    [-171, 505],
                    [-38, 390],
                    [-160, 515],
                    [7, 271],
                    [181, -52]
                ],
                [
                    [89877, 42448],
                    [100, -464],
                    [179, 223],
                    [92, -250],
                    [133, -231],
                    [-29, -262],
                    [60, -506],
                    [42, -295],
                    [70, -72],
                    [75, -505],
                    [-27, -307],
                    [90, -400],
                    [301, -309],
                    [197, -281],
                    [186, -257],
                    [-37, -143],
                    [159, -371],
                    [108, -639],
                    [111, 130],
                    [113, -256],
                    [68, 91],
                    [48, -626],
                    [197, -363],
                    [129, -226],
                    [217, -478],
                    [78, -475],
                    [7, -337],
                    [-19, -365],
                    [132, -502],
                    [-16, -523],
                    [-48, -274],
                    [-75, -527],
                    [6, -339],
                    [-55, -423],
                    [-123, -538],
                    [-205, -290],
                    [-102, -458],
                    [-93, -292],
                    [-82, -510],
                    [-107, -294],
                    [-70, -442],
                    [-36, -407],
                    [14, -187],
                    [-159, -205],
                    [-311, -22],
                    [-257, -242],
                    [-127, -229],
                    [-168, -254],
                    [-230, 262],
                    [-170, 104],
                    [43, 308],
                    [-152, -112],
                    [-243, -428],
                    [-240, 160],
                    [-158, 94],
                    [-159, 42],
                    [-269, 171],
                    [-179, 364],
                    [-52, 449],
                    [-64, 298],
                    [-137, 240],
                    [-267, 71],
                    [91, 287],
                    [-67, 438],
                    [-136, -408],
                    [-247, -109],
                    [146, 327],
                    [42, 341],
                    [107, 289],
                    [-22, 438],
                    [-226, -504],
                    [-174, -202],
                    [-106, -470],
                    [-217, 243],
                    [9, 313],
                    [-174, 429],
                    [-147, 221],
                    [52, 137],
                    [-356, 358],
                    [-195, 17],
                    [-267, 287],
                    [-498, -56],
                    [-359, -211],
                    [-317, -197],
                    [-265, 39],
                    [-294, -303],
                    [-241, -137],
                    [-53, -309],
                    [-103, -240],
                    [-236, -15],
                    [-174, -52],
                    [-246, 107],
                    [-199, -64],
                    [-191, -27],
                    [-165, -315],
                    [-81, 26],
                    [-140, -167],
                    [-133, -187],
                    [-203, 23],
                    [-186, 0],
                    [-295, 377],
                    [-149, 113],
                    [6, 338],
                    [138, 81],
                    [47, 134],
                    [-10, 212],
                    [34, 411],
                    [-31, 350],
                    [-147, 598],
                    [-45, 337],
                    [12, 336],
                    [-111, 385],
                    [-7, 174],
                    [-123, 235],
                    [-35, 463],
                    [-158, 467],
                    [-39, 252],
                    [122, -255],
                    [-93, 548],
                    [137, -171],
                    [83, -229],
                    [-5, 303],
                    [-138, 465],
                    [-26, 186],
                    [-65, 177],
                    [31, 341],
                    [56, 146],
                    [38, 295],
                    [-29, 346],
                    [114, 425],
                    [21, -450],
                    [118, 406],
                    [225, 198],
                    [136, 252],
                    [212, 217],
                    [126, 46],
                    [77, -73],
                    [219, 220],
                    [168, 66],
                    [42, 129],
                    [74, 54],
                    [153, -14],
                    [292, 173],
                    [151, 262],
                    [71, 316],
                    [163, 300],
                    [13, 236],
                    [7, 321],
                    [194, 502],
                    [117, -510],
                    [119, 118],
                    [-99, 279],
                    [87, 287],
                    [122, -128],
                    [34, 449],
                    [152, 291],
                    [67, 233],
                    [140, 101],
                    [4, 165],
                    [122, -69],
                    [5, 148],
                    [122, 85],
                    [134, 80],
                    [205, -271],
                    [155, -350],
                    [173, -4],
                    [177, -56],
                    [-59, 325],
                    [133, 473],
                    [126, 155],
                    [-44, 147],
                    [121, 338],
                    [168, 208],
                    [142, -70],
                    [234, 111],
                    [-5, 302],
                    [-204, 195],
                    [148, 86],
                    [184, -147],
                    [148, -242],
                    [234, -151],
                    [79, 60],
                    [172, -182],
                    [162, 169],
                    [105, -51],
                    [65, 113],
                    [127, -292],
                    [-74, -316],
                    [-105, -239],
                    [-96, -20],
                    [32, -236],
                    [-81, -295],
                    [-99, -291],
                    [20, -166],
                    [221, -327],
                    [214, -189],
                    [143, -204],
                    [201, -350],
                    [78, 1],
                    [145, -151],
                    [43, -183],
                    [265, -200],
                    [183, 202],
                    [55, 317],
                    [56, 262],
                    [34, 324],
                    [85, 470],
                    [-39, 286],
                    [20, 171],
                    [-32, 339],
                    [37, 445],
                    [53, 120],
                    [-43, 197],
                    [67, 313],
                    [52, 325],
                    [7, 168],
                    [104, 222],
                    [78, -289],
                    [19, -371],
                    [70, -71],
                    [11, -249],
                    [101, -300],
                    [21, -335],
                    [-10, -214]
                ],
                [
                    [54716, 79012],
                    [-21, -241],
                    [-156, -2],
                    [53, -128],
                    [-92, -380]
                ],
                [
                    [54500, 78261],
                    [-53, -100],
                    [-243, -14],
                    [-140, -134],
                    [-229, 45]
                ],
                [
                    [53835, 78058],
                    [-398, 153],
                    [-62, 205],
                    [-274, -102],
                    [-32, -113],
                    [-169, 84]
                ],
                [
                    [52900, 78285],
                    [-142, 16],
                    [-125, 108],
                    [42, 145],
                    [-10, 104]
                ],
                [
                    [52665, 78658],
                    [83, 33],
                    [141, -164],
                    [39, 156],
                    [245, -25],
                    [199, 106],
                    [133, -18],
                    [87, -121],
                    [26, 100],
                    [-40, 385],
                    [100, 75],
                    [98, 272]
                ],
                [
                    [53776, 79457],
                    [206, -190],
                    [157, 242],
                    [98, 44],
                    [215, -180],
                    [131, 30],
                    [128, -111]
                ],
                [
                    [54711, 79292],
                    [-23, -75],
                    [28, -205]
                ],
                [
                    [62817, 73469],
                    [-190, 78],
                    [-141, 273],
                    [-44, 223]
                ],
                [
                    [63495, 75281],
                    [146, -311],
                    [141, -419],
                    [130, -28],
                    [85, -159],
                    [-228, -47],
                    [-49, -459],
                    [-48, -207],
                    [-101, -138],
                    [7, -293]
                ],
                [
                    [63578, 73220],
                    [-69, -29],
                    [-173, 309],
                    [95, 292],
                    [-82, 174],
                    [-104, -44],
                    [-327, -436]
                ],
                [
                    [62492, 74950],
                    [68, 96],
                    [207, -169],
                    [149, -36],
                    [38, 70],
                    [-136, 319],
                    [72, 82]
                ],
                [
                    [62890, 75312],
                    [78, -20],
                    [191, -359],
                    [122, -40],
                    [48, 150],
                    [166, 238]
                ],
                [
                    [58149, 47921],
                    [-17, 713],
                    [-70, 268]
                ],
                [
                    [58062, 48902],
                    [169, -46],
                    [85, 336],
                    [147, -38]
                ],
                [
                    [58463, 49154],
                    [16, -233],
                    [60, -134],
                    [3, -192],
                    [-69, -124],
                    [-108, -308],
                    [-101, -214],
                    [-115, -28]
                ],
                [
                    [50920, 80916],
                    [204, -47],
                    [257, 123],
                    [176, -258],
                    [153, -138]
                ],
                [
                    [51710, 80596],
                    [-32, -400]
                ],
                [
                    [51678, 80196],
                    [-72, -22],
                    [-30, -331]
                ],
                [
                    [51576, 79843],
                    [-243, 269],
                    [-143, -46],
                    [-194, 279],
                    [-129, 237],
                    [-129, 10],
                    [-40, 207]
                ],
                [
                    [50698, 80799],
                    [222, 117]
                ],
                [
                    [50747, 54278],
                    [-229, -69]
                ],
                [
                    [50518, 54209],
                    [-69, 407],
                    [13, 1357],
                    [-56, 122],
                    [-11, 290],
                    [-96, 207],
                    [-85, 174],
                    [35, 311]
                ],
                [
                    [50249, 57077],
                    [96, 67],
                    [56, 258],
                    [136, 56],
                    [61, 176]
                ],
                [
                    [50598, 57634],
                    [93, 173],
                    [100, 2],
                    [212, -340]
                ],
                [
                    [51003, 57469],
                    [-11, -197],
                    [62, -350],
                    [-54, -238],
                    [29, -159],
                    [-135, -366],
                    [-86, -181],
                    [-52, -372],
                    [7, -376],
                    [-16, -952]
                ],
                [
                    [49214, 56277],
                    [-190, 152],
                    [-130, -22],
                    [-97, -149],
                    [-125, 125],
                    [-49, 195],
                    [-125, 129]
                ],
                [
                    [48498, 56707],
                    [-18, 343],
                    [76, 250],
                    [-7, 200],
                    [221, 490],
                    [41, 405],
                    [76, 144],
                    [134, -79],
                    [116, 120],
                    [38, 152],
                    [216, 265],
                    [53, 184],
                    [259, 246],
                    [153, 84],
                    [70, -114],
                    [178, 3]
                ],
                [
                    [50104, 59400],
                    [-22, -286],
                    [37, -269],
                    [156, -386],
                    [9, -286],
                    [320, -134],
                    [-6, -405]
                ],
                [
                    [50249, 57077],
                    [-243, 13]
                ],
                [
                    [50006, 57090],
                    [-128, 47],
                    [-90, -96],
                    [-123, 43],
                    [-482, -27],
                    [-7, -336],
                    [38, -444]
                ],
                [
                    [75742, 63602],
                    [-6, -424],
                    [-97, 90],
                    [18, -476]
                ],
                [
                    [75657, 62792],
                    [-79, 308],
                    [-16, 301],
                    [-53, 285],
                    [-116, 344],
                    [-256, 23],
                    [25, -243],
                    [-87, -329],
                    [-118, 120],
                    [-41, -108],
                    [-78, 65],
                    [-108, 53]
                ],
                [
                    [74730, 63611],
                    [-43, 486],
                    [-96, 444],
                    [47, 356],
                    [-171, 159],
                    [62, 215],
                    [173, 220],
                    [-200, 313],
                    [98, 401],
                    [220, -255],
                    [133, -30],
                    [24, -410],
                    [265, -81],
                    [257, 8],
                    [160, -101],
                    [-128, -500],
                    [-124, -34],
                    [-86, -336],
                    [152, -306],
                    [46, 377],
                    [76, 2],
                    [147, -937]
                ],
                [
                    [56293, 76715],
                    [80, -243],
                    [108, 43],
                    [213, -92],
                    [408, -31],
                    [138, 150],
                    [327, 138],
                    [202, -215],
                    [163, -62]
                ],
                [
                    [57932, 76403],
                    [-144, -245],
                    [-101, -422],
                    [89, -337]
                ],
                [
                    [57776, 75399],
                    [-239, 79],
                    [-283, -186]
                ],
                [
                    [57254, 75292],
                    [-3, -294],
                    [-252, -56],
                    [-196, 206],
                    [-222, -162],
                    [-206, 17]
                ],
                [
                    [56375, 75003],
                    [-20, 391],
                    [-139, 189]
                ],
                [
                    [56216, 75583],
                    [46, 84],
                    [-30, 70],
                    [47, 188],
                    [105, 185],
                    [-135, 255],
                    [-24, 216],
                    [68, 134]
                ],
                [
                    [28462, 64617],
                    [-68, -29],
                    [-70, 340],
                    [-104, 171],
                    [60, 375],
                    [84, -23],
                    [97, -491],
                    [1, -343]
                ],
                [
                    [28383, 66284],
                    [-303, -95],
                    [-19, 219],
                    [130, 47],
                    [184, -18],
                    [8, -153]
                ],
                [
                    [28611, 66290],
                    [-48, -420],
                    [-51, 75],
                    [4, 309],
                    [-124, 234],
                    [-1, 67],
                    [220, -265]
                ],
                [
                    [55279, 77084],
                    [100, 2],
                    [-69, -260],
                    [134, -227],
                    [-41, -278],
                    [-65, -27]
                ],
                [
                    [55338, 76294],
                    [-52, -53],
                    [-90, -138],
                    [-41, -325]
                ],
                [
                    [55155, 75778],
                    [-246, 224],
                    [-105, 247],
                    [-106, 130],
                    [-127, 221],
                    [-61, 183],
                    [-136, 277],
                    [59, 245],
                    [99, -136],
                    [60, 123],
                    [130, 13],
                    [239, -98],
                    [192, 8],
                    [126, -131]
                ],
                [
                    [56523, 82432],
                    [268, -4],
                    [302, 223],
                    [64, 333],
                    [228, 190],
                    [-26, 264]
                ],
                [
                    [57359, 83438],
                    [169, 100],
                    [298, 228]
                ],
                [
                    [57826, 83766],
                    [293, -149],
                    [39, -146],
                    [146, 70],
                    [272, -141],
                    [27, -277],
                    [-60, -159],
                    [174, -387],
                    [113, -108],
                    [-16, -107],
                    [187, -104],
                    [80, -157],
                    [-108, -129],
                    [-224, 20],
                    [-54, -55],
                    [66, -196],
                    [68, -379]
                ],
                [
                    [58829, 81362],
                    [-239, -35],
                    [-85, -129],
                    [-18, -298],
                    [-111, 57],
                    [-250, -28],
                    [-73, 138],
                    [-104, -103],
                    [-105, 86],
                    [-218, 12],
                    [-310, 141],
                    [-281, 47],
                    [-215, -14],
                    [-152, -160],
                    [-133, -23]
                ],
                [
                    [56535, 81053],
                    [-6, 263],
                    [-85, 274],
                    [166, 121],
                    [2, 235],
                    [-77, 225],
                    [-12, 261]
                ],
                [
                    [25238, 61101],
                    [-2, 87],
                    [33, 27],
                    [51, -70],
                    [99, 357],
                    [53, 8]
                ],
                [
                    [25472, 61510],
                    [1, -87],
                    [53, -3],
                    [-5, -160],
                    [-45, -256],
                    [24, -91],
                    [-29, -212],
                    [18, -56],
                    [-32, -299],
                    [-55, -156],
                    [-50, -19],
                    [-55, -205]
                ],
                [
                    [25297, 59966],
                    [-83, 0],
                    [22, 667],
                    [2, 468]
                ],
                [
                    [31359, 37147],
                    [-200, -81],
                    [-109, 814],
                    [-150, 663],
                    [88, 572],
                    [-146, 250],
                    [-37, 426],
                    [-136, 402]
                ],
                [
                    [30669, 40193],
                    [175, 638],
                    [-119, 496],
                    [63, 199],
                    [-49, 219],
                    [108, 295],
                    [6, 503],
                    [13, 415],
                    [60, 200],
                    [-240, 951]
                ],
                [
                    [30686, 44109],
                    [206, -50],
                    [143, 13],
                    [62, 179],
                    [243, 239],
                    [147, 222],
                    [363, 100],
                    [-29, -443],
                    [34, -227],
                    [-23, -396],
                    [302, -529],
                    [311, -98],
                    [109, -220],
                    [188, -117],
                    [115, -172],
                    [175, 6],
                    [161, -175],
                    [12, -342],
                    [55, -172],
                    [3, -255],
                    [-81, -10],
                    [107, -688],
                    [533, -24],
                    [-41, -342],
                    [30, -233],
                    [151, -166],
                    [66, -367],
                    [-49, -465],
                    [-77, -259],
                    [27, -337],
                    [-87, -122]
                ],
                [
                    [33842, 38659],
                    [-4, 182],
                    [-259, 302],
                    [-258, 9],
                    [-484, -172],
                    [-133, -520],
                    [-7, -318],
                    [-110, -708]
                ],
                [
                    [34826, 35372],
                    [54, 341],
                    [38, 350],
                    [0, 325],
                    [-100, 107],
                    [-104, -96],
                    [-103, 26],
                    [-33, 228],
                    [-26, 541],
                    [-52, 177],
                    [-187, 160],
                    [-114, -116],
                    [-293, 113],
                    [18, 802],
                    [-82, 329]
                ],
                [
                    [30686, 44109],
                    [-157, -102],
                    [-126, 68],
                    [18, 898],
                    [-228, -348],
                    [-245, 15],
                    [-105, 315],
                    [-184, 34],
                    [59, 254],
                    [-155, 359],
                    [-115, 532],
                    [73, 108],
                    [0, 250],
                    [168, 171],
                    [-28, 319],
                    [71, 206],
                    [20, 275],
                    [318, 402],
                    [227, 114],
                    [37, 89],
                    [251, -28]
                ],
                [
                    [30585, 48040],
                    [125, 1620],
                    [6, 256],
                    [-43, 339],
                    [-123, 215],
                    [1, 430],
                    [156, 97],
                    [56, -61],
                    [9, 226],
                    [-162, 61],
                    [-4, 370],
                    [541, -13],
                    [92, 203],
                    [77, -187],
                    [55, -349],
                    [52, 73]
                ],
                [
                    [31423, 51320],
                    [153, -312],
                    [216, 38],
                    [54, 181],
                    [206, 138],
                    [115, 97],
                    [32, 250],
                    [198, 168],
                    [-15, 124],
                    [-235, 51],
                    [-39, 372],
                    [12, 396],
                    [-125, 153],
                    [52, 55],
                    [206, -76],
                    [221, -148],
                    [80, 140],
                    [200, 92],
                    [310, 221],
                    [102, 225],
                    [-37, 167]
                ],
                [
                    [33129, 53652],
                    [145, 26],
                    [64, -136],
                    [-36, -259],
                    [96, -90],
                    [63, -274],
                    [-77, -209],
                    [-44, -502],
                    [71, -299],
                    [20, -274],
                    [171, -277],
                    [137, -29],
                    [30, 116],
                    [88, 25],
                    [126, 104],
                    [90, 157],
                    [154, -50],
                    [67, 21]
                ],
                [
                    [34294, 51702],
                    [151, -48],
                    [25, 120],
                    [-46, 118],
                    [28, 171],
                    [112, -53],
                    [131, 61],
                    [159, -125]
                ],
                [
                    [34854, 51946],
                    [121, -122],
                    [86, 160],
                    [62, -25],
                    [38, -166],
                    [133, 42],
                    [107, 224],
                    [85, 436],
                    [164, 540]
                ],
                [
                    [35650, 53035],
                    [95, 28],
                    [69, -327],
                    [155, -1033],
                    [149, -97],
                    [7, -408],
                    [-208, -487],
                    [86, -178],
                    [491, -92],
                    [10, -593],
                    [211, 388],
                    [349, -212],
                    [462, -361],
                    [135, -346],
                    [-45, -327],
                    [323, 182],
                    [540, -313],
                    [415, 23],
                    [411, -489],
                    [355, -662],
                    [214, -170],
                    [237, -24],
                    [101, -186],
                    [94, -752],
                    [46, -358],
                    [-110, -977],
                    [-142, -385],
                    [-391, -822],
                    [-177, -668],
                    [-206, -513],
                    [-69, -11],
                    [-78, -435],
                    [20, -1107],
                    [-77, -910],
                    [-30, -390],
                    [-88, -233],
                    [-49, -790],
                    [-282, -771],
                    [-47, -610],
                    [-225, -256],
                    [-65, -355],
                    [-302, 2],
                    [-437, -227],
                    [-195, -263],
                    [-311, -173],
                    [-327, -470],
                    [-235, -586],
                    [-41, -441],
                    [46, -326],
                    [-51, -597],
                    [-63, -289],
                    [-195, -325],
                    [-308, -1040],
                    [-244, -468],
                    [-189, -277],
                    [-127, -562],
                    [-183, -337]
                ],
                [
                    [35174, 30629],
                    [-77, 334],
                    [122, 280],
                    [-160, 402],
                    [-218, 327],
                    [-286, 379],
                    [-103, -18],
                    [-279, 457],
                    [-180, -63]
                ],
                [
                    [81723, 53254],
                    [110, 221],
                    [236, 323]
                ],
                [
                    [82069, 53798],
                    [-13, -291],
                    [-16, -377],
                    [-133, 19],
                    [-58, -202],
                    [-126, 307]
                ],
                [
                    [75471, 66988],
                    [113, -189],
                    [-20, -363],
                    [-227, -17],
                    [-234, 39],
                    [-175, -92],
                    [-252, 224],
                    [-6, 119]
                ],
                [
                    [74670, 66709],
                    [184, 439],
                    [150, 150],
                    [198, -137],
                    [147, -14],
                    [122, -159]
                ],
                [
                    [58175, 37528],
                    [-393, -435],
                    [-249, -442],
                    [-93, -393],
                    [-83, -222],
                    [-152, -47],
                    [-48, -283],
                    [-28, -184],
                    [-178, -138],
                    [-226, 29],
                    [-133, 166],
                    [-117, 71],
                    [-135, -137],
                    [-68, -283],
                    [-132, -177],
                    [-139, -264],
                    [-199, -60],
                    [-62, 207],
                    [26, 360],
                    [-165, 562],
                    [-75, 88]
                ],
                [
                    [55526, 35946],
                    [0, 1725],
                    [274, 20],
                    [8, 2105],
                    [207, 19],
                    [428, 207],
                    [106, -243],
                    [177, 231],
                    [85, 2],
                    [156, 133]
                ],
                [
                    [56967, 40145],
                    [50, -44]
                ],
                [
                    [57017, 40101],
                    [107, -473],
                    [56, -105],
                    [87, -342],
                    [315, -649],
                    [119, -64],
                    [0, -208],
                    [82, -375],
                    [215, -90],
                    [177, -267]
                ],
                [
                    [54244, 54965],
                    [229, 44],
                    [52, 152],
                    [46, -11],
                    [69, -134],
                    [350, 226],
                    [118, 230],
                    [145, 207],
                    [-28, 208],
                    [78, 54],
                    [269, -36],
                    [261, 273],
                    [201, 645],
                    [141, 239],
                    [176, 101]
                ],
                [
                    [56351, 57163],
                    [31, -253],
                    [160, -369],
                    [1, -241],
                    [-45, -246],
                    [18, -184],
                    [96, -170]
                ],
                [
                    [56612, 55700],
                    [212, -258]
                ],
                [
                    [56824, 55442],
                    [152, -239],
                    [2, -192],
                    [187, -308],
                    [116, -255],
                    [70, -355],
                    [208, -234],
                    [44, -187]
                ],
                [
                    [57603, 53672],
                    [-91, -63],
                    [-178, 14],
                    [-209, 62],
                    [-104, -51],
                    [-41, -143],
                    [-90, -18],
                    [-110, 125],
                    [-309, -295],
                    [-127, 60],
                    [-38, -46],
                    [-83, -357],
                    [-207, 115],
                    [-203, 59],
                    [-177, 218],
                    [-229, 200],
                    [-149, -190],
                    [-108, -300],
                    [-25, -412]
                ],
                [
                    [55125, 52650],
                    [-178, 33],
                    [-188, 99],
                    [-166, -313],
                    [-146, -550]
                ],
                [
                    [54447, 51919],
                    [-29, 172],
                    [-12, 269],
                    [-127, 190],
                    [-103, 305],
                    [-23, 212],
                    [-132, 309],
                    [23, 176],
                    [-28, 249],
                    [21, 458],
                    [67, 107],
                    [140, 599]
                ],
                [
                    [32315, 78082],
                    [202, -79],
                    [257, 16],
                    [-137, -242],
                    [-102, -38],
                    [-353, 250],
                    [-69, 198],
                    [105, 183],
                    [97, -288]
                ],
                [
                    [32831, 79592],
                    [-135, -11],
                    [-360, 186],
                    [-258, 279],
                    [96, 49],
                    [365, -148],
                    [284, -247],
                    [8, -108]
                ],
                [
                    [15692, 79240],
                    [-140, -82],
                    [-456, 269],
                    [-84, 209],
                    [-248, 207],
                    [-50, 168],
                    [-286, 107],
                    [-107, 321],
                    [24, 137],
                    [291, -129],
                    [171, -89],
                    [261, -63],
                    [94, -204],
                    [138, -280],
                    [277, -244],
                    [115, -327]
                ],
                [
                    [34407, 80527],
                    [-184, -517],
                    [181, 199],
                    [187, -126],
                    [-98, -206],
                    [247, -162],
                    [128, 144],
                    [277, -182],
                    [-86, -433],
                    [194, 101],
                    [36, -313],
                    [86, -367],
                    [-117, -520],
                    [-125, -22],
                    [-183, 111],
                    [60, 484],
                    [-77, 75],
                    [-322, -513],
                    [-166, 21],
                    [196, 277],
                    [-267, 144],
                    [-298, -35],
                    [-539, 18],
                    [-43, 175],
                    [173, 208],
                    [-121, 160],
                    [234, 356],
                    [287, 941],
                    [172, 336],
                    [241, 204],
                    [129, -26],
                    [-54, -160],
                    [-148, -372]
                ],
                [
                    [13005, 82584],
                    [131, -76],
                    [267, 47],
                    [-84, -671],
                    [242, -475],
                    [-111, 1],
                    [-167, 270],
                    [-103, 272],
                    [-140, 184],
                    [-51, 260],
                    [16, 188]
                ],
                [
                    [27981, 87304],
                    [-108, -310],
                    [-123, 50],
                    [-73, 176],
                    [13, 41],
                    [107, 177],
                    [114, -13],
                    [70, -121]
                ],
                [
                    [27250, 87631],
                    [-325, -326],
                    [-196, 13],
                    [-61, 160],
                    [207, 273],
                    [381, -6],
                    [-6, -114]
                ],
                [
                    [26344, 89371],
                    [51, -259],
                    [143, 91],
                    [161, -155],
                    [304, -203],
                    [318, -184],
                    [25, -281],
                    [204, 46],
                    [199, -196],
                    [-247, -186],
                    [-432, 142],
                    [-156, 266],
                    [-275, -314],
                    [-396, -306],
                    [-95, 346],
                    [-377, -57],
                    [242, 292],
                    [35, 465],
                    [95, 542],
                    [201, -49]
                ],
                [
                    [28926, 90253],
                    [-312, -30],
                    [-69, 289],
                    [118, 331],
                    [255, 82],
                    [217, -163],
                    [3, -253],
                    [-32, -82],
                    [-180, -174]
                ],
                [
                    [23431, 91410],
                    [-173, -207],
                    [-374, 179],
                    [-226, -65],
                    [-380, 266],
                    [245, 183],
                    [194, 256],
                    [295, -168],
                    [166, -106],
                    [84, -112],
                    [169, -226]
                ],
                [
                    [31350, 77248],
                    [-181, 334],
                    [0, 805],
                    [-123, 171],
                    [-187, -100],
                    [-92, 155],
                    [-212, -446],
                    [-84, -460],
                    [-99, -269],
                    [-118, -91],
                    [-89, -30],
                    [-28, -146],
                    [-512, 0],
                    [-422, -4],
                    [-125, -109],
                    [-294, -425],
                    [-34, -46],
                    [-89, -231],
                    [-255, 1],
                    [-273, -3],
                    [-125, -93],
                    [44, -116],
                    [25, -181],
                    [-5, -60],
                    [-363, -293],
                    [-286, -93],
                    [-323, -316],
                    [-70, 0],
                    [-94, 93],
                    [-31, 85],
                    [6, 61],
                    [61, 207],
                    [131, 325],
                    [81, 349],
                    [-56, 514],
                    [-59, 536],
                    [-290, 277],
                    [35, 105],
                    [-41, 73],
                    [-76, 0],
                    [-56, 93],
                    [-14, 140],
                    [-54, -61],
                    [-75, 18],
                    [17, 59],
                    [-65, 58],
                    [-27, 155],
                    [-216, 189],
                    [-224, 197],
                    [-272, 229],
                    [-261, 214],
                    [-248, -167],
                    [-91, -6],
                    [-342, 154],
                    [-225, -77],
                    [-269, 183],
                    [-284, 94],
                    [-194, 36],
                    [-86, 100],
                    [-49, 325],
                    [-94, -3],
                    [-1, -227],
                    [-575, 0],
                    [-951, 0],
                    [-944, 0],
                    [-833, 0],
                    [-834, 0],
                    [-819, 0],
                    [-847, 0],
                    [-273, 0],
                    [-825, 0],
                    [-788, 0]
                ],
                [
                    [15878, 79530],
                    [-38, 1],
                    [-537, 581],
                    [-199, 255],
                    [-503, 244],
                    [-155, 523],
                    [40, 363],
                    [-356, 252],
                    [-48, 476],
                    [-336, 429],
                    [-6, 304]
                ],
                [
                    [13740, 82958],
                    [154, 285],
                    [-7, 373],
                    [-473, 376],
                    [-284, 674],
                    [-173, 424],
                    [-255, 266],
                    [-187, 242],
                    [-147, 306],
                    [-279, -192],
                    [-270, -330],
                    [-247, 388],
                    [-194, 259],
                    [-271, 164],
                    [-273, 17],
                    [1, 3364],
                    [2, 2193]
                ],
                [
                    [10837, 91767],
                    [518, -142],
                    [438, -285],
                    [289, -54],
                    [244, 247],
                    [336, 184],
                    [413, -72],
                    [416, 259],
                    [455, 148],
                    [191, -245],
                    [207, 138],
                    [62, 278],
                    [192, -63],
                    [470, -530],
                    [369, 401],
                    [38, -449],
                    [341, 97],
                    [105, 173],
                    [337, -34],
                    [424, -248],
                    [650, -217],
                    [383, -100],
                    [272, 38],
                    [374, -300],
                    [-390, -293],
                    [502, -127],
                    [750, 70],
                    [236, 103],
                    [296, -354],
                    [302, 299],
                    [-283, 251],
                    [179, 202],
                    [338, 27],
                    [223, 59],
                    [224, -141],
                    [279, -321],
                    [310, 47],
                    [491, -266],
                    [431, 94],
                    [405, -14],
                    [-32, 367],
                    [247, 103],
                    [431, -200],
                    [-2, -559],
                    [177, 471],
                    [223, -16],
                    [126, 594],
                    [-298, 364],
                    [-324, 239],
                    [22, 653],
                    [329, 429],
                    [366, -95],
                    [281, -261],
                    [378, -666],
                    [-247, -290],
                    [517, -120],
                    [-1, -604],
                    [371, 463],
                    [332, -380],
                    [-83, -438],
                    [269, -399],
                    [290, 427],
                    [202, 510],
                    [16, 649],
                    [394, -46],
                    [411, -87],
                    [373, -293],
                    [17, -293],
                    [-207, -315],
                    [196, -316],
                    [-36, -288],
                    [-544, -413],
                    [-386, -91],
                    [-287, 178],
                    [-83, -297],
                    [-268, -498],
                    [-81, -259],
                    [-322, -399],
                    [-397, -39],
                    [-220, -250],
                    [-18, -384],
                    [-323, -74],
                    [-340, -479],
                    [-301, -665],
                    [-108, -466],
                    [-16, -686],
                    [409, -99],
                    [125, -553],
                    [130, -448],
                    [388, 117],
                    [517, -256],
                    [277, -225],
                    [199, -279],
                    [348, -163],
                    [294, -248],
                    [459, -34],
                    [302, -58],
                    [-45, -511],
                    [86, -594],
                    [201, -661],
                    [414, -561],
                    [214, 192],
                    [150, 607],
                    [-145, 934],
                    [-196, 311],
                    [445, 276],
                    [314, 415],
                    [154, 411],
                    [-23, 395],
                    [-188, 502],
                    [-338, 445],
                    [328, 619],
                    [-121, 535],
                    [-93, 922],
                    [194, 137],
                    [476, -161],
                    [286, -57],
                    [230, 155],
                    [258, -200],
                    [342, -343],
                    [85, -229],
                    [495, -45],
                    [-8, -496],
                    [92, -747],
                    [254, -92],
                    [201, -348],
                    [402, 328],
                    [266, 652],
                    [184, 274],
                    [216, -527],
                    [362, -754],
                    [307, -709],
                    [-112, -371],
                    [370, -333],
                    [250, -338],
                    [442, -152],
                    [179, -189],
                    [110, -500],
                    [216, -78],
                    [112, -223],
                    [20, -664],
                    [-202, -222],
                    [-199, -207],
                    [-458, -210],
                    [-349, -486],
                    [-470, -96],
                    [-594, 125],
                    [-417, 4],
                    [-287, -41],
                    [-233, -424],
                    [-354, -262],
                    [-401, -782],
                    [-320, -545],
                    [236, 97],
                    [446, 776],
                    [583, 493],
                    [415, 58],
                    [246, -289],
                    [-262, -397],
                    [88, -637],
                    [91, -446],
                    [361, -295],
                    [459, 86],
                    [278, 664],
                    [19, -429],
                    [180, -214],
                    [-344, -387],
                    [-615, -351],
                    [-276, -239],
                    [-310, -426],
                    [-211, 44],
                    [-11, 500],
                    [483, 488],
                    [-445, -19],
                    [-309, -72]
                ],
                [
                    [18287, 93781],
                    [-139, -277],
                    [618, 179],
                    [386, -298],
                    [314, 302],
                    [254, -194],
                    [227, -580],
                    [140, 244],
                    [-197, 606],
                    [244, 86],
                    [276, -94],
                    [311, -239],
                    [175, -575],
                    [86, -417],
                    [466, -293],
                    [502, -279],
                    [-31, -260],
                    [-456, -48],
                    [178, -227],
                    [-94, -217],
                    [-503, 93],
                    [-478, 160],
                    [-322, -36],
                    [-522, -201],
                    [-704, -88],
                    [-494, -56],
                    [-151, 279],
                    [-379, 161],
                    [-246, -66],
                    [-343, 468],
                    [185, 62],
                    [429, 101],
                    [392, -26],
                    [362, 103],
                    [-537, 138],
                    [-594, -47],
                    [-394, 12],
                    [-146, 217],
                    [644, 237],
                    [-428, -9],
                    [-485, 156],
                    [233, 443],
                    [193, 235],
                    [744, 359],
                    [284, -114]
                ],
                [
                    [20972, 93958],
                    [-244, -390],
                    [-434, 413],
                    [95, 83],
                    [372, 24],
                    [211, -130]
                ],
                [
                    [28794, 93770],
                    [25, -163],
                    [-296, 17],
                    [-299, 13],
                    [-304, -80],
                    [-80, 36],
                    [-306, 313],
                    [12, 213],
                    [133, 39],
                    [636, -63],
                    [479, -325]
                ],
                [
                    [25955, 93803],
                    [219, -369],
                    [256, 477],
                    [704, 242],
                    [477, -611],
                    [-42, -387],
                    [550, 172],
                    [263, 235],
                    [616, -299],
                    [383, -282],
                    [36, -258],
                    [515, 134],
                    [290, -376],
                    [670, -234],
                    [242, -238],
                    [263, -553],
                    [-510, -275],
                    [654, -386],
                    [441, -130],
                    [400, -543],
                    [437, -39],
                    [-87, -414],
                    [-487, -687],
                    [-342, 253],
                    [-437, 568],
                    [-359, -74],
                    [-35, -338],
                    [292, -344],
                    [377, -272],
                    [114, -157],
                    [181, -584],
                    [-96, -425],
                    [-350, 160],
                    [-697, 473],
                    [393, -509],
                    [289, -357],
                    [45, -206],
                    [-753, 236],
                    [-596, 343],
                    [-337, 287],
                    [97, 167],
                    [-414, 304],
                    [-405, 286],
                    [5, -171],
                    [-803, -94],
                    [-235, 203],
                    [183, 435],
                    [522, 10],
                    [571, 76],
                    [-92, 211],
                    [96, 294],
                    [360, 576],
                    [-77, 261],
                    [-107, 203],
                    [-425, 286],
                    [-563, 201],
                    [178, 150],
                    [-294, 367],
                    [-245, 34],
                    [-219, 201],
                    [-149, -175],
                    [-503, -76],
                    [-1011, 132],
                    [-588, 174],
                    [-450, 89],
                    [-231, 207],
                    [290, 270],
                    [-394, 2],
                    [-88, 599],
                    [213, 528],
                    [286, 241],
                    [717, 158],
                    [-204, -382]
                ],
                [
                    [22123, 94208],
                    [331, -124],
                    [496, 75],
                    [72, -172],
                    [-259, -283],
                    [420, -254],
                    [-50, -532],
                    [-455, -229],
                    [-268, 50],
                    [-192, 225],
                    [-690, 456],
                    [5, 189],
                    [567, -73],
                    [-306, 386],
                    [329, 286]
                ],
                [
                    [24112, 93575],
                    [-298, -442],
                    [-317, 22],
                    [-173, 519],
                    [4, 294],
                    [145, 251],
                    [276, 161],
                    [579, -20],
                    [530, -144],
                    [-415, -526],
                    [-331, -115]
                ],
                [
                    [16539, 92755],
                    [-731, -285],
                    [-147, 259],
                    [-641, 312],
                    [119, 250],
                    [192, 432],
                    [241, 388],
                    [-272, 362],
                    [939, 93],
                    [397, -123],
                    [709, -33],
                    [270, -171],
                    [298, -249],
                    [-349, -149],
                    [-681, -415],
                    [-344, -414],
                    [0, -257]
                ],
                [
                    [23996, 94879],
                    [-151, -229],
                    [-403, 44],
                    [-337, 155],
                    [148, 266],
                    [399, 159],
                    [243, -208],
                    [101, -187]
                ],
                [
                    [22639, 95907],
                    [212, -273],
                    [9, -303],
                    [-127, -440],
                    [-458, -60],
                    [-298, 94],
                    [5, 345],
                    [-455, -46],
                    [-18, 457],
                    [299, -18],
                    [419, 201],
                    [390, -34],
                    [22, 77]
                ],
                [
                    [19941, 95601],
                    [109, -210],
                    [247, 99],
                    [291, -26],
                    [49, -289],
                    [-169, -281],
                    [-940, -91],
                    [-701, -256],
                    [-423, -14],
                    [-35, 193],
                    [577, 261],
                    [-1255, -70],
                    [-389, 106],
                    [379, 577],
                    [262, 165],
                    [782, -199],
                    [493, -350],
                    [485, -45],
                    [-397, 565],
                    [255, 215],
                    [286, -68],
                    [94, -282]
                ],
                [
                    [23699, 96131],
                    [308, -190],
                    [547, 1],
                    [240, -194],
                    [-64, -222],
                    [319, -134],
                    [177, -140],
                    [374, -26],
                    [406, -50],
                    [441, 128],
                    [566, 51],
                    [451, -42],
                    [298, -223],
                    [62, -244],
                    [-174, -157],
                    [-414, -127],
                    [-355, 72],
                    [-797, -91],
                    [-570, -11],
                    [-449, 73],
                    [-738, 190],
                    [-96, 325],
                    [-34, 293],
                    [-279, 258],
                    [-574, 72],
                    [-322, 183],
                    [104, 242],
                    [573, -37]
                ],
                [
                    [17722, 96454],
                    [-38, -454],
                    [-214, -205],
                    [-259, -29],
                    [-517, -252],
                    [-444, -91],
                    [-377, 128],
                    [472, 442],
                    [570, 383],
                    [426, -9],
                    [381, 87]
                ],
                [
                    [23933, 96380],
                    [-126, -17],
                    [-521, 38],
                    [-74, 165],
                    [559, -9],
                    [195, -109],
                    [-33, -68]
                ],
                [
                    [19392, 96485],
                    [-518, -170],
                    [-411, 191],
                    [224, 188],
                    [406, 60],
                    [392, -92],
                    [-93, -177]
                ],
                [
                    [19538, 97019],
                    [-339, -115],
                    [-461, 1],
                    [5, 84],
                    [285, 177],
                    [149, -27],
                    [361, -120]
                ],
                [
                    [23380, 96697],
                    [-411, -122],
                    [-226, 138],
                    [-119, 221],
                    [-22, 245],
                    [360, -24],
                    [162, -39],
                    [332, -205],
                    [-76, -214]
                ],
                [
                    [22205, 96856],
                    [108, -247],
                    [-453, 66],
                    [-457, 192],
                    [-619, 21],
                    [268, 176],
                    [-335, 142],
                    [-21, 227],
                    [546, -81],
                    [751, -215],
                    [212, -281]
                ],
                [
                    [25828, 97644],
                    [334, -190],
                    [-381, -176],
                    [-513, -445],
                    [-492, -42],
                    [-575, 76],
                    [-299, 240],
                    [4, 215],
                    [220, 157],
                    [-508, -4],
                    [-306, 196],
                    [-176, 268],
                    [193, 262],
                    [192, 180],
                    [285, 42],
                    [-122, 135],
                    [646, 30],
                    [355, -315],
                    [468, -127],
                    [455, -112],
                    [220, -390]
                ],
                [
                    [30972, 99681],
                    [742, -47],
                    [597, -75],
                    [508, -161],
                    [-12, -157],
                    [-678, -257],
                    [-672, -119],
                    [-251, -133],
                    [605, 3],
                    [-656, -358],
                    [-452, -167],
                    [-476, -483],
                    [-573, -98],
                    [-177, -120],
                    [-841, -64],
                    [383, -74],
                    [-192, -105],
                    [230, -292],
                    [-264, -202],
                    [-429, -167],
                    [-132, -232],
                    [-388, -176],
                    [39, -134],
                    [475, 23],
                    [6, -144],
                    [-742, -355],
                    [-726, 163],
                    [-816, -91],
                    [-414, 71],
                    [-525, 31],
                    [-35, 284],
                    [514, 133],
                    [-137, 427],
                    [170, 41],
                    [742, -255],
                    [-379, 379],
                    [-450, 113],
                    [225, 229],
                    [492, 141],
                    [79, 206],
                    [-392, 231],
                    [-118, 304],
                    [759, -26],
                    [220, -64],
                    [433, 216],
                    [-625, 68],
                    [-972, -38],
                    [-491, 201],
                    [-232, 239],
                    [-324, 173],
                    [-61, 202],
                    [413, 112],
                    [324, 19],
                    [545, 96],
                    [409, 220],
                    [344, -30],
                    [300, -166],
                    [211, 319],
                    [367, 95],
                    [498, 65],
                    [849, 24],
                    [148, -63],
                    [802, 100],
                    [601, -38],
                    [602, -37]
                ],
                [
                    [52900, 78285],
                    [-22, -242],
                    [-122, -100],
                    [-206, 75],
                    [-60, -239],
                    [-132, -19],
                    [-48, 94],
                    [-156, -200],
                    [-134, -28],
                    [-120, 126]
                ],
                [
                    [51900, 77752],
                    [-95, 259],
                    [-133, -92],
                    [5, 267],
                    [203, 332],
                    [-9, 150],
                    [126, -54],
                    [77, 101]
                ],
                [
                    [52074, 78715],
                    [236, -4],
                    [57, 128],
                    [298, -181]
                ],
                [
                    [31400, 18145],
                    [-92, -239],
                    [-238, -183],
                    [-137, 19],
                    [-164, 48],
                    [-202, 177],
                    [-291, 86],
                    [-350, 330],
                    [-283, 317],
                    [-383, 662],
                    [229, -124],
                    [390, -395],
                    [369, -212],
                    [143, 271],
                    [90, 405],
                    [256, 244],
                    [198, -70]
                ],
                [
                    [30952, 19680],
                    [-247, 4],
                    [-134, -145],
                    [-250, -213],
                    [-45, -552],
                    [-118, -14],
                    [-313, 192],
                    [-318, 412],
                    [-346, 338],
                    [-87, 374],
                    [79, 346],
                    [-140, 393],
                    [-36, 1007],
                    [119, 568],
                    [293, 457],
                    [-422, 172],
                    [265, 522],
                    [94, 982],
                    [309, -208],
                    [145, 1224],
                    [-186, 157],
                    [-87, -738],
                    [-175, 83],
                    [87, 845],
                    [95, 1095],
                    [127, 404],
                    [-80, 576],
                    [-22, 666],
                    [117, 19],
                    [170, 954],
                    [192, 945],
                    [118, 881],
                    [-64, 885],
                    [83, 487],
                    [-34, 730],
                    [163, 721],
                    [50, 1143],
                    [89, 1227],
                    [87, 1321],
                    [-20, 967],
                    [-58, 832]
                ],
                [
                    [30452, 39739],
                    [143, 151],
                    [74, 303]
                ],
                [
                    [80649, 61615],
                    [-240, -284],
                    [-228, 183],
                    [-8, 509],
                    [137, 267],
                    [304, 166],
                    [159, -14],
                    [62, -226],
                    [-122, -260],
                    [-64, -341]
                ],
                [
                    [86288, 75628],
                    [-179, 348],
                    [-111, -331],
                    [-429, -254],
                    [44, -312],
                    [-241, 22],
                    [-131, 185],
                    [-191, -419],
                    [-306, -318],
                    [-227, -379]
                ],
                [
                    [84517, 74170],
                    [-388, -171],
                    [-204, -277],
                    [-300, -161],
                    [148, 274],
                    [-58, 230],
                    [220, 397],
                    [-147, 310],
                    [-242, -209],
                    [-314, -411],
                    [-171, -381],
                    [-272, -29],
                    [-142, -275],
                    [147, -400],
                    [227, -97],
                    [9, -265],
                    [220, -173],
                    [311, 422],
                    [247, -230],
                    [179, -15],
                    [45, -310],
                    [-393, -165],
                    [-130, -319],
                    [-270, -296],
                    [-142, -414],
                    [299, -325],
                    [109, -581],
                    [169, -541],
                    [189, -454],
                    [-5, -439],
                    [-174, -161],
                    [66, -315],
                    [164, -184],
                    [-43, -481],
                    [-71, -468],
                    [-155, -53],
                    [-203, -640],
                    [-225, -775],
                    [-258, -705],
                    [-382, -545],
                    [-386, -498],
                    [-313, -68],
                    [-170, -262],
                    [-96, 192],
                    [-157, -294],
                    [-388, -296],
                    [-294, -90],
                    [-95, -624],
                    [-154, -35],
                    [-73, 429],
                    [66, 228],
                    [-373, 189],
                    [-131, -96]
                ],
                [
                    [80013, 63313],
                    [-280, 154],
                    [-132, 240],
                    [44, 340],
                    [-254, 108],
                    [-134, 222],
                    [-236, -315],
                    [-271, -68],
                    [-221, 3],
                    [-149, -145]
                ],
                [
                    [78380, 63852],
                    [-144, -86],
                    [42, -676],
                    [-148, 16],
                    [-25, 139]
                ],
                [
                    [78105, 63245],
                    [-9, 244],
                    [-203, -172],
                    [-121, 109],
                    [-206, 222],
                    [81, 490],
                    [-176, 115],
                    [-66, 544],
                    [-293, -98],
                    [33, 701],
                    [263, 493],
                    [11, 487],
                    [-8, 452],
                    [-121, 141],
                    [-93, 348],
                    [-162, -44]
                ],
                [
                    [77035, 67277],
                    [-300, 89],
                    [94, 248],
                    [-130, 367],
                    [-198, -249],
                    [-233, 145],
                    [-321, -376],
                    [-252, -439],
                    [-224, -74]
                ],
                [
                    [74670, 66709],
                    [-23, 465],
                    [-170, -124]
                ],
                [
                    [74477, 67050],
                    [-324, 57],
                    [-314, 136],
                    [-225, 259],
                    [-216, 117],
                    [-93, 284],
                    [-157, 84],
                    [-280, 385],
                    [-223, 182],
                    [-115, -141]
                ],
                [
                    [72530, 68413],
                    [-386, 413],
                    [-273, 374],
                    [-78, 651],
                    [200, -79],
                    [9, 301],
                    [-111, 303],
                    [28, 482],
                    [-298, 692]
                ],
                [
                    [71621, 71550],
                    [-457, 239],
                    [-82, 454],
                    [-205, 276]
                ],
                [
                    [70827, 72688],
                    [-42, 337],
                    [10, 230],
                    [-169, 134],
                    [-91, -59],
                    [-70, 546]
                ],
                [
                    [70465, 73876],
                    [79, 136],
                    [-39, 138],
                    [266, 279],
                    [192, 116],
                    [294, -80],
                    [105, 378],
                    [356, 70],
                    [99, 234],
                    [438, 320],
                    [39, 134]
                ],
                [
                    [72294, 75601],
                    [-22, 337],
                    [190, 154],
                    [-250, 1026],
                    [550, 236],
                    [143, 131],
                    [200, 1058],
                    [551, -194],
                    [155, 267],
                    [13, 592],
                    [230, 56],
                    [212, 393]
                ],
                [
                    [74266, 79657],
                    [109, 49]
                ],
                [
                    [74375, 79706],
                    [73, -413],
                    [233, -313],
                    [396, -222],
                    [192, -476],
                    [-107, -690],
                    [100, -256],
                    [330, -101],
                    [374, -83],
                    [336, -368],
                    [171, -66],
                    [127, -544],
                    [163, -351],
                    [306, 14],
                    [574, -133],
                    [369, 82],
                    [274, -88],
                    [411, -359],
                    [336, 1],
                    [123, -184],
                    [324, 318],
                    [448, 205],
                    [417, 22],
                    [324, 208],
                    [200, 316],
                    [194, 199],
                    [-45, 195],
                    [-89, 227],
                    [146, 381],
                    [156, -53],
                    [286, -120],
                    [277, 313],
                    [423, 229],
                    [204, 391],
                    [195, 168],
                    [404, 78],
                    [219, -66],
                    [30, 210],
                    [-251, 413],
                    [-223, 189],
                    [-214, -219],
                    [-274, 92],
                    [-157, -74],
                    [-72, 241],
                    [197, 590],
                    [135, 446]
                ],
                [
                    [82410, 80055],
                    [333, -223],
                    [392, 373],
                    [-3, 260],
                    [251, 627],
                    [155, 189],
                    [-4, 326],
                    [-152, 141],
                    [229, 294],
                    [345, 106],
                    [369, 16],
                    [415, -176],
                    [244, -217],
                    [172, -596],
                    [104, -254],
                    [97, -363],
                    [103, -579],
                    [483, -189],
                    [329, -420],
                    [112, -555],
                    [423, -1],
                    [240, 233],
                    [459, 175],
                    [-146, -532],
                    [-107, -216],
                    [-96, -647],
                    [-186, -575],
                    [-338, 104],
                    [-238, -208],
                    [73, -506],
                    [-40, -698],
                    [-142, -16],
                    [2, -300]
                ],
                [
                    [49206, 53531],
                    [-126, -7],
                    [-194, 116],
                    [-178, -7],
                    [-329, -103],
                    [-193, -170],
                    [-275, -217],
                    [-54, 15]
                ],
                [
                    [47857, 53158],
                    [22, 487],
                    [26, 74],
                    [-8, 233],
                    [-118, 247],
                    [-88, 40],
                    [-81, 162],
                    [60, 262],
                    [-28, 286],
                    [13, 172]
                ],
                [
                    [47655, 55121],
                    [44, 0],
                    [17, 258],
                    [-22, 114],
                    [27, 82],
                    [103, 71],
                    [-69, 473],
                    [-64, 245],
                    [23, 200],
                    [55, 46]
                ],
                [
                    [47769, 56610],
                    [36, 54],
                    [77, -89],
                    [215, -5],
                    [51, 172],
                    [48, -11],
                    [80, 67],
                    [43, -253],
                    [65, 74],
                    [114, 88]
                ],
                [
                    [49214, 56277],
                    [74, -841],
                    [-117, -496],
                    [-73, -667],
                    [121, -509],
                    [-13, -233]
                ],
                [
                    [53632, 51919],
                    [-35, 32],
                    [-164, -76],
                    [-169, 79],
                    [-132, -38]
                ],
                [
                    [53132, 51916],
                    [-452, 13]
                ],
                [
                    [52680, 51929],
                    [40, 466],
                    [-108, 391],
                    [-127, 100],
                    [-56, 265],
                    [-72, 85],
                    [4, 163]
                ],
                [
                    [52361, 53399],
                    [71, 418],
                    [132, 570],
                    [81, 6],
                    [165, 345],
                    [105, 10],
                    [156, -243],
                    [191, 199],
                    [26, 246],
                    [63, 238],
                    [43, 299],
                    [148, 243],
                    [56, 414],
                    [59, 132],
                    [39, 307],
                    [74, 377],
                    [234, 457],
                    [14, 196],
                    [31, 107],
                    [-110, 235]
                ],
                [
                    [53939, 57955],
                    [9, 188],
                    [78, 34]
                ],
                [
                    [54026, 58177],
                    [111, -378],
                    [18, -392],
                    [-10, -393],
                    [151, -537],
                    [-155, 6],
                    [-78, -42],
                    [-127, 60],
                    [-60, -279],
                    [164, -345],
                    [121, -100],
                    [39, -245],
                    [87, -407],
                    [-43, -160]
                ],
                [
                    [54447, 51919],
                    [-20, -319],
                    [-220, 140],
                    [-225, 156],
                    [-350, 23]
                ],
                [
                    [58564, 52653],
                    [-16, -691],
                    [111, -80],
                    [-89, -210],
                    [-107, -157],
                    [-106, -308],
                    [-59, -274],
                    [-15, -475],
                    [-65, -225],
                    [-2, -446]
                ],
                [
                    [58216, 49787],
                    [-80, -165],
                    [-10, -351],
                    [-38, -46],
                    [-26, -323]
                ],
                [
                    [58149, 47921],
                    [50, -544],
                    [-27, -307]
                ],
                [
                    [58172, 47070],
                    [55, -343],
                    [161, -330]
                ],
                [
                    [58388, 46397],
                    [150, -745]
                ],
                [
                    [58538, 45652],
                    [-109, 60],
                    [-373, -99],
                    [-75, -71],
                    [-79, -377],
                    [62, -261],
                    [-49, -699],
                    [-34, -593],
                    [75, -105],
                    [194, -230],
                    [76, 107],
                    [23, -637],
                    [-212, 5],
                    [-114, 325],
                    [-103, 252],
                    [-213, 82],
                    [-62, 310],
                    [-170, -187],
                    [-222, 83],
                    [-93, 268],
                    [-176, 55],
                    [-131, -15],
                    [-15, 184],
                    [-96, 15]
                ],
                [
                    [53422, 46976],
                    [-39, 183]
                ],
                [
                    [53609, 47755],
                    [73, -60],
                    [95, 226],
                    [152, -6],
                    [17, -167],
                    [104, -105],
                    [164, 370],
                    [161, 289],
                    [71, 189],
                    [-10, 486],
                    [121, 574],
                    [127, 304],
                    [183, 285],
                    [32, 189],
                    [7, 216],
                    [45, 205],
                    [-14, 335],
                    [34, 524],
                    [55, 368],
                    [83, 316],
                    [16, 357]
                ],
                [
                    [57603, 53672],
                    [169, -488],
                    [124, -71],
                    [75, 99],
                    [128, -39],
                    [155, 125],
                    [66, -252],
                    [244, -393]
                ],
                [
                    [53309, 47603],
                    [-228, 626]
                ],
                [
                    [53081, 48229],
                    [212, 326],
                    [-105, 391],
                    [95, 148],
                    [187, 73],
                    [23, 261],
                    [148, -283],
                    [245, -25],
                    [85, 279],
                    [36, 393],
                    [-31, 461],
                    [-131, 350],
                    [120, 684],
                    [-69, 117],
                    [-207, -48],
                    [-78, 305],
                    [21, 258]
                ],
                [
                    [29063, 50490],
                    [-119, 140],
                    [-137, 195],
                    [-79, -94],
                    [-235, 82],
                    [-68, 255],
                    [-52, -10],
                    [-278, 338]
                ],
                [
                    [28095, 51396],
                    [-37, 183],
                    [103, 44],
                    [-12, 296],
                    [65, 214],
                    [138, 40],
                    [117, 371],
                    [106, 310],
                    [-102, 141],
                    [52, 343],
                    [-62, 540],
                    [59, 155],
                    [-44, 500],
                    [-112, 315]
                ],
                [
                    [28366, 54848],
                    [36, 287],
                    [89, -43],
                    [52, 176],
                    [-64, 348],
                    [34, 86]
                ],
                [
                    [28513, 55702],
                    [143, -18],
                    [209, 412],
                    [114, 63],
                    [3, 195],
                    [51, 500],
                    [159, 274],
                    [175, 11],
                    [22, 123],
                    [218, -49],
                    [218, 298],
                    [109, 132],
                    [134, 285],
                    [98, -36],
                    [73, -156],
                    [-54, -199]
                ],
                [
                    [30185, 57537],
                    [-178, -99],
                    [-71, -295],
                    [-107, -169],
                    [-81, -220],
                    [-34, -422],
                    [-77, -345],
                    [144, -40],
                    [35, -271],
                    [62, -130],
                    [21, -238],
                    [-33, -219],
                    [10, -123],
                    [69, -49],
                    [66, -207],
                    [357, 57],
                    [161, -75],
                    [196, -508],
                    [112, 63],
                    [200, -32],
                    [158, 68],
                    [99, -102],
                    [-50, -318],
                    [-62, -199],
                    [-22, -423],
                    [56, -393],
                    [79, -175],
                    [9, -133],
                    [-140, -294],
                    [100, -130],
                    [74, -207],
                    [85, -589]
                ],
                [
                    [30585, 48040],
                    [-139, 314],
                    [-83, 14],
                    [179, 602],
                    [-213, 276],
                    [-166, -51],
                    [-101, 103],
                    [-153, -157],
                    [-207, 74],
                    [-163, 620],
                    [-129, 152],
                    [-89, 279],
                    [-184, 280],
                    [-74, -56]
                ],
                [
                    [26954, 55439],
                    [-151, 131],
                    [-56, 124],
                    [32, 103],
                    [-11, 130],
                    [-77, 142],
                    [-109, 116],
                    [-95, 76],
                    [-19, 173],
                    [-73, 105],
                    [18, -172],
                    [-55, -141],
                    [-64, 164],
                    [-89, 58],
                    [-38, 120],
                    [2, 179],
                    [36, 187],
                    [-78, 83],
                    [64, 114]
                ],
                [
                    [26191, 57131],
                    [42, 76],
                    [183, -156],
                    [63, 77],
                    [89, -50],
                    [46, -121],
                    [82, -40],
                    [66, 126]
                ],
                [
                    [26762, 57043],
                    [70, -321],
                    [108, -238],
                    [130, -252]
                ],
                [
                    [27070, 56232],
                    [-107, -53],
                    [1, -238],
                    [58, -88],
                    [-41, -70],
                    [10, -107],
                    [-23, -120],
                    [-14, -117]
                ],
                [
                    [27147, 64280],
                    [240, -42],
                    [219, -7],
                    [261, -201],
                    [110, -216],
                    [260, 66],
                    [98, -138],
                    [235, -366],
                    [173, -267],
                    [92, 8],
                    [165, -120],
                    [-20, -167],
                    [205, -24],
                    [210, -242],
                    [-33, -138],
                    [-185, -75],
                    [-187, -29],
                    [-191, 46],
                    [-398, -57],
                    [186, 329],
                    [-113, 154],
                    [-179, 39],
                    [-96, 171],
                    [-66, 336],
                    [-157, -23],
                    [-259, 159],
                    [-83, 124],
                    [-362, 91],
                    [-97, 115],
                    [104, 148],
                    [-273, 30],
                    [-199, -307],
                    [-115, -8],
                    [-40, -144],
                    [-138, -65],
                    [-118, 56],
                    [146, 183],
                    [60, 213],
                    [126, 131],
                    [142, 116],
                    [210, 56],
                    [67, 65]
                ],
                [
                    [59092, 71341],
                    [19, 3],
                    [40, 143],
                    [200, -8],
                    [253, 176],
                    [-188, -251],
                    [21, -111]
                ],
                [
                    [59437, 71293],
                    [-30, 21],
                    [-53, -45],
                    [-42, 12],
                    [-14, -22],
                    [-5, 59],
                    [-20, 37],
                    [-54, 6],
                    [-75, -51],
                    [-52, 31]
                ],
                [
                    [59437, 71293],
                    [8, -48],
                    [-285, -240],
                    [-136, 77],
                    [-64, 237],
                    [132, 22]
                ],
                [
                    [53776, 79457],
                    [-157, 254],
                    [-141, 142],
                    [-30, 249],
                    [-49, 176],
                    [202, 129],
                    [103, 147],
                    [200, 114],
                    [70, 113],
                    [73, -68],
                    [124, 62]
                ],
                [
                    [54171, 80775],
                    [132, -191],
                    [207, -51],
                    [-17, -163],
                    [151, -122],
                    [41, 153],
                    [191, -66],
                    [26, -185],
                    [207, -36],
                    [127, -291]
                ],
                [
                    [55236, 79823],
                    [-82, -1],
                    [-43, -106],
                    [-64, -26],
                    [-18, -134],
                    [-54, -28],
                    [-7, -55],
                    [-95, -61],
                    [-123, 10],
                    [-39, -130]
                ],
                [
                    [52756, 83065],
                    [4, -228],
                    [281, -138],
                    [-3, -210],
                    [283, 111],
                    [156, 162],
                    [313, -233],
                    [132, -189]
                ],
                [
                    [53922, 82340],
                    [64, -300],
                    [-77, -158],
                    [101, -210],
                    [69, -316],
                    [-22, -204],
                    [114, -377]
                ],
                [
                    [52074, 78715],
                    [35, 421],
                    [140, 404],
                    [-400, 109],
                    [-131, 155]
                ],
                [
                    [51718, 79804],
                    [16, 259],
                    [-56, 133]
                ],
                [
                    [51710, 80596],
                    [-47, 619],
                    [167, 0],
                    [70, 222],
                    [69, 541],
                    [-51, 200]
                ],
                [
                    [51918, 82178],
                    [54, 125],
                    [232, 32],
                    [52, -130],
                    [188, 291],
                    [-63, 222],
                    [-13, 335]
                ],
                [
                    [52368, 83053],
                    [210, -78],
                    [178, 90]
                ],
                [
                    [61966, 58083],
                    [66, -183],
                    [-9, -245],
                    [-158, -142],
                    [119, -161]
                ],
                [
                    [61984, 57352],
                    [-102, -317]
                ],
                [
                    [61882, 57035],
                    [-62, 106],
                    [-67, -42],
                    [-155, 10],
                    [-4, 180],
                    [-22, 163],
                    [94, 277],
                    [98, 261]
                ],
                [
                    [61764, 57990],
                    [119, -51],
                    [83, 144]
                ],
                [
                    [53524, 83435],
                    [-166, -478],
                    [-291, 333],
                    [-39, 246],
                    [408, 195],
                    [88, -296]
                ],
                [
                    [52368, 83053],
                    [-113, 328],
                    [-8, 604],
                    [46, 159],
                    [80, 177],
                    [244, 37],
                    [98, 163],
                    [223, 167],
                    [-9, -304],
                    [-82, -192],
                    [33, -166],
                    [151, -89],
                    [-68, -223],
                    [-83, 64],
                    [-200, -425],
                    [76, -288]
                ],
                [
                    [30080, 62227],
                    [34, 101],
                    [217, -3],
                    [165, -152],
                    [73, 15],
                    [50, -209],
                    [152, 11],
                    [-9, -176],
                    [124, -21],
                    [136, -217],
                    [-103, -240],
                    [-132, 128],
                    [-127, -25],
                    [-92, 28],
                    [-50, -107],
                    [-106, -37],
                    [-43, 144],
                    [-92, -85],
                    [-111, -405],
                    [-71, 94],
                    [-14, 170]
                ],
                [
                    [30081, 61241],
                    [5, 161],
                    [-71, 177],
                    [68, 99],
                    [21, 228],
                    [-24, 321]
                ],
                [
                    [53333, 64447],
                    [-952, -1126],
                    [-804, -1161],
                    [-392, -263]
                ],
                [
                    [51185, 61897],
                    [-308, -58],
                    [-3, 376],
                    [-129, 96],
                    [-173, 169],
                    [-66, 277],
                    [-937, 1289],
                    [-937, 1289]
                ],
                [
                    [48632, 65335],
                    [-1045, 1431]
                ],
                [
                    [47587, 66766],
                    [6, 114],
                    [-1, 40]
                ],
                [
                    [47592, 66920],
                    [-2, 700],
                    [449, 436],
                    [277, 90],
                    [227, 159],
                    [107, 295],
                    [324, 234],
                    [12, 438],
                    [161, 51],
                    [126, 219],
                    [363, 99],
                    [51, 230],
                    [-73, 125],
                    [-96, 624],
                    [-17, 359],
                    [-104, 379]
                ],
                [
                    [49397, 71358],
                    [267, 323],
                    [300, 102],
                    [175, 244],
                    [268, 180],
                    [471, 105],
                    [459, 48],
                    [140, -87],
                    [262, 232],
                    [297, 5],
                    [113, -137],
                    [190, 35]
                ],
                [
                    [52339, 72408],
                    [-57, -303],
                    [44, -563],
                    [-65, -487],
                    [-171, -330],
                    [24, -445],
                    [227, -352],
                    [3, -143],
                    [171, -238],
                    [118, -1061]
                ],
                [
                    [52633, 68486],
                    [90, -522],
                    [15, -274],
                    [-49, -482],
                    [21, -270],
                    [-36, -323],
                    [24, -371],
                    [-110, -247],
                    [164, -431],
                    [11, -253],
                    [99, -330],
                    [130, 109],
                    [219, -275],
                    [122, -370]
                ],
                [
                    [27693, 48568],
                    [148, 442],
                    [-60, 258],
                    [-106, -275],
                    [-166, 259],
                    [56, 167],
                    [-47, 536],
                    [97, 89],
                    [52, 368],
                    [105, 381],
                    [-20, 241],
                    [153, 126],
                    [190, 236]
                ],
                [
                    [29063, 50490],
                    [38, -449],
                    [-86, -384],
                    [-303, -619],
                    [-334, -233],
                    [-170, -514],
                    [-53, -398],
                    [-157, -243],
                    [-116, 298],
                    [-113, 64],
                    [-114, -47],
                    [-8, 216],
                    [79, 141],
                    [-33, 246]
                ],
                [
                    [59700, 68010],
                    [-78, -238],
                    [-60, -446],
                    [-75, -308],
                    [-65, -103],
                    [-93, 191],
                    [-125, 263],
                    [-198, 847],
                    [-29, -53],
                    [115, -624],
                    [171, -594],
                    [210, -920],
                    [102, -321],
                    [90, -334],
                    [249, -654],
                    [-55, -103],
                    [9, -384],
                    [323, -530],
                    [49, -121]
                ],
                [
                    [60240, 63578],
                    [-1102, 0],
                    [-1077, 0],
                    [-1117, 0]
                ],
                [
                    [56944, 63578],
                    [0, 2175],
                    [0, 2101],
                    [-83, 476],
                    [71, 365],
                    [-43, 253],
                    [101, 283]
                ],
                [
                    [56990, 69231],
                    [369, 10],
                    [268, -156],
                    [275, -175],
                    [129, -92],
                    [214, 188],
                    [114, 169],
                    [245, 49],
                    [198, -75],
                    [75, -293],
                    [65, 193],
                    [222, -140],
                    [217, -33],
                    [137, 149]
                ],
                [
                    [59518, 69025],
                    [182, -1015]
                ],
                [
                    [61764, 57990],
                    [-95, 191],
                    [-114, 346],
                    [-124, 190],
                    [-71, 204],
                    [-242, 237],
                    [-191, 7],
                    [-67, 124],
                    [-163, -139],
                    [-168, 268],
                    [-87, -441],
                    [-323, 124]
                ],
                [
                    [60119, 59101],
                    [-30, 236],
                    [120, 868],
                    [27, 393],
                    [88, 181],
                    [204, 97],
                    [141, 337]
                ],
                [
                    [60669, 61213],
                    [161, -684],
                    [77, -542],
                    [152, -288],
                    [379, -558],
                    [154, -336],
                    [151, -341],
                    [87, -203],
                    [136, -178]
                ],
                [
                    [47490, 75324],
                    [14, 420],
                    [-114, 257],
                    [393, 426],
                    [340, -106],
                    [373, 3],
                    [296, -101],
                    [230, 31],
                    [449, -19]
                ],
                [
                    [49471, 76235],
                    [111, -230],
                    [511, -268],
                    [101, 127],
                    [313, -267],
                    [322, 77]
                ],
                [
                    [50829, 75674],
                    [15, -344],
                    [-263, -393],
                    [-356, -125],
                    [-25, -199],
                    [-171, -327],
                    [-107, -481],
                    [108, -338],
                    [-160, -263],
                    [-60, -384],
                    [-210, -118],
                    [-197, -454],
                    [-352, -9],
                    [-265, 11],
                    [-174, -209],
                    [-106, -223],
                    [-136, 49],
                    [-103, 199],
                    [-79, 340],
                    [-259, 92]
                ],
                [
                    [47929, 72498],
                    [-23, 195],
                    [103, 222],
                    [38, 161],
                    [-96, 175],
                    [77, 388],
                    [-111, 355],
                    [120, 48],
                    [11, 280],
                    [45, 86],
                    [3, 461],
                    [129, 160],
                    [-78, 296],
                    [-162, 21],
                    [-47, -75],
                    [-164, 0],
                    [-70, 289],
                    [-113, -86],
                    [-101, -150]
                ],
                [
                    [56753, 84725],
                    [32, 349],
                    [-102, -75],
                    [-176, 210],
                    [-24, 340],
                    [351, 164],
                    [350, 86],
                    [301, -97],
                    [287, 17]
                ],
                [
                    [57772, 85719],
                    [42, -103],
                    [-198, -341],
                    [83, -551],
                    [-120, -187]
                ],
                [
                    [57579, 84537],
                    [-229, 1],
                    [-239, 219],
                    [-121, 73],
                    [-237, -105]
                ],
                [
                    [61882, 57035],
                    [-61, -209],
                    [103, -325],
                    [102, -285],
                    [106, -210],
                    [909, -702],
                    [233, 4]
                ],
                [
                    [63274, 55308],
                    [-785, -1773],
                    [-362, -26],
                    [-247, -417],
                    [-178, -11],
                    [-76, -186]
                ],
                [
                    [61626, 52895],
                    [-190, 0],
                    [-112, 200],
                    [-254, -247],
                    [-82, -247],
                    [-185, 47],
                    [-62, 68],
                    [-65, -16],
                    [-87, 6],
                    [-352, 502],
                    [-193, 0],
                    [-95, 194],
                    [0, 332],
                    [-145, 99]
                ],
                [
                    [59804, 53833],
                    [-164, 643],
                    [-127, 137],
                    [-48, 236],
                    [-141, 288],
                    [-171, 42],
                    [95, 337],
                    [147, 14],
                    [42, 181]
                ],
                [
                    [59437, 55711],
                    [-4, 531]
                ],
                [
                    [59433, 56242],
                    [82, 618],
                    [132, 166],
                    [28, 241],
                    [119, 451],
                    [168, 293],
                    [112, 582],
                    [45, 508]
                ],
                [
                    [57942, 91385],
                    [-41, -414],
                    [425, -394],
                    [-256, -445],
                    [323, -673],
                    [-187, -506],
                    [250, -440],
                    [-113, -385],
                    [411, -405],
                    [-105, -301],
                    [-258, -341],
                    [-594, -755]
                ],
                [
                    [57797, 86326],
                    [-504, -47],
                    [-489, -216],
                    [-452, -125],
                    [-161, 323],
                    [-269, 193],
                    [62, 582],
                    [-135, 533],
                    [133, 345],
                    [252, 371],
                    [635, 640],
                    [185, 124],
                    [-28, 250],
                    [-387, 279]
                ],
                [
                    [56639, 89578],
                    [-93, 230],
                    [-8, 910],
                    [-433, 402],
                    [-371, 289]
                ],
                [
                    [55734, 91409],
                    [167, 156],
                    [309, -312],
                    [362, 29],
                    [298, -143],
                    [265, 262],
                    [137, 433],
                    [431, 200],
                    [356, -235],
                    [-117, -414]
                ],
                [
                    [99547, 40335],
                    [96, -171],
                    [-46, -308],
                    [-172, -81],
                    [-153, 73],
                    [-27, 260],
                    [107, 203],
                    [126, -74],
                    [69, 98]
                ],
                [
                    [0, 41087],
                    [57, 27],
                    [-34, -284],
                    [-23, -32],
                    [99822, -145],
                    [-177, -124],
                    [-36, 220],
                    [139, 121],
                    [88, 33],
                    [-99836, 184]
                ],
                [
                    [33e3, 19946],
                    [333, 354],
                    [236, -148],
                    [167, 237],
                    [222, -266],
                    [-83, -207],
                    [-375, -177],
                    [-125, 207],
                    [-236, -266],
                    [-139, 266]
                ],
                [
                    [34854, 51946],
                    [70, 252],
                    [24, 269],
                    [48, 253],
                    [-107, 349]
                ],
                [
                    [34889, 53069],
                    [-22, 404],
                    [144, 508]
                ],
                [
                    [35011, 53981],
                    [95, -65],
                    [204, -140],
                    [294, -499],
                    [46, -242]
                ],
                [
                    [52655, 75484],
                    [-92, -456],
                    [-126, 120],
                    [-64, 398],
                    [56, 219],
                    [179, 226],
                    [47, -507]
                ],
                [
                    [51576, 79843],
                    [62, -52],
                    [80, 13]
                ],
                [
                    [51900, 77752],
                    [-11, -167],
                    [82, -222],
                    [-97, -180],
                    [72, -457],
                    [151, -75],
                    [-32, -256]
                ],
                [
                    [52065, 76395],
                    [-252, -334],
                    [-548, 160],
                    [-404, -192],
                    [-32, -355]
                ],
                [
                    [49471, 76235],
                    [144, 354],
                    [53, 1177],
                    [-287, 620],
                    [-205, 299],
                    [-424, 227],
                    [-28, 431],
                    [360, 129],
                    [466, -152],
                    [-88, 669],
                    [263, -254],
                    [646, 461],
                    [84, 484],
                    [243, 119]
                ],
                [
                    [53081, 48229],
                    [-285, 596],
                    [-184, 488],
                    [-169, 610],
                    [9, 196],
                    [61, 189],
                    [67, 430],
                    [56, 438]
                ],
                [
                    [52636, 51176],
                    [94, 35],
                    [404, -6],
                    [-2, 711]
                ],
                [
                    [48278, 82406],
                    [-210, 122],
                    [-172, -9],
                    [57, 317],
                    [-57, 317]
                ],
                [
                    [47896, 83153],
                    [233, 24],
                    [298, -365],
                    [-149, -406]
                ],
                [
                    [49165, 85222],
                    [-297, -639],
                    [283, 81],
                    [304, -3],
                    [-72, -481],
                    [-250, -530],
                    [287, -38],
                    [22, -62],
                    [248, -697],
                    [190, -95],
                    [171, -673],
                    [79, -233],
                    [337, -113],
                    [-34, -378],
                    [-142, -173],
                    [111, -305],
                    [-250, -310],
                    [-371, 6],
                    [-473, -163],
                    [-130, 116],
                    [-183, -276],
                    [-257, 67],
                    [-195, -226],
                    [-148, 118],
                    [407, 621],
                    [249, 127],
                    [-2, 1],
                    [-434, 98],
                    [-79, 235],
                    [291, 183],
                    [-152, 319],
                    [52, 387],
                    [413, -54],
                    [1, 0],
                    [40, 343],
                    [-186, 364],
                    [-4, 8],
                    [-337, 104],
                    [-66, 160],
                    [101, 264],
                    [-92, 163],
                    [-149, -279],
                    [-17, 569],
                    [-140, 301],
                    [101, 611],
                    [216, 480],
                    [222, -47],
                    [335, 49]
                ],
                [
                    [61542, 75120],
                    [42, 252],
                    [-70, 403],
                    [-160, 218],
                    [-154, 68],
                    [-102, 181]
                ],
                [
                    [61098, 76242],
                    [34, 70],
                    [235, -101],
                    [409, -96],
                    [378, -283],
                    [48, -110],
                    [169, 93],
                    [259, -124],
                    [85, -242],
                    [175, -137]
                ],
                [
                    [62106, 74858],
                    [-268, 290],
                    [-296, -28]
                ],
                [
                    [50294, 54083],
                    [-436, -346],
                    [-154, -203],
                    [-250, -171],
                    [-248, 168]
                ],
                [
                    [50006, 57090],
                    [-20, -184],
                    [116, -305],
                    [-1, -429],
                    [27, -466],
                    [69, -215],
                    [-61, -532],
                    [22, -294],
                    [74, -375],
                    [62, -207]
                ],
                [
                    [47655, 55121],
                    [-78, 15],
                    [-57, -238],
                    [-78, 3],
                    [-55, 126],
                    [19, 237],
                    [-116, 362],
                    [-73, -67],
                    [-59, -13]
                ],
                [
                    [47158, 55546],
                    [-77, -34],
                    [3, 217],
                    [-44, 155],
                    [9, 171],
                    [-60, 249],
                    [-78, 211],
                    [-222, 1],
                    [-65, -112],
                    [-76, -13],
                    [-48, -128],
                    [-32, -163],
                    [-148, -260]
                ],
                [
                    [46320, 55840],
                    [-122, 349],
                    [-108, 232],
                    [-71, 76],
                    [-69, 118],
                    [-32, 261],
                    [-41, 130],
                    [-80, 97]
                ],
                [
                    [45797, 57103],
                    [123, 288],
                    [84, -11],
                    [73, 99],
                    [61, 1],
                    [44, 78],
                    [-24, 196],
                    [31, 62],
                    [5, 200]
                ],
                [
                    [46194, 58016],
                    [134, -6],
                    [200, -144],
                    [61, 13],
                    [21, 66],
                    [151, -47],
                    [40, 33]
                ],
                [
                    [46801, 57931],
                    [16, -216],
                    [44, 1],
                    [73, 78],
                    [46, -19],
                    [77, -150],
                    [119, -48],
                    [76, 128],
                    [90, 79],
                    [67, 83],
                    [55, -15],
                    [62, -130],
                    [33, -163],
                    [114, -248],
                    [-57, -152],
                    [-11, -192],
                    [59, 58],
                    [35, -69],
                    [-15, -176],
                    [85, -170]
                ],
                [
                    [45321, 58350],
                    [36, 262]
                ],
                [
                    [45357, 58612],
                    [302, 17],
                    [63, 140],
                    [88, 9],
                    [110, -145],
                    [86, -3],
                    [92, 99],
                    [56, -170],
                    [-120, -133],
                    [-121, 11],
                    [-119, 124],
                    [-103, -136],
                    [-50, -5],
                    [-67, -83],
                    [-253, 13]
                ],
                [
                    [45797, 57103],
                    [-149, 247],
                    [-117, 39],
                    [-63, 166],
                    [1, 90],
                    [-84, 125],
                    [-18, 127]
                ],
                [
                    [45367, 57897],
                    [147, 96],
                    [92, -19],
                    [75, 67],
                    [513, -25]
                ],
                [
                    [52636, 51176],
                    [-52, 90],
                    [96, 663]
                ],
                [
                    [56583, 71675],
                    [152, -199],
                    [216, 34],
                    [207, -42],
                    [-7, -103],
                    [151, 71],
                    [-35, -175],
                    [-400, -50],
                    [3, 98],
                    [-339, 115],
                    [52, 251]
                ],
                [
                    [57237, 74699],
                    [-169, 17],
                    [-145, 56],
                    [-336, -154],
                    [192, -332],
                    [-141, -96],
                    [-154, -1],
                    [-147, 305],
                    [-52, -130],
                    [62, -353],
                    [139, -277],
                    [-105, -129],
                    [155, -273],
                    [137, -171],
                    [4, -334],
                    [-257, 157],
                    [82, -302],
                    [-176, -62],
                    [105, -521],
                    [-184, -8],
                    [-228, 257],
                    [-104, 473],
                    [-49, 393],
                    [-108, 272],
                    [-143, 337],
                    [-18, 168]
                ],
                [
                    [55838, 74710],
                    [182, 53],
                    [106, 129],
                    [150, -12],
                    [46, 103],
                    [53, 20]
                ],
                [
                    [57254, 75292],
                    [135, -157],
                    [-86, -369],
                    [-66, -67]
                ],
                [
                    [37010, 99398],
                    [932, 353],
                    [975, -27],
                    [354, 218],
                    [982, 57],
                    [2219, -74],
                    [1737, -469],
                    [-513, -227],
                    [-1062, -26],
                    [-1496, -58],
                    [140, -105],
                    [984, 65],
                    [836, -204],
                    [540, 181],
                    [231, -212],
                    [-305, -344],
                    [707, 220],
                    [1348, 229],
                    [833, -114],
                    [156, -253],
                    [-1132, -420],
                    [-157, -136],
                    [-888, -102],
                    [643, -28],
                    [-324, -431],
                    [-224, -383],
                    [9, -658],
                    [333, -386],
                    [-434, -24],
                    [-457, -187],
                    [513, -313],
                    [65, -502],
                    [-297, -55],
                    [360, -508],
                    [-617, -42],
                    [322, -241],
                    [-91, -208],
                    [-391, -91],
                    [-388, -2],
                    [348, -400],
                    [4, -263],
                    [-549, 244],
                    [-143, -158],
                    [375, -148],
                    [364, -361],
                    [105, -476],
                    [-495, -114],
                    [-214, 228],
                    [-344, 340],
                    [95, -401],
                    [-322, -311],
                    [732, -25],
                    [383, -32],
                    [-745, -515],
                    [-755, -466],
                    [-813, -204],
                    [-306, -2],
                    [-288, -228],
                    [-386, -624],
                    [-597, -414],
                    [-192, -24],
                    [-370, -145],
                    [-399, -138],
                    [-238, -365],
                    [-4, -415],
                    [-141, -388],
                    [-453, -472],
                    [112, -462],
                    [-125, -488],
                    [-142, -577],
                    [-391, -36],
                    [-410, 482],
                    [-556, 3],
                    [-269, 324],
                    [-186, 577],
                    [-481, 735],
                    [-141, 385],
                    [-38, 530],
                    [-384, 546],
                    [100, 435],
                    [-186, 208],
                    [275, 691],
                    [418, 220],
                    [110, 247],
                    [58, 461],
                    [-318, -209],
                    [-151, -88],
                    [-249, -84],
                    [-341, 193],
                    [-19, 401],
                    [109, 314],
                    [258, 9],
                    [567, -157],
                    [-478, 375],
                    [-249, 202],
                    [-276, -83],
                    [-232, 147],
                    [310, 550],
                    [-169, 220],
                    [-220, 409],
                    [-335, 626],
                    [-353, 230],
                    [3, 247],
                    [-745, 346],
                    [-590, 43],
                    [-743, -24],
                    [-677, -44],
                    [-323, 188],
                    [-482, 372],
                    [729, 186],
                    [559, 31],
                    [-1188, 154],
                    [-627, 241],
                    [39, 229],
                    [1051, 285],
                    [1018, 284],
                    [107, 214],
                    [-750, 213],
                    [243, 235],
                    [961, 413],
                    [404, 63],
                    [-115, 265],
                    [658, 156],
                    [854, 93],
                    [853, 5],
                    [303, -184],
                    [737, 325],
                    [663, -221],
                    [390, -46],
                    [577, -192],
                    [-660, 318],
                    [38, 253]
                ],
                [
                    [24973, 58695],
                    [-142, 103],
                    [-174, 11],
                    [-127, 117],
                    [-149, 244]
                ],
                [
                    [24381, 59170],
                    [7, 172],
                    [32, 138],
                    [-39, 111],
                    [133, 481],
                    [357, 2],
                    [7, 201],
                    [-45, 36],
                    [-31, 128],
                    [-103, 136],
                    [-103, 198],
                    [125, 1],
                    [1, 333],
                    [259, 1],
                    [257, -7]
                ],
                [
                    [25297, 59966],
                    [90, -107],
                    [24, 88],
                    [82, -75]
                ],
                [
                    [25493, 59872],
                    [-127, -225],
                    [-131, -166],
                    [-20, -113],
                    [22, -116],
                    [-58, -150]
                ],
                [
                    [25179, 59102],
                    [-65, -37],
                    [15, -69],
                    [-52, -66],
                    [-95, -149],
                    [-9, -86]
                ],
                [
                    [33400, 55523],
                    [183, -217],
                    [171, -385],
                    [8, -304],
                    [105, -14],
                    [149, -289],
                    [109, -205]
                ],
                [
                    [34125, 54109],
                    [-44, -532],
                    [-169, -154],
                    [15, -139],
                    [-51, -305],
                    [123, -429],
                    [89, -1],
                    [37, -333],
                    [169, -514]
                ],
                [
                    [33129, 53652],
                    [-188, 448],
                    [75, 163],
                    [-5, 273],
                    [171, 95],
                    [69, 110],
                    [-95, 220],
                    [24, 215],
                    [220, 347]
                ],
                [
                    [25745, 58251],
                    [-48, 185],
                    [-84, 51]
                ],
                [
                    [25613, 58487],
                    [19, 237],
                    [-38, 64],
                    [-57, 42],
                    [-122, -70],
                    [-10, 79],
                    [-84, 95],
                    [-60, 118],
                    [-82, 50]
                ],
                [
                    [25493, 59872],
                    [29, -23],
                    [61, 104],
                    [79, 8],
                    [26, -48],
                    [43, 29],
                    [129, -53],
                    [128, 15],
                    [90, 66],
                    [32, 66],
                    [89, -31],
                    [66, -40],
                    [73, 14],
                    [55, 51],
                    [127, -82],
                    [44, -13],
                    [85, -110],
                    [80, -132],
                    [101, -91],
                    [73, -162]
                ],
                [
                    [26903, 59440],
                    [-95, 12],
                    [-38, -81],
                    [-97, -77],
                    [-70, 0],
                    [-61, -76],
                    [-56, 27],
                    [-47, 90],
                    [-29, -17],
                    [-36, -141],
                    [-27, 5],
                    [-4, -121],
                    [-97, -163],
                    [-51, -70],
                    [-29, -74],
                    [-82, 120],
                    [-60, -158],
                    [-58, 4],
                    [-65, -14],
                    [6, -290],
                    [-41, -5],
                    [-35, -135],
                    [-86, -25]
                ],
                [
                    [55230, 77704],
                    [67, -229],
                    [89, -169],
                    [-107, -222]
                ],
                [
                    [55155, 75778],
                    [-31, -100]
                ],
                [
                    [55124, 75678],
                    [-261, 218],
                    [-161, 213],
                    [-254, 176],
                    [-233, 434],
                    [56, 45],
                    [-127, 248],
                    [-5, 200],
                    [-179, 93],
                    [-85, -255],
                    [-82, 198],
                    [6, 205],
                    [10, 9]
                ],
                [
                    [53809, 77462],
                    [194, -20],
                    [51, 100],
                    [94, -97],
                    [109, -11],
                    [-1, 165],
                    [97, 60],
                    [27, 239],
                    [221, 157]
                ],
                [
                    [54601, 78055],
                    [88, -73],
                    [208, -253],
                    [229, -114],
                    [104, 89]
                ],
                [
                    [30081, 61241],
                    [-185, 100],
                    [-131, -41],
                    [-169, 43],
                    [-130, -110],
                    [-149, 184],
                    [24, 190],
                    [256, -82],
                    [210, -47],
                    [100, 131],
                    [-127, 256],
                    [2, 226],
                    [-175, 92],
                    [62, 163],
                    [170, -26],
                    [241, -93]
                ],
                [
                    [54716, 79012],
                    [141, -151],
                    [103, -65],
                    [233, 73],
                    [22, 118],
                    [111, 18],
                    [135, 92],
                    [30, -38],
                    [130, 74],
                    [66, 139],
                    [91, 36],
                    [297, -180],
                    [59, 61]
                ],
                [
                    [56134, 79189],
                    [155, -161],
                    [19, -159]
                ],
                [
                    [56308, 78869],
                    [-170, -123],
                    [-131, -401],
                    [-168, -401],
                    [-223, -111]
                ],
                [
                    [55616, 77833],
                    [-173, 26],
                    [-213, -155]
                ],
                [
                    [54601, 78055],
                    [-54, 200],
                    [-47, 6]
                ],
                [
                    [83531, 44530],
                    [-117, -11],
                    [-368, 414],
                    [259, 116],
                    [146, -180],
                    [97, -180],
                    [-17, -159]
                ],
                [
                    [84713, 45326],
                    [28, -117],
                    [5, -179]
                ],
                [
                    [84746, 45030],
                    [-181, -441],
                    [-238, -130],
                    [-33, 71],
                    [25, 201],
                    [119, 360],
                    [275, 235]
                ],
                [
                    [82749, 45797],
                    [100, -158],
                    [172, 48],
                    [69, -251],
                    [-321, -119],
                    [-193, -79],
                    [-149, 5],
                    [95, 340],
                    [153, 5],
                    [74, 209]
                ],
                [
                    [84139, 45797],
                    [-41, -328],
                    [-417, -168],
                    [-370, 73],
                    [0, 216],
                    [220, 123],
                    [174, -177],
                    [185, 45],
                    [249, 216]
                ],
                [
                    [80172, 46575],
                    [533, -59],
                    [61, 244],
                    [515, -284],
                    [101, -383],
                    [417, -108],
                    [341, -351],
                    [-317, -225],
                    [-306, 238],
                    [-251, -16],
                    [-288, 44],
                    [-260, 106],
                    [-322, 225],
                    [-204, 59],
                    [-116, -74],
                    [-506, 243],
                    [-48, 254],
                    [-255, 44],
                    [191, 564],
                    [337, -35],
                    [224, -231],
                    [115, -45],
                    [38, -210]
                ],
                [
                    [87423, 46908],
                    [-143, -402],
                    [-27, 445],
                    [49, 212],
                    [58, 200],
                    [63, -173],
                    [0, -282]
                ],
                [
                    [85346, 48536],
                    [-104, -196],
                    [-192, 108],
                    [-54, 254],
                    [281, 29],
                    [69, -195]
                ],
                [
                    [86241, 48752],
                    [101, -452],
                    [-234, 244],
                    [-232, 49],
                    [-157, -39],
                    [-192, 21],
                    [65, 325],
                    [344, 24],
                    [305, -172]
                ],
                [
                    [89166, 49043],
                    [5, -1925],
                    [4, -1925]
                ],
                [
                    [89175, 45193],
                    [-247, 485],
                    [-282, 118],
                    [-69, -168],
                    [-352, -18],
                    [118, 481],
                    [175, 164],
                    [-72, 642],
                    [-134, 496],
                    [-538, 500],
                    [-229, 50],
                    [-417, 546],
                    [-82, -287],
                    [-107, -52],
                    [-63, 216],
                    [-1, 257],
                    [-212, 290],
                    [299, 213],
                    [198, -11],
                    [-23, 156],
                    [-407, 1],
                    [-110, 352],
                    [-248, 109],
                    [-117, 293],
                    [374, 143],
                    [142, 192],
                    [446, -242],
                    [44, -220],
                    [78, -955],
                    [287, -354],
                    [232, 627],
                    [319, 356],
                    [247, 1],
                    [238, -206],
                    [206, -212],
                    [298, -113]
                ],
                [
                    [84788, 51419],
                    [-223, -587],
                    [-209, -113],
                    [-267, 115],
                    [-463, -29],
                    [-243, -85],
                    [-39, -447],
                    [248, -526],
                    [150, 268],
                    [518, 201],
                    [-22, -272],
                    [-121, 86],
                    [-121, -347],
                    [-245, -229],
                    [263, -757],
                    [-50, -203],
                    [249, -682],
                    [-2, -388],
                    [-148, -173],
                    [-109, 207],
                    [134, 484],
                    [-273, -229],
                    [-69, 164],
                    [36, 228],
                    [-200, 346],
                    [21, 576],
                    [-186, -179],
                    [24, -689],
                    [11, -846],
                    [-176, -85],
                    [-119, 173],
                    [79, 544],
                    [-43, 570],
                    [-117, 4],
                    [-86, 405],
                    [115, 387],
                    [40, 469],
                    [139, 891],
                    [58, 243],
                    [237, 439],
                    [217, -174],
                    [350, -82],
                    [319, 25],
                    [275, 429],
                    [48, -132]
                ],
                [
                    [85746, 51249],
                    [-15, -517],
                    [-143, 58],
                    [-42, -359],
                    [114, -312],
                    [-78, -71],
                    [-112, 374],
                    [-82, 755],
                    [56, 472],
                    [92, 215],
                    [20, -322],
                    [164, -52],
                    [26, -241]
                ],
                [
                    [80461, 51765],
                    [47, -395],
                    [190, -334],
                    [179, 121],
                    [177, -43],
                    [162, 299],
                    [133, 52],
                    [263, -166],
                    [226, 126],
                    [143, 822],
                    [107, 205],
                    [96, 672],
                    [319, 0],
                    [241, -100]
                ],
                [
                    [82744, 53024],
                    [-158, -533],
                    [204, -560],
                    [-48, -272],
                    [312, -546],
                    [-329, -70],
                    [-93, -403],
                    [12, -535],
                    [-267, -404],
                    [-7, -589],
                    [-107, -903],
                    [-41, 210],
                    [-316, -266],
                    [-110, 361],
                    [-198, 34],
                    [-139, 189],
                    [-330, -212],
                    [-101, 285],
                    [-182, -32],
                    [-229, 68],
                    [-43, 793],
                    [-138, 164],
                    [-134, 505],
                    [-38, 517],
                    [32, 548],
                    [165, 392]
                ],
                [
                    [79393, 47122],
                    [-308, -12],
                    [-234, 494],
                    [-356, 482],
                    [-119, 358],
                    [-210, 481],
                    [-138, 443],
                    [-212, 827],
                    [-244, 493],
                    [-81, 508],
                    [-103, 461],
                    [-250, 372],
                    [-145, 506],
                    [-209, 330],
                    [-290, 652],
                    [-24, 300],
                    [178, -24],
                    [430, -114],
                    [246, -577],
                    [215, -401],
                    [153, -246],
                    [263, -635],
                    [283, -9],
                    [233, -405],
                    [161, -495],
                    [211, -270],
                    [-111, -482],
                    [159, -205],
                    [100, -15],
                    [47, -412],
                    [97, -330],
                    [204, -52],
                    [135, -374],
                    [-70, -735],
                    [-11, -914]
                ],
                [
                    [72530, 68413],
                    [-176, -268],
                    [-108, -553],
                    [269, -224],
                    [262, -289],
                    [362, -332],
                    [381, -76],
                    [160, -301],
                    [215, -56],
                    [334, -138],
                    [231, 10],
                    [32, 234],
                    [-36, 375],
                    [21, 255]
                ],
                [
                    [77035, 67277],
                    [20, -224],
                    [-97, -108],
                    [23, -364],
                    [-199, 107],
                    [-359, -408],
                    [8, -338],
                    [-153, -496],
                    [-14, -288],
                    [-124, -487],
                    [-217, 135],
                    [-11, -612],
                    [-63, -201],
                    [30, -251],
                    [-137, -140]
                ],
                [
                    [74730, 63611],
                    [-39, -216],
                    [-189, 7],
                    [-343, -122],
                    [16, -445],
                    [-148, -349],
                    [-400, -398],
                    [-311, -695],
                    [-209, -373],
                    [-276, -387],
                    [-1, -271],
                    [-138, -146],
                    [-251, -212],
                    [-129, -31],
                    [-84, -450],
                    [58, -769],
                    [15, -490],
                    [-118, -561],
                    [-1, -1004],
                    [-144, -29],
                    [-126, -450],
                    [84, -195],
                    [-253, -168],
                    [-93, -401],
                    [-112, -170],
                    [-263, 552],
                    [-128, 827],
                    [-107, 596],
                    [-97, 279],
                    [-148, 568],
                    [-69, 739],
                    [-48, 369],
                    [-253, 811],
                    [-115, 1145],
                    [-83, 756],
                    [1, 716],
                    [-54, 553],
                    [-404, -353],
                    [-196, 70],
                    [-362, 716],
                    [133, 214],
                    [-82, 232],
                    [-326, 501]
                ],
                [
                    [68937, 64577],
                    [185, 395],
                    [612, -2],
                    [-56, 507],
                    [-156, 300],
                    [-31, 455],
                    [-182, 265],
                    [306, 619],
                    [323, -45],
                    [290, 620],
                    [174, 599],
                    [270, 593],
                    [-4, 421],
                    [236, 342],
                    [-224, 292],
                    [-96, 400],
                    [-99, 517],
                    [137, 255],
                    [421, -144],
                    [310, 88],
                    [268, 496]
                ],
                [
                    [48278, 82406],
                    [46, -422],
                    [-210, -528],
                    [-493, -349],
                    [-393, 89],
                    [225, 617],
                    [-145, 601],
                    [378, 463],
                    [210, 276]
                ],
                [
                    [64978, 72558],
                    [244, 114],
                    [197, 338],
                    [186, -17],
                    [122, 110],
                    [197, -55],
                    [308, -299],
                    [221, -65],
                    [318, -523],
                    [207, -21],
                    [24, -498]
                ],
                [
                    [66909, 68203],
                    [137, -310],
                    [112, -357],
                    [266, -260],
                    [7, -520],
                    [133, -96],
                    [23, -272],
                    [-400, -305],
                    [-105, -687]
                ],
                [
                    [67082, 65396],
                    [-523, 179],
                    [-303, 136],
                    [-313, 76],
                    [-118, 725],
                    [-133, 105],
                    [-214, -106],
                    [-280, -286],
                    [-339, 196],
                    [-281, 454],
                    [-267, 168],
                    [-186, 561],
                    [-205, 788],
                    [-149, -96],
                    [-177, 196],
                    [-104, -231]
                ],
                [
                    [63490, 68261],
                    [-153, 311],
                    [-3, 314],
                    [-89, 0],
                    [46, 428],
                    [-143, 449],
                    [-340, 324],
                    [-193, 562],
                    [65, 461],
                    [139, 204],
                    [-21, 345],
                    [-182, 177],
                    [-180, 705]
                ],
                [
                    [62436, 72541],
                    [-152, 473],
                    [55, 183],
                    [-87, 678],
                    [190, 168]
                ],
                [
                    [63578, 73220],
                    [88, -436],
                    [263, -123],
                    [193, -296],
                    [395, -102],
                    [434, 156],
                    [27, 139]
                ],
                [
                    [63490, 68261],
                    [-164, 29]
                ],
                [
                    [63326, 68290],
                    [-187, 49],
                    [-204, -567]
                ],
                [
                    [62935, 67772],
                    [-516, 47],
                    [-784, 1188],
                    [-413, 414],
                    [-335, 160]
                ],
                [
                    [60887, 69581],
                    [-112, 720]
                ],
                [
                    [60775, 70301],
                    [615, 614],
                    [105, 715],
                    [-26, 431],
                    [152, 146],
                    [142, 369]
                ],
                [
                    [61763, 72576],
                    [119, 92],
                    [324, -77],
                    [97, -150],
                    [133, 100]
                ],
                [
                    [45969, 89843],
                    [-64, -382],
                    [314, -403],
                    [-361, -451],
                    [-801, -405],
                    [-240, -107],
                    [-365, 87],
                    [-775, 187],
                    [273, 261],
                    [-605, 289],
                    [492, 114],
                    [-12, 174],
                    [-583, 137],
                    [188, 385],
                    [421, 87],
                    [433, -400],
                    [422, 321],
                    [349, -167],
                    [453, 315],
                    [461, -42]
                ],
                [
                    [59922, 69905],
                    [-49, -186]
                ],
                [
                    [59873, 69719],
                    [-100, 82],
                    [-58, -394],
                    [69, -66],
                    [-71, -81],
                    [-12, -156],
                    [131, 80]
                ],
                [
                    [59832, 69184],
                    [7, -230],
                    [-139, -944]
                ],
                [
                    [59518, 69025],
                    [80, 194],
                    [-19, 34],
                    [74, 276],
                    [56, 446],
                    [40, 149],
                    [8, 6]
                ],
                [
                    [59757, 70130],
                    [93, -1],
                    [25, 104],
                    [75, 8]
                ],
                [
                    [59950, 70241],
                    [4, -242],
                    [-38, -90],
                    [6, -4]
                ],
                [
                    [54311, 73167],
                    [-100, -465],
                    [41, -183],
                    [-58, -303],
                    [-213, 222],
                    [-141, 64],
                    [-387, 300],
                    [38, 304],
                    [325, -54],
                    [284, 64],
                    [211, 51]
                ],
                [
                    [52558, 74927],
                    [166, -419],
                    [-39, -782],
                    [-126, 38],
                    [-113, -197],
                    [-105, 156],
                    [-11, 713],
                    [-64, 338],
                    [153, -30],
                    [139, 183]
                ],
                [
                    [53835, 78058],
                    [-31, -291],
                    [67, -251]
                ],
                [
                    [53871, 77516],
                    [-221, 86],
                    [-226, -210],
                    [15, -293],
                    [-34, -168],
                    [91, -301],
                    [261, -298],
                    [140, -488],
                    [309, -476],
                    [217, 3],
                    [68, -130],
                    [-78, -118],
                    [249, -214],
                    [204, -178],
                    [238, -308],
                    [29, -111],
                    [-52, -211],
                    [-154, 276],
                    [-242, 97],
                    [-116, -382],
                    [200, -219],
                    [-33, -309],
                    [-116, -35],
                    [-148, -506],
                    [-116, -46],
                    [1, 181],
                    [57, 317],
                    [60, 126],
                    [-108, 342],
                    [-85, 298],
                    [-115, 74],
                    [-82, 255],
                    [-179, 107],
                    [-120, 238],
                    [-206, 38],
                    [-217, 267],
                    [-254, 384],
                    [-189, 340],
                    [-86, 585],
                    [-138, 68],
                    [-226, 195],
                    [-128, -80],
                    [-161, -274],
                    [-115, -43]
                ],
                [
                    [28453, 61504],
                    [187, -53],
                    [147, -142],
                    [46, -161],
                    [-195, -11],
                    [-84, -99],
                    [-156, 95],
                    [-159, 215],
                    [34, 135],
                    [116, 41],
                    [64, -20]
                ],
                [
                    [59922, 69905],
                    [309, -234],
                    [544, 630]
                ],
                [
                    [60887, 69581],
                    [-53, -89],
                    [-556, -296],
                    [277, -591],
                    [-92, -101],
                    [-46, -197],
                    [-212, -82],
                    [-66, -213],
                    [-120, -182],
                    [-310, 94]
                ],
                [
                    [59709, 67924],
                    [-9, 86]
                ],
                [
                    [59832, 69184],
                    [41, 173],
                    [0, 362]
                ],
                [
                    [87399, 70756],
                    [35, -203],
                    [-156, -357],
                    [-114, 189],
                    [-143, -137],
                    [-73, -346],
                    [-181, 168],
                    [2, 281],
                    [154, 352],
                    [158, -68],
                    [114, 248],
                    [204, -127]
                ],
                [
                    [89159, 72524],
                    [-104, -472],
                    [48, -296],
                    [-145, -416],
                    [-355, -278],
                    [-488, -36],
                    [-396, -675],
                    [-186, 227],
                    [-12, 442],
                    [-483, -130],
                    [-329, -279],
                    [-325, -11],
                    [282, -435],
                    [-186, -1004],
                    [-179, -248],
                    [-135, 229],
                    [69, 533],
                    [-176, 172],
                    [-113, 405],
                    [263, 182],
                    [145, 371],
                    [280, 306],
                    [203, 403],
                    [553, 177],
                    [297, -121],
                    [291, 1050],
                    [185, -282],
                    [408, 591],
                    [158, 229],
                    [174, 723],
                    [-47, 664],
                    [117, 374],
                    [295, 108],
                    [152, -819],
                    [-9, -479],
                    [-256, -595],
                    [4, -610]
                ],
                [
                    [89974, 76679],
                    [195, -126],
                    [197, 250],
                    [62, -663],
                    [-412, -162],
                    [-244, -587],
                    [-436, 404],
                    [-152, -646],
                    [-308, -9],
                    [-39, 587],
                    [138, 455],
                    [296, 33],
                    [81, 817],
                    [83, 460],
                    [326, -615],
                    [213, -198]
                ],
                [
                    [69711, 75551],
                    [-159, -109],
                    [-367, -412],
                    [-121, -422],
                    [-104, -4],
                    [-76, 280],
                    [-353, 19],
                    [-57, 484],
                    [-135, 4],
                    [21, 593],
                    [-333, 431],
                    [-476, -46],
                    [-326, -86],
                    [-265, 533],
                    [-227, 223],
                    [-431, 423],
                    [-52, 51],
                    [-715, -349],
                    [11, -2178]
                ],
                [
                    [65546, 74986],
                    [-142, -29],
                    [-195, 463],
                    [-188, 166],
                    [-315, -123],
                    [-123, -197]
                ],
                [
                    [64583, 75266],
                    [-15, 144],
                    [68, 246],
                    [-53, 206],
                    [-322, 202],
                    [-125, 530],
                    [-154, 150],
                    [-9, 192],
                    [270, -56],
                    [11, 432],
                    [236, 96],
                    [243, -88],
                    [50, 576],
                    [-50, 365],
                    [-278, -28],
                    [-236, 144],
                    [-321, -260],
                    [-259, -124]
                ],
                [
                    [63639, 77993],
                    [-142, 96],
                    [29, 304],
                    [-177, 395],
                    [-207, -17],
                    [-235, 401],
                    [160, 448],
                    [-81, 120],
                    [222, 649],
                    [285, -342],
                    [35, 431],
                    [573, 643],
                    [434, 15],
                    [612, -409],
                    [329, -239],
                    [295, 249],
                    [440, 12],
                    [356, -306],
                    [80, 175],
                    [391, -25],
                    [69, 280],
                    [-450, 406],
                    [267, 288],
                    [-52, 161],
                    [266, 153],
                    [-200, 405],
                    [127, 202],
                    [1039, 205],
                    [136, 146],
                    [695, 218],
                    [250, 245],
                    [499, -127],
                    [88, -612],
                    [290, 144],
                    [356, -202],
                    [-23, -322],
                    [267, 33],
                    [696, 558],
                    [-102, -185],
                    [355, -457],
                    [620, -1500],
                    [148, 309],
                    [383, -340],
                    [399, 151],
                    [154, -106],
                    [133, -341],
                    [194, -115],
                    [119, -251],
                    [358, 79],
                    [147, -361]
                ],
                [
                    [72294, 75601],
                    [-171, 87],
                    [-140, 212],
                    [-412, 62],
                    [-461, 16],
                    [-100, -65],
                    [-396, 248],
                    [-158, -122],
                    [-43, -349],
                    [-457, 204],
                    [-183, -84],
                    [-62, -259]
                ],
                [
                    [61551, 49585],
                    [-195, -236],
                    [-68, -246],
                    [-104, -44],
                    [-40, -416],
                    [-89, -238],
                    [-54, -393],
                    [-112, -195]
                ],
                [
                    [60889, 47817],
                    [-399, 590],
                    [-19, 343],
                    [-1007, 1203],
                    [-47, 65]
                ],
                [
                    [59417, 50018],
                    [-3, 627],
                    [80, 239],
                    [137, 391],
                    [101, 431],
                    [-123, 678],
                    [-32, 296],
                    [-132, 411]
                ],
                [
                    [59445, 53091],
                    [171, 352],
                    [188, 390]
                ],
                [
                    [61626, 52895],
                    [-243, -670],
                    [3, -2152],
                    [165, -488]
                ],
                [
                    [70465, 73876],
                    [-526, -89],
                    [-343, 192],
                    [-301, -46],
                    [26, 340],
                    [303, -98],
                    [101, 182]
                ],
                [
                    [69725, 74357],
                    [212, -58],
                    [355, 425],
                    [-329, 311],
                    [-198, -147],
                    [-205, 223],
                    [234, 382],
                    [-83, 58]
                ],
                [
                    [78495, 57780],
                    [-66, 713],
                    [178, 492],
                    [359, 112],
                    [261, -84]
                ],
                [
                    [79227, 59013],
                    [229, -232],
                    [126, 407],
                    [246, -217]
                ],
                [
                    [79828, 58971],
                    [64, -394],
                    [-34, -708],
                    [-467, -455],
                    [122, -358],
                    [-292, -43],
                    [-240, -238]
                ],
                [
                    [78981, 56775],
                    [-233, 87],
                    [-112, 307],
                    [-141, 611]
                ],
                [
                    [85652, 73393],
                    [240, -697],
                    [68, -383],
                    [3, -681],
                    [-105, -325],
                    [-252, -113],
                    [-222, -245],
                    [-250, -51],
                    [-31, 322],
                    [51, 443],
                    [-122, 615],
                    [206, 99],
                    [-190, 506]
                ],
                [
                    [85048, 72883],
                    [17, 54],
                    [124, -21],
                    [108, 266],
                    [197, 29],
                    [118, 39],
                    [40, 143]
                ],
                [
                    [55575, 75742],
                    [52, 132]
                ],
                [
                    [55627, 75874],
                    [66, 43],
                    [38, 196],
                    [50, 33],
                    [40, -84],
                    [52, -36],
                    [36, -94],
                    [46, -28],
                    [54, -110],
                    [39, 4],
                    [-31, -144],
                    [-33, -71],
                    [9, -44]
                ],
                [
                    [55993, 75539],
                    [-62, -23],
                    [-164, -91],
                    [-13, -121],
                    [-35, 5]
                ],
                [
                    [63326, 68290],
                    [58, -261],
                    [-25, -135],
                    [89, -445]
                ],
                [
                    [63448, 67449],
                    [-196, -16],
                    [-69, 282],
                    [-248, 57]
                ],
                [
                    [79227, 59013],
                    [90, 266],
                    [12, 500],
                    [-224, 515],
                    [-18, 583],
                    [-211, 480],
                    [-210, 40],
                    [-56, -205],
                    [-163, -17],
                    [-83, 104],
                    [-293, -353],
                    [-6, 530],
                    [68, 623],
                    [-188, 27],
                    [-16, 355],
                    [-120, 182]
                ],
                [
                    [77809, 62643],
                    [59, 218],
                    [237, 384]
                ],
                [
                    [78380, 63852],
                    [162, -466],
                    [125, -537],
                    [342, -5],
                    [108, -515],
                    [-178, -155],
                    [-80, -212],
                    [333, -353],
                    [231, -699],
                    [175, -520],
                    [210, -411],
                    [70, -418],
                    [-50, -590]
                ],
                [
                    [59757, 70130],
                    [99, 482],
                    [138, 416],
                    [5, 21]
                ],
                [
                    [59999, 71049],
                    [125, -31],
                    [45, -231],
                    [-151, -223],
                    [-68, -323]
                ],
                [
                    [47857, 53158],
                    [-73, -5],
                    [-286, 282],
                    [-252, 449],
                    [-237, 324],
                    [-187, 381]
                ],
                [
                    [46822, 54589],
                    [66, 189],
                    [15, 172],
                    [126, 320],
                    [129, 276]
                ],
                [
                    [54125, 64088],
                    [-197, -220],
                    [-156, 324],
                    [-439, 255]
                ],
                [
                    [52633, 68486],
                    [136, 137],
                    [24, 250],
                    [-30, 244],
                    [191, 228],
                    [86, 189],
                    [135, 170],
                    [16, 454]
                ],
                [
                    [53191, 70158],
                    [326, -204],
                    [117, 51],
                    [232, -98],
                    [368, -264],
                    [130, -526],
                    [250, -114],
                    [391, -248],
                    [296, -293],
                    [136, 153],
                    [133, 272],
                    [-65, 452],
                    [87, 288],
                    [200, 277],
                    [192, 80],
                    [375, -121],
                    [95, -264],
                    [104, -2],
                    [88, -101],
                    [276, -70],
                    [68, -195]
                ],
                [
                    [56944, 63578],
                    [0, -1180],
                    [-320, -2],
                    [-3, -248]
                ],
                [
                    [56621, 62148],
                    [-1108, 1131],
                    [-1108, 1132],
                    [-280, -323]
                ],
                [
                    [72718, 55024],
                    [-42, -615],
                    [-116, -168],
                    [-242, -135],
                    [-132, 470],
                    [-49, 849],
                    [126, 959],
                    [192, -328],
                    [129, -416],
                    [134, -616]
                ],
                [
                    [58049, 33472],
                    [96, -178],
                    [-85, -288],
                    [-47, -192],
                    [-155, -93],
                    [-51, -188],
                    [-99, -59],
                    [-209, 454],
                    [148, 374],
                    [151, 232],
                    [130, 120],
                    [121, -182]
                ],
                [
                    [56314, 82678],
                    [-23, 150],
                    [30, 162],
                    [-123, 94],
                    [-291, 103]
                ],
                [
                    [55907, 83187],
                    [-59, 497]
                ],
                [
                    [55848, 83684],
                    [318, 181],
                    [466, -38],
                    [273, 59],
                    [39, -123],
                    [148, -38],
                    [267, -287]
                ],
                [
                    [56523, 82432],
                    [-67, 182],
                    [-142, 64]
                ],
                [
                    [55848, 83684],
                    [10, 445],
                    [136, 371],
                    [262, 202],
                    [221, -442],
                    [223, 12],
                    [53, 453]
                ],
                [
                    [57579, 84537],
                    [134, -136],
                    [24, -287],
                    [89, -348]
                ],
                [
                    [47592, 66920],
                    [-42, 0],
                    [7, -317],
                    [-172, -19],
                    [-90, -134],
                    [-126, 0],
                    [-100, 76],
                    [-234, -63],
                    [-91, -460],
                    [-86, -44],
                    [-131, -745],
                    [-386, -637],
                    [-92, -816],
                    [-114, -265],
                    [-33, -213],
                    [-625, -48],
                    [-5, 1]
                ],
                [
                    [45272, 63236],
                    [13, 274],
                    [106, 161],
                    [91, 308],
                    [-18, 200],
                    [96, 417],
                    [155, 376],
                    [93, 95],
                    [74, 344],
                    [6, 315],
                    [100, 365],
                    [185, 216],
                    [177, 603],
                    [5, 8],
                    [139, 227],
                    [259, 65],
                    [218, 404],
                    [140, 158],
                    [232, 493],
                    [-70, 735],
                    [106, 508],
                    [37, 312],
                    [179, 399],
                    [278, 270],
                    [206, 244],
                    [186, 612],
                    [87, 362],
                    [205, -2],
                    [167, -251],
                    [264, 41],
                    [288, -131],
                    [121, -6]
                ],
                [
                    [57394, 79070],
                    [66, 87],
                    [185, 58],
                    [204, -184],
                    [115, -22],
                    [125, -159],
                    [-20, -200],
                    [101, -97],
                    [40, -247],
                    [97, -150],
                    [-19, -88],
                    [52, -60],
                    [-74, -44],
                    [-164, 18],
                    [-27, 81],
                    [-58, -47],
                    [20, -106],
                    [-76, -188],
                    [-49, -203],
                    [-70, -64]
                ],
                [
                    [57842, 77455],
                    [-50, 270],
                    [30, 252],
                    [-9, 259],
                    [-160, 352],
                    [-89, 249],
                    [-86, 175],
                    [-84, 58]
                ],
                [
                    [63761, 43212],
                    [74, -251],
                    [69, -390],
                    [45, -711],
                    [72, -276],
                    [-28, -284],
                    [-49, -174],
                    [-94, 347],
                    [-53, -175],
                    [53, -438],
                    [-24, -250],
                    [-77, -137],
                    [-18, -500],
                    [-109, -689],
                    [-137, -814],
                    [-172, -1120],
                    [-106, -821],
                    [-125, -685],
                    [-226, -140],
                    [-243, -250],
                    [-160, 151],
                    [-220, 211],
                    [-77, 312],
                    [-18, 524],
                    [-98, 471],
                    [-26, 425],
                    [50, 426],
                    [128, 102],
                    [1, 197],
                    [133, 447],
                    [25, 377],
                    [-65, 280],
                    [-52, 372],
                    [-23, 544],
                    [97, 331],
                    [38, 375],
                    [138, 22],
                    [155, 121],
                    [103, 107],
                    [122, 7],
                    [158, 337],
                    [229, 364],
                    [83, 297],
                    [-38, 253],
                    [118, -71],
                    [153, 410],
                    [6, 356],
                    [92, 264],
                    [96, -254]
                ],
                [
                    [23016, 65864],
                    [-107, -518],
                    [-49, -426],
                    [-20, -791],
                    [-27, -289],
                    [48, -322],
                    [86, -288],
                    [56, -458],
                    [184, -440],
                    [65, -337],
                    [109, -291],
                    [295, -157],
                    [114, -247],
                    [244, 165],
                    [212, 60],
                    [208, 106],
                    [175, 101],
                    [176, 241],
                    [67, 345],
                    [22, 496],
                    [48, 173],
                    [188, 155],
                    [294, 137],
                    [246, -21],
                    [169, 50],
                    [66, -125],
                    [-9, -285],
                    [-149, -351],
                    [-66, -360],
                    [51, -103],
                    [-42, -255],
                    [-69, -461],
                    [-71, 152],
                    [-58, -10]
                ],
                [
                    [24381, 59170],
                    [-314, 636],
                    [-144, 191],
                    [-226, 155],
                    [-156, -43],
                    [-223, -223],
                    [-140, -58],
                    [-196, 156],
                    [-208, 112],
                    [-260, 271],
                    [-208, 83],
                    [-314, 275],
                    [-233, 282],
                    [-70, 158],
                    [-155, 35],
                    [-284, 187],
                    [-116, 270],
                    [-299, 335],
                    [-139, 373],
                    [-66, 288],
                    [93, 57],
                    [-29, 169],
                    [64, 153],
                    [1, 204],
                    [-93, 266],
                    [-25, 235],
                    [-94, 298],
                    [-244, 587],
                    [-280, 462],
                    [-135, 368],
                    [-238, 241],
                    [-51, 145],
                    [42, 365],
                    [-142, 138],
                    [-164, 287],
                    [-69, 412],
                    [-149, 48],
                    [-162, 311],
                    [-130, 288],
                    [-12, 184],
                    [-149, 446],
                    [-99, 452],
                    [5, 227],
                    [-201, 234],
                    [-93, -25],
                    [-159, 163],
                    [-44, -240],
                    [46, -284],
                    [27, -444],
                    [95, -243],
                    [206, -407],
                    [46, -139],
                    [42, -42],
                    [37, -203],
                    [49, 8],
                    [56, -381],
                    [85, -150],
                    [59, -210],
                    [174, -300],
                    [92, -550],
                    [83, -259],
                    [77, -277],
                    [15, -311],
                    [134, -20],
                    [112, -268],
                    [100, -264],
                    [-6, -106],
                    [-117, -217],
                    [-49, 3],
                    [-74, 359],
                    [-181, 337],
                    [-201, 286],
                    [-142, 150],
                    [9, 432],
                    [-42, 320],
                    [-132, 183],
                    [-191, 264],
                    [-37, -76],
                    [-70, 154],
                    [-171, 143],
                    [-164, 343],
                    [20, 44],
                    [115, -33],
                    [103, 221],
                    [10, 266],
                    [-214, 422],
                    [-163, 163],
                    [-102, 369],
                    [-103, 388],
                    [-129, 472],
                    [-113, 531]
                ],
                [
                    [17464, 69802],
                    [316, 46],
                    [353, 64],
                    [-26, -116],
                    [419, -287],
                    [634, -416],
                    [552, 4],
                    [221, 0],
                    [0, 244],
                    [481, 0],
                    [102, -210],
                    [142, -186],
                    [165, -260],
                    [92, -309],
                    [69, -325],
                    [144, -178],
                    [230, -177],
                    [175, 467],
                    [227, 11],
                    [196, -236],
                    [139, -404],
                    [96, -346],
                    [164, -337],
                    [61, -414],
                    [78, -277],
                    [217, -184],
                    [197, -130],
                    [108, 18]
                ],
                [
                    [55993, 75539],
                    [95, 35],
                    [128, 9]
                ],
                [
                    [46619, 59216],
                    [93, 107],
                    [47, 348],
                    [88, 14],
                    [194, -165],
                    [157, 117],
                    [107, -39],
                    [42, 131],
                    [1114, 9],
                    [62, 414],
                    [-48, 73],
                    [-134, 2550],
                    [-134, 2550],
                    [425, 10]
                ],
                [
                    [51185, 61897],
                    [1, -1361],
                    [-152, -394],
                    [-24, -364],
                    [-247, -94],
                    [-379, -51],
                    [-102, -210],
                    [-178, -23]
                ],
                [
                    [46801, 57931],
                    [13, 184],
                    [-24, 229],
                    [-104, 166],
                    [-54, 338],
                    [-13, 368]
                ],
                [
                    [77375, 56448],
                    [-27, 439],
                    [86, 452],
                    [-94, 350],
                    [23, 644],
                    [-113, 306],
                    [-90, 707],
                    [-50, 746],
                    [-121, 490],
                    [-183, -297],
                    [-315, -421],
                    [-156, 53],
                    [-172, 138],
                    [96, 732],
                    [-58, 554],
                    [-218, 681],
                    [34, 213],
                    [-163, 76],
                    [-197, 481]
                ],
                [
                    [77809, 62643],
                    [-159, -137],
                    [-162, -256],
                    [-196, -26],
                    [-127, -639],
                    [-117, -107],
                    [134, -519],
                    [177, -431],
                    [113, -390],
                    [-101, -514],
                    [-96, -109],
                    [66, -296],
                    [185, -470],
                    [32, -330],
                    [-4, -274],
                    [108, -539],
                    [-152, -551],
                    [-135, -607]
                ],
                [
                    [55380, 75322],
                    [-58, 46],
                    [-78, 192],
                    [-120, 118]
                ],
                [
                    [55338, 76294],
                    [74, -101],
                    [40, -82],
                    [91, -63],
                    [106, -123],
                    [-22, -51]
                ],
                [
                    [74375, 79706],
                    [292, 102],
                    [530, 509],
                    [423, 278],
                    [242, -182],
                    [289, -8],
                    [186, -276],
                    [277, -22],
                    [402, -148],
                    [270, 411],
                    [-113, 348],
                    [288, 612],
                    [311, -244],
                    [252, -69],
                    [327, -152],
                    [53, -443],
                    [394, -248],
                    [263, 109],
                    [351, 78],
                    [279, -78],
                    [272, -284],
                    [168, -302],
                    [258, 6],
                    [350, -96],
                    [255, 146],
                    [366, 98],
                    [407, 416],
                    [166, -63],
                    [146, -198],
                    [331, 49]
                ],
                [
                    [59599, 43773],
                    [209, 48],
                    [334, -166],
                    [73, 74],
                    [193, 16],
                    [99, 177],
                    [167, -10],
                    [303, 230],
                    [221, 342]
                ],
                [
                    [61198, 44484],
                    [45, -265],
                    [-11, -588],
                    [34, -519],
                    [11, -923],
                    [49, -290],
                    [-83, -422],
                    [-108, -410],
                    [-177, -366],
                    [-254, -225],
                    [-313, -287],
                    [-313, -634],
                    [-107, -108],
                    [-194, -420],
                    [-115, -136],
                    [-23, -421],
                    [132, -448],
                    [54, -346],
                    [4, -177],
                    [49, 29],
                    [-8, -579],
                    [-45, -275],
                    [65, -101],
                    [-41, -245],
                    [-116, -211],
                    [-229, -199],
                    [-334, -320],
                    [-122, -219],
                    [24, -248],
                    [71, -40],
                    [-24, -311]
                ],
                [
                    [59119, 34780],
                    [-211, 5]
                ],
                [
                    [58908, 34785],
                    [-24, 261],
                    [-41, 265]
                ],
                [
                    [58843, 35311],
                    [-23, 212],
                    [49, 659],
                    [-72, 419],
                    [-133, 832]
                ],
                [
                    [58664, 37433],
                    [292, 671],
                    [74, 426],
                    [42, 53],
                    [31, 348],
                    [-45, 175],
                    [12, 442],
                    [54, 409],
                    [0, 748],
                    [-145, 190],
                    [-132, 43],
                    [-60, 146],
                    [-128, 125],
                    [-232, -12],
                    [-18, 220]
                ],
                [
                    [58409, 41417],
                    [-26, 421],
                    [843, 487]
                ],
                [
                    [59226, 42325],
                    [159, -284],
                    [77, 54],
                    [110, -149],
                    [16, -237],
                    [-59, -274],
                    [21, -417],
                    [181, -365],
                    [85, 410],
                    [120, 124],
                    [-24, 760],
                    [-116, 427],
                    [-100, 191],
                    [-97, -9],
                    [-77, 768],
                    [77, 449]
                ],
                [
                    [46619, 59216],
                    [-184, 405],
                    [-168, 435],
                    [-184, 157],
                    [-133, 173],
                    [-155, -6],
                    [-135, -129],
                    [-138, 51],
                    [-96, -189]
                ],
                [
                    [45426, 60113],
                    [-24, 318],
                    [78, 291],
                    [34, 557],
                    [-30, 583],
                    [-34, 294],
                    [28, 295],
                    [-72, 281],
                    [-146, 255]
                ],
                [
                    [45260, 62987],
                    [60, 197],
                    [1088, -4],
                    [-53, 853],
                    [68, 304],
                    [261, 53],
                    [-9, 1512],
                    [911, -31],
                    [1, 895]
                ],
                [
                    [59226, 42325],
                    [-147, 153],
                    [85, 549],
                    [87, 205],
                    [-53, 490],
                    [56, 479],
                    [47, 160],
                    [-71, 501],
                    [-131, 264]
                ],
                [
                    [59099, 45126],
                    [273, -110],
                    [55, -164],
                    [95, -275],
                    [77, -804]
                ],
                [
                    [78372, 54256],
                    [64, -56],
                    [164, -356],
                    [116, -396],
                    [16, -398],
                    [-29, -269],
                    [27, -203],
                    [20, -349],
                    [98, -163],
                    [109, -523],
                    [-5, -199],
                    [-197, -40],
                    [-263, 438],
                    [-329, 469],
                    [-32, 301],
                    [-161, 395],
                    [-38, 489],
                    [-100, 322],
                    [30, 431],
                    [-61, 250]
                ],
                [
                    [77801, 54399],
                    [48, 105],
                    [227, -258],
                    [22, -304],
                    [183, 71],
                    [91, 243]
                ],
                [
                    [80461, 51765],
                    [204, -202],
                    [214, 110],
                    [56, 500],
                    [119, 112],
                    [333, 128],
                    [199, 467],
                    [137, 374]
                ],
                [
                    [82069, 53798],
                    [214, 411],
                    [140, 462],
                    [112, 2],
                    [143, -299],
                    [13, -257],
                    [183, -165],
                    [231, -177],
                    [-20, -232],
                    [-186, -29],
                    [50, -289],
                    [-205, -201]
                ],
                [
                    [54540, 33696],
                    [-207, 446],
                    [-108, 432],
                    [-62, 575],
                    [-68, 428],
                    [-93, 910],
                    [-7, 707],
                    [-35, 322],
                    [-108, 243],
                    [-144, 489],
                    [-146, 708],
                    [-60, 371],
                    [-226, 577],
                    [-17, 453]
                ],
                [
                    [56448, 40227],
                    [228, 134],
                    [180, -34],
                    [109, -133],
                    [2, -49]
                ],
                [
                    [55526, 35946],
                    [0, -2182],
                    [-248, -302],
                    [-149, -43],
                    [-175, 112],
                    [-125, 43],
                    [-47, 252],
                    [-109, 162],
                    [-133, -292]
                ],
                [
                    [96049, 38125],
                    [228, -366],
                    [144, -272],
                    [-105, -142],
                    [-153, 160],
                    [-199, 266],
                    [-179, 313],
                    [-184, 416],
                    [-38, 201],
                    [119, -9],
                    [156, -201],
                    [122, -200],
                    [89, -166]
                ],
                [
                    [54125, 64088],
                    [68, -919],
                    [104, -153],
                    [4, -188],
                    [116, -203],
                    [-60, -254],
                    [-107, -1199],
                    [-15, -769],
                    [-354, -557],
                    [-120, -778],
                    [115, -219],
                    [0, -380],
                    [178, -13],
                    [-28, -279]
                ],
                [
                    [53939, 57955],
                    [-52, -13],
                    [-188, 647],
                    [-65, 24],
                    [-217, -331],
                    [-215, 173],
                    [-150, 34],
                    [-80, -83],
                    [-163, 18],
                    [-164, -252],
                    [-141, -14],
                    [-337, 305],
                    [-131, -145],
                    [-142, 10],
                    [-104, 223],
                    [-279, 221],
                    [-298, -70],
                    [-72, -128],
                    [-39, -340],
                    [-80, -238],
                    [-19, -527]
                ],
                [
                    [52361, 53399],
                    [-289, -213],
                    [-105, 31],
                    [-107, -132],
                    [-222, 13],
                    [-149, 370],
                    [-91, 427],
                    [-197, 389],
                    [-209, -7],
                    [-245, 1]
                ],
                [
                    [26191, 57131],
                    [-96, 186],
                    [-130, 238],
                    [-61, 200],
                    [-117, 185],
                    [-140, 267],
                    [31, 91],
                    [46, -88],
                    [21, 41]
                ],
                [
                    [26903, 59440],
                    [-24, -57],
                    [-14, -132],
                    [29, -216],
                    [-64, -202],
                    [-30, -237],
                    [-9, -261],
                    [15, -152],
                    [7, -266],
                    [-43, -58],
                    [-26, -253],
                    [19, -156],
                    [-56, -151],
                    [12, -159],
                    [43, -97]
                ],
                [
                    [50920, 80916],
                    [143, 162],
                    [244, 869],
                    [380, 248],
                    [231, -17]
                ],
                [
                    [58639, 91676],
                    [-473, -237],
                    [-224, -54]
                ],
                [
                    [55734, 91409],
                    [-172, -24],
                    [-41, -389],
                    [-523, 95],
                    [-74, -329],
                    [-267, 2],
                    [-183, -421],
                    [-278, -655],
                    [-431, -831],
                    [101, -202],
                    [-97, -234],
                    [-275, 10],
                    [-180, -554],
                    [17, -784],
                    [177, -300],
                    [-92, -694],
                    [-231, -405],
                    [-122, -341]
                ],
                [
                    [53063, 85353],
                    [-187, 363],
                    [-548, -684],
                    [-371, -138],
                    [-384, 301],
                    [-99, 635],
                    [-88, 1363],
                    [256, 381],
                    [733, 496],
                    [549, 609],
                    [508, 824],
                    [668, 1141],
                    [465, 444],
                    [763, 741],
                    [610, 259],
                    [457, -31],
                    [423, 489],
                    [506, -26],
                    [499, 118],
                    [869, -433],
                    [-358, -158],
                    [305, -371]
                ],
                [
                    [56867, 96577],
                    [-620, -241],
                    [-490, 137],
                    [191, 152],
                    [-167, 189],
                    [575, 119],
                    [110, -222],
                    [401, -134]
                ],
                [
                    [55069, 97669],
                    [915, -440],
                    [-699, -233],
                    [-155, -435],
                    [-243, -111],
                    [-132, -490],
                    [-335, -23],
                    [-598, 361],
                    [252, 210],
                    [-416, 170],
                    [-541, 499],
                    [-216, 463],
                    [757, 212],
                    [152, -207],
                    [396, 8],
                    [105, 202],
                    [408, 20],
                    [350, -206]
                ],
                [
                    [57068, 98086],
                    [545, -207],
                    [-412, -318],
                    [-806, -70],
                    [-819, 98],
                    [-50, 163],
                    [-398, 11],
                    [-304, 271],
                    [858, 165],
                    [403, -142],
                    [281, 177],
                    [702, -148]
                ],
                [
                    [98060, 26404],
                    [63, -244],
                    [198, 239],
                    [80, -249],
                    [0, -249],
                    [-103, -274],
                    [-182, -435],
                    [-142, -238],
                    [103, -284],
                    [-214, -7],
                    [-238, -223],
                    [-75, -387],
                    [-157, -597],
                    [-219, -264],
                    [-138, -169],
                    [-256, 13],
                    [-180, 194],
                    [-302, 42],
                    [-46, 217],
                    [149, 438],
                    [349, 583],
                    [179, 111],
                    [200, 225],
                    [238, 310],
                    [167, 306],
                    [123, 441],
                    [106, 149],
                    [41, 330],
                    [195, 273],
                    [61, -251]
                ],
                [
                    [98502, 29218],
                    [202, -622],
                    [5, 403],
                    [126, -161],
                    [41, -447],
                    [224, -192],
                    [188, -48],
                    [158, 226],
                    [141, -69],
                    [-67, -524],
                    [-85, -345],
                    [-212, 12],
                    [-74, -179],
                    [26, -254],
                    [-41, -110],
                    [-105, -319],
                    [-138, -404],
                    [-214, -236],
                    [-48, 155],
                    [-116, 85],
                    [160, 486],
                    [-91, 326],
                    [-299, 236],
                    [8, 214],
                    [201, 206],
                    [47, 455],
                    [-13, 382],
                    [-113, 396],
                    [8, 104],
                    [-133, 244],
                    [-218, 523],
                    [-117, 418],
                    [104, 46],
                    [151, -328],
                    [216, -153],
                    [78, -526]
                ],
                [
                    [64752, 60417],
                    [-91, 413],
                    [-217, 975]
                ],
                [
                    [64444, 61805],
                    [833, 591],
                    [185, 1182],
                    [-127, 418]
                ],
                [
                    [65665, 65306],
                    [125, -404],
                    [155, -214],
                    [203, -78],
                    [165, -107],
                    [125, -339],
                    [75, -196],
                    [100, -75],
                    [-1, -132],
                    [-101, -352],
                    [-44, -166],
                    [-117, -189],
                    [-104, -404],
                    [-126, 31],
                    [-58, -141],
                    [-44, -300],
                    [34, -395],
                    [-26, -72],
                    [-128, 2],
                    [-174, -221],
                    [-27, -288],
                    [-63, -125],
                    [-173, 5],
                    [-109, -149],
                    [1, -238],
                    [-134, -165],
                    [-153, 56],
                    [-186, -199],
                    [-128, -34]
                ],
                [
                    [65575, 65974],
                    [80, 201],
                    [35, -51],
                    [-26, -244],
                    [-37, -108]
                ],
                [
                    [68937, 64577],
                    [-203, 150],
                    [-83, 424],
                    [-215, 450],
                    [-512, -111],
                    [-451, -11],
                    [-391, -83]
                ],
                [
                    [28366, 54848],
                    [-93, 170],
                    [-59, 319],
                    [68, 158],
                    [-70, 40],
                    [-52, 196],
                    [-138, 164],
                    [-122, -38],
                    [-56, -205],
                    [-112, -149],
                    [-61, -20],
                    [-27, -123],
                    [132, -321],
                    [-75, -76],
                    [-40, -87],
                    [-130, -30],
                    [-48, 353],
                    [-36, -101],
                    [-92, 35],
                    [-56, 238],
                    [-114, 39],
                    [-72, 69],
                    [-119, -1],
                    [-8, -128],
                    [-32, 89]
                ],
                [
                    [27070, 56232],
                    [100, -212],
                    [-6, -126],
                    [111, -26],
                    [26, 48],
                    [77, -145],
                    [136, 42],
                    [119, 150],
                    [168, 119],
                    [95, 176],
                    [153, -34],
                    [-10, -58],
                    [155, -21],
                    [124, -102],
                    [90, -177],
                    [105, -164]
                ],
                [
                    [30452, 39739],
                    [-279, 340],
                    [-24, 242],
                    [-551, 593],
                    [-498, 646],
                    [-214, 365],
                    [-115, 488],
                    [46, 170],
                    [-236, 775],
                    [-274, 1090],
                    [-262, 1177],
                    [-114, 269],
                    [-87, 435],
                    [-216, 386],
                    [-198, 239],
                    [90, 264],
                    [-134, 563],
                    [86, 414],
                    [221, 373]
                ],
                [
                    [85104, 55551],
                    [28, -392],
                    [16, -332],
                    [-94, -540],
                    [-102, 602],
                    [-130, -300],
                    [89, -435],
                    [-79, -277],
                    [-327, 343],
                    [-78, 428],
                    [84, 280],
                    [-176, 280],
                    [-87, -245],
                    [-131, 23],
                    [-205, -330],
                    [-46, 173],
                    [109, 498],
                    [175, 166],
                    [151, 223],
                    [98, -268],
                    [212, 162],
                    [45, 264],
                    [196, 15],
                    [-16, 457],
                    [225, -280],
                    [23, -297],
                    [20, -218]
                ],
                [
                    [84439, 56653],
                    [-100, -195],
                    [-87, -373],
                    [-87, -175],
                    [-171, 409],
                    [57, 158],
                    [70, 165],
                    [30, 367],
                    [153, 35],
                    [-44, -398],
                    [205, 570],
                    [-26, -563]
                ],
                [
                    [82917, 56084],
                    [-369, -561],
                    [136, 414],
                    [200, 364],
                    [167, 409],
                    [146, 587],
                    [49, -482],
                    [-183, -325],
                    [-146, -406]
                ],
                [
                    [83856, 57606],
                    [166, -183],
                    [177, 1],
                    [-5, -247],
                    [-129, -251],
                    [-176, -178],
                    [-10, 275],
                    [20, 301],
                    [-43, 282]
                ],
                [
                    [84861, 57766],
                    [78, -660],
                    [-214, 157],
                    [5, -199],
                    [68, -364],
                    [-132, -133],
                    [-11, 416],
                    [-84, 31],
                    [-43, 357],
                    [163, -47],
                    [-4, 224],
                    [-169, 451],
                    [266, -13],
                    [77, -220]
                ],
                [
                    [83757, 58301],
                    [-74, -510],
                    [-119, 295],
                    [-142, 450],
                    [238, -22],
                    [97, -213]
                ],
                [
                    [83700, 61512],
                    [171, -168],
                    [85, 153],
                    [26, -150],
                    [-46, -245],
                    [95, -423],
                    [-73, -491],
                    [-164, -196],
                    [-43, -476],
                    [62, -471],
                    [147, -65],
                    [123, 70],
                    [347, -328],
                    [-27, -321],
                    [91, -142],
                    [-29, -272],
                    [-216, 290],
                    [-103, 310],
                    [-71, -217],
                    [-177, 354],
                    [-253, -87],
                    [-138, 130],
                    [14, 244],
                    [87, 151],
                    [-83, 136],
                    [-36, -213],
                    [-137, 340],
                    [-41, 257],
                    [-11, 566],
                    [112, -195],
                    [29, 925],
                    [90, 535],
                    [169, -1]
                ],
                [
                    [93299, 46550],
                    [-78, -59],
                    [-120, 227],
                    [-122, 375],
                    [-59, 450],
                    [38, 57],
                    [30, -175],
                    [84, -134],
                    [135, -375],
                    [131, -200],
                    [-39, -166]
                ],
                [
                    [92217, 47343],
                    [-146, -48],
                    [-44, -166],
                    [-152, -144],
                    [-142, -138],
                    [-148, 1],
                    [-228, 171],
                    [-158, 165],
                    [23, 183],
                    [249, -86],
                    [152, 46],
                    [42, 283],
                    [40, 15],
                    [27, -314],
                    [158, 45],
                    [78, 202],
                    [155, 211],
                    [-30, 348],
                    [166, 11],
                    [56, -97],
                    [-5, -327],
                    [-93, -361]
                ],
                [
                    [89166, 49043],
                    [482, -407],
                    [513, -338],
                    [192, -302],
                    [154, -297],
                    [43, -349],
                    [462, -365],
                    [68, -313],
                    [-256, -64],
                    [62, -393],
                    [248, -388],
                    [180, -627],
                    [159, 20],
                    [-11, -262],
                    [215, -100],
                    [-84, -111],
                    [295, -249],
                    [-30, -171],
                    [-184, -41],
                    [-69, 153],
                    [-238, 66],
                    [-281, 89],
                    [-216, 377],
                    [-158, 325],
                    [-144, 517],
                    [-362, 259],
                    [-235, -169],
                    [-170, -195],
                    [35, -436],
                    [-218, -203],
                    [-155, 99],
                    [-288, 25]
                ],
                [
                    [92538, 47921],
                    [-87, -157],
                    [-52, 348],
                    [-65, 229],
                    [-126, 193],
                    [-158, 252],
                    [-200, 174],
                    [77, 143],
                    [150, -166],
                    [94, -130],
                    [117, -142],
                    [111, -248],
                    [106, -189],
                    [33, -307]
                ],
                [
                    [53922, 82340],
                    [189, 174],
                    [434, 273],
                    [350, 200],
                    [277, -100],
                    [21, -144],
                    [268, -7]
                ],
                [
                    [55461, 82736],
                    [342, -67],
                    [511, 9]
                ],
                [
                    [56535, 81053],
                    [139, -515],
                    [-29, -166],
                    [-138, -69],
                    [-252, -491],
                    [71, -266],
                    [-60, 35]
                ],
                [
                    [56266, 79581],
                    [-264, 227],
                    [-200, -84],
                    [-131, 61],
                    [-165, -127],
                    [-140, 210],
                    [-114, -81],
                    [-16, 36]
                ],
                [
                    [31588, 61519],
                    [142, -52],
                    [50, -118],
                    [-71, -149],
                    [-209, 4],
                    [-163, -21],
                    [-16, 253],
                    [40, 86],
                    [227, -3]
                ],
                [
                    [86288, 75628],
                    [39, -104]
                ],
                [
                    [86327, 75524],
                    [-106, 36],
                    [-120, -200],
                    [-83, -202],
                    [10, -424],
                    [-143, -130],
                    [-50, -105],
                    [-104, -174],
                    [-185, -97],
                    [-121, -159],
                    [-9, -256],
                    [-32, -65],
                    [111, -96],
                    [157, -259]
                ],
                [
                    [85048, 72883],
                    [-135, 112],
                    [-34, -111],
                    [-81, -49],
                    [-10, 112],
                    [-72, 54],
                    [-75, 94],
                    [76, 260],
                    [66, 69],
                    [-25, 108],
                    [71, 319],
                    [-18, 96],
                    [-163, 65],
                    [-131, 158]
                ],
                [
                    [47929, 72498],
                    [-112, -153],
                    [-146, 83],
                    [-143, -65],
                    [42, 462],
                    [-26, 363],
                    [-124, 55],
                    [-67, 224],
                    [22, 386],
                    [111, 215],
                    [20, 239],
                    [58, 355],
                    [-6, 250],
                    [-56, 212],
                    [-12, 200]
                ],
                [
                    [64113, 65205],
                    [-18, 430],
                    [75, 310],
                    [76, 64],
                    [84, -185],
                    [5, -346],
                    [-61, -348]
                ],
                [
                    [64274, 65130],
                    [-77, -42],
                    [-84, 117]
                ],
                [
                    [56308, 78869],
                    [120, 127],
                    [172, -65],
                    [178, -3],
                    [129, -144],
                    [95, 91],
                    [205, 56],
                    [69, 139],
                    [118, 0]
                ],
                [
                    [57842, 77455],
                    [124, -109],
                    [131, 95],
                    [126, -101]
                ],
                [
                    [58223, 77340],
                    [6, -152],
                    [-135, -128],
                    [-84, 56],
                    [-78, -713]
                ],
                [
                    [56293, 76715],
                    [-51, 103],
                    [65, 99],
                    [-69, 74],
                    [-87, -133],
                    [-162, 172],
                    [-22, 244],
                    [-169, 139],
                    [-31, 188],
                    [-151, 232]
                ],
                [
                    [89901, 80562],
                    [280, -1046],
                    [-411, 195],
                    [-171, -854],
                    [271, -605],
                    [-8, -413],
                    [-211, 356],
                    [-182, -457],
                    [-51, 496],
                    [31, 575],
                    [-32, 638],
                    [64, 446],
                    [13, 790],
                    [-163, 581],
                    [24, 808],
                    [257, 271],
                    [-110, 274],
                    [123, 83],
                    [73, -391],
                    [96, -569],
                    [-7, -581],
                    [114, -597]
                ],
                [
                    [55461, 82736],
                    [63, 260],
                    [383, 191]
                ],
                [
                    [99999, 92429],
                    [-305, -30],
                    [-49, 187],
                    [-99645, 247],
                    [36, 24],
                    [235, -1],
                    [402, -169],
                    [-24, -81],
                    [-286, -141],
                    [-363, -36],
                    [99999, 0]
                ],
                [
                    [89889, 93835],
                    [-421, -4],
                    [-569, 66],
                    [-49, 31],
                    [263, 234],
                    [348, 54],
                    [394, -226],
                    [34, -155]
                ],
                [
                    [91869, 94941],
                    [-321, -234],
                    [-444, 53],
                    [-516, 233],
                    [66, 192],
                    [518, -89],
                    [697, -155]
                ],
                [
                    [90301, 95224],
                    [-219, -439],
                    [-1023, 16],
                    [-461, -139],
                    [-550, 384],
                    [149, 406],
                    [366, 111],
                    [734, -26],
                    [1004, -313]
                ],
                [
                    [65981, 92363],
                    [-164, -52],
                    [-907, 77],
                    [-74, 262],
                    [-503, 158],
                    [-40, 320],
                    [284, 126],
                    [-10, 323],
                    [551, 503],
                    [-255, 73],
                    [665, 518],
                    [-75, 268],
                    [621, 312],
                    [917, 380],
                    [925, 110],
                    [475, 220],
                    [541, 76],
                    [193, -233],
                    [-187, -184],
                    [-984, -293],
                    [-848, -282],
                    [-863, -562],
                    [-414, -577],
                    [-435, -568],
                    [56, -491],
                    [531, -484]
                ],
                [
                    [63639, 77993],
                    [-127, -350],
                    [-269, -97],
                    [-276, -610],
                    [252, -561],
                    [-27, -398],
                    [303, -696]
                ],
                [
                    [61098, 76242],
                    [-354, 499],
                    [-317, 223],
                    [-240, 347],
                    [202, 95],
                    [231, 494],
                    [-156, 234],
                    [410, 241],
                    [-8, 129],
                    [-249, -95]
                ],
                [
                    [60617, 78409],
                    [9, 262],
                    [143, 165],
                    [269, 43],
                    [44, 197],
                    [-62, 326],
                    [113, 310],
                    [-3, 173],
                    [-410, 192],
                    [-162, -6],
                    [-172, 277],
                    [-213, -94],
                    [-352, 208],
                    [6, 116],
                    [-99, 256],
                    [-222, 29],
                    [-23, 183],
                    [70, 120],
                    [-178, 334],
                    [-288, -57],
                    [-84, 30],
                    [-70, -134],
                    [-104, 23]
                ],
                [
                    [57772, 85719],
                    [316, 327],
                    [-291, 280]
                ],
                [
                    [58639, 91676],
                    [286, 206],
                    [456, -358],
                    [761, -140],
                    [1050, -668],
                    [213, -281],
                    [18, -393],
                    [-308, -311],
                    [-454, -157],
                    [-1240, 449],
                    [-204, -75],
                    [453, -433],
                    [18, -274],
                    [18, -604],
                    [358, -180],
                    [217, -153],
                    [36, 286],
                    [-168, 254],
                    [177, 224],
                    [672, -368],
                    [233, 144],
                    [-186, 433],
                    [647, 578],
                    [256, -34],
                    [260, -206],
                    [161, 406],
                    [-231, 352],
                    [136, 353],
                    [-204, 367],
                    [777, -190],
                    [158, -331],
                    [-351, -73],
                    [1, -328],
                    [219, -203],
                    [429, 128],
                    [68, 377],
                    [580, 282],
                    [970, 507],
                    [209, -29],
                    [-273, -359],
                    [344, -61],
                    [199, 202],
                    [521, 16],
                    [412, 245],
                    [317, -356],
                    [315, 391],
                    [-291, 343],
                    [145, 195],
                    [820, -179],
                    [385, -185],
                    [1006, -675],
                    [186, 309],
                    [-282, 313],
                    [-8, 125],
                    [-335, 58],
                    [92, 280],
                    [-149, 461],
                    [-8, 189],
                    [512, 535],
                    [183, 537],
                    [206, 116],
                    [736, -156],
                    [57, -328],
                    [-263, -479],
                    [173, -189],
                    [89, -413],
                    [-63, -809],
                    [307, -362],
                    [-120, -395],
                    [-544, -839],
                    [318, -87],
                    [110, 213],
                    [306, 151],
                    [74, 293],
                    [240, 281],
                    [-162, 336],
                    [130, 390],
                    [-304, 49],
                    [-67, 328],
                    [222, 593],
                    [-361, 482],
                    [497, 398],
                    [-64, 421],
                    [139, 13],
                    [145, -328],
                    [-109, -570],
                    [297, -108],
                    [-127, 426],
                    [465, 233],
                    [577, 31],
                    [513, -337],
                    [-247, 492],
                    [-28, 630],
                    [483, 119],
                    [669, -26],
                    [602, 77],
                    [-226, 309],
                    [321, 388],
                    [319, 16],
                    [540, 293],
                    [734, 79],
                    [93, 162],
                    [729, 55],
                    [227, -133],
                    [624, 314],
                    [510, -10],
                    [77, 255],
                    [265, 252],
                    [656, 242],
                    [476, -191],
                    [-378, -146],
                    [629, -90],
                    [75, -292],
                    [254, 143],
                    [812, -7],
                    [626, -289],
                    [223, -221],
                    [-69, -307],
                    [-307, -175],
                    [-730, -328],
                    [-209, -175],
                    [345, -83],
                    [410, -149],
                    [251, 112],
                    [141, -379],
                    [122, 153],
                    [444, 93],
                    [892, -97],
                    [67, -276],
                    [1162, -88],
                    [15, 451],
                    [590, -104],
                    [443, 4],
                    [449, -312],
                    [128, -378],
                    [-165, -247],
                    [349, -465],
                    [437, -240],
                    [268, 620],
                    [446, -266],
                    [473, 159],
                    [538, -182],
                    [204, 166],
                    [455, -83],
                    [-201, 549],
                    [367, 256],
                    [2509, -384],
                    [236, -351],
                    [727, -451],
                    [1122, 112],
                    [553, -98],
                    [231, -244],
                    [-33, -432],
                    [342, -168],
                    [372, 121],
                    [492, 15],
                    [525, -116],
                    [526, 66],
                    [484, -526],
                    [344, 189],
                    [-224, 378],
                    [123, 262],
                    [886, -165],
                    [578, 36],
                    [799, -282],
                    [-99610, -258],
                    [681, -451],
                    [728, -588],
                    [-24, -367],
                    [187, -147],
                    [-64, 429],
                    [754, -88],
                    [544, -553],
                    [-276, -257],
                    [-455, -61],
                    [-7, -578],
                    [-111, -122],
                    [-260, 17],
                    [-212, 206],
                    [-369, 172],
                    [-62, 257],
                    [-283, 96],
                    [-315, -76],
                    [-151, 207],
                    [60, 219],
                    [-333, -140],
                    [126, -278],
                    [-158, -251],
                    [99997, -3],
                    [-357, -260],
                    [-360, 44],
                    [250, -315],
                    [166, -487],
                    [128, -159],
                    [32, -244],
                    [-71, -157],
                    [-518, 129],
                    [-777, -445],
                    [-247, -69],
                    [-425, -415],
                    [-403, -362],
                    [-102, -269],
                    [-397, 409],
                    [-724, -464],
                    [-126, 219],
                    [-268, -253],
                    [-371, 81],
                    [-90, -388],
                    [-333, -572],
                    [10, -239],
                    [316, -132],
                    [-37, -860],
                    [-258, -22],
                    [-119, -494],
                    [116, -255],
                    [-486, -302],
                    [-96, -674],
                    [-415, -144],
                    [-83, -600],
                    [-400, -551],
                    [-103, 407],
                    [-119, 862],
                    [-155, 1313],
                    [134, 819],
                    [234, 353],
                    [14, 276],
                    [432, 132],
                    [496, 744],
                    [479, 608],
                    [499, 471],
                    [223, 833],
                    [-337, -50],
                    [-167, -487],
                    [-705, -649],
                    [-227, 727],
                    [-717, -201],
                    [-696, -990],
                    [230, -362],
                    [-620, -154],
                    [-430, -61],
                    [20, 427],
                    [-431, 90],
                    [-344, -291],
                    [-850, 102],
                    [-914, -175],
                    [-899, -1153],
                    [-1065, -1394],
                    [438, -74],
                    [136, -370],
                    [270, -132],
                    [178, 295],
                    [305, -38],
                    [401, -650],
                    [9, -503],
                    [-217, -590],
                    [-23, -705],
                    [-126, -945],
                    [-418, -855],
                    [-94, -409],
                    [-377, -688],
                    [-374, -682],
                    [-179, -349],
                    [-370, -346],
                    [-175, -8],
                    [-175, 287],
                    [-373, -432],
                    [-43, -197]
                ],
                [
                    [79187, 96845],
                    [-1566, -228],
                    [507, 776],
                    [229, 66],
                    [208, -38],
                    [704, -336],
                    [-82, -240]
                ],
                [
                    [64204, 98169],
                    [-373, -78],
                    [-250, -45],
                    [-39, -97],
                    [-324, -98],
                    [-301, 140],
                    [158, 185],
                    [-618, 18],
                    [542, 107],
                    [422, 8],
                    [57, -160],
                    [159, 142],
                    [262, 97],
                    [412, -129],
                    [-107, -90]
                ],
                [
                    [77760, 97184],
                    [-606, -73],
                    [-773, 170],
                    [-462, 226],
                    [-213, 423],
                    [-379, 117],
                    [722, 404],
                    [600, 133],
                    [540, -297],
                    [640, -572],
                    [-69, -531]
                ],
                [
                    [58449, 49909],
                    [110, -333],
                    [-16, -348],
                    [-80, -74]
                ],
                [
                    [58216, 49787],
                    [67, -60],
                    [166, 182]
                ],
                [
                    [45260, 62987],
                    [12, 249]
                ],
                [
                    [61883, 60238],
                    [-37, 252],
                    [-83, 178],
                    [-22, 236],
                    [-143, 212],
                    [-148, 495],
                    [-79, 482],
                    [-192, 406],
                    [-124, 97],
                    [-184, 563],
                    [-32, 411],
                    [12, 350],
                    [-159, 655],
                    [-130, 231],
                    [-150, 122],
                    [-92, 339],
                    [15, 133],
                    [-77, 306],
                    [-81, 132],
                    [-108, 440],
                    [-170, 476],
                    [-141, 406],
                    [-139, -3],
                    [44, 325],
                    [12, 206],
                    [34, 236]
                ],
                [
                    [63448, 67449],
                    [109, -510],
                    [137, -135],
                    [47, -207],
                    [190, -249],
                    [16, -243],
                    [-27, -197],
                    [35, -199],
                    [80, -165],
                    [37, -194],
                    [41, -145]
                ],
                [
                    [64274, 65130],
                    [53, -226]
                ],
                [
                    [64444, 61805],
                    [-801, -226],
                    [-259, -266],
                    [-199, -620],
                    [-130, -99],
                    [-70, 197],
                    [-106, -30],
                    [-269, 60],
                    [-50, 59],
                    [-321, -14],
                    [-75, -53],
                    [-114, 153],
                    [-74, -290],
                    [28, -249],
                    [-121, -189]
                ],
                [
                    [59434, 56171],
                    [-39, 12],
                    [5, 294],
                    [-33, 203],
                    [-143, 233],
                    [-34, 426],
                    [34, 436],
                    [-129, 41],
                    [-19, -132],
                    [-167, -30],
                    [67, -173],
                    [23, -355],
                    [-152, -324],
                    [-138, -426],
                    [-144, -61],
                    [-233, 345],
                    [-105, -122],
                    [-29, -172],
                    [-143, -112],
                    [-9, -122],
                    [-277, 0],
                    [-38, 122],
                    [-200, 20],
                    [-100, -101],
                    [-77, 51],
                    [-143, 344],
                    [-48, 163],
                    [-200, -81],
                    [-76, -274],
                    [-72, -528],
                    [-95, -111],
                    [-85, -65]
                ],
                [
                    [56635, 55672],
                    [-23, 28]
                ],
                [
                    [56351, 57163],
                    [3, 143],
                    [-102, 174],
                    [-3, 343],
                    [-58, 228],
                    [-98, -34],
                    [28, 217],
                    [72, 246],
                    [-32, 245],
                    [92, 181],
                    [-58, 138],
                    [73, 365],
                    [127, 435],
                    [240, -41],
                    [-14, 2345]
                ],
                [
                    [60240, 63578],
                    [90, -580],
                    [-61, -107],
                    [40, -608],
                    [102, -706],
                    [106, -145],
                    [152, -219]
                ],
                [
                    [59433, 56242],
                    [1, -71]
                ],
                [
                    [59434, 56171],
                    [3, -460]
                ],
                [
                    [59445, 53091],
                    [-171, -272],
                    [-195, 1],
                    [-224, -138],
                    [-176, 132],
                    [-115, -161]
                ],
                [
                    [56824, 55442],
                    [-189, 230]
                ],
                [
                    [45357, 58612],
                    [-115, 460],
                    [-138, 210],
                    [122, 112],
                    [134, 415],
                    [66, 304]
                ],
                [
                    [45367, 57897],
                    [-46, 453]
                ],
                [
                    [95032, 44386],
                    [78, -203],
                    [-194, 4],
                    [-106, 363],
                    [166, -142],
                    [56, -22]
                ],
                [
                    [94680, 44747],
                    [-108, -14],
                    [-170, 60],
                    [-58, 91],
                    [17, 235],
                    [183, -93],
                    [91, -124],
                    [45, -155]
                ],
                [
                    [94910, 44908],
                    [-42, -109],
                    [-206, 512],
                    [-57, 353],
                    [94, 0],
                    [100, -473],
                    [111, -283]
                ],
                [
                    [94409, 45654],
                    [12, -119],
                    [-218, 251],
                    [-152, 212],
                    [-104, 197],
                    [41, 60],
                    [128, -142],
                    [228, -272],
                    [65, -187]
                ],
                [
                    [93760, 46238],
                    [-56, -33],
                    [-121, 134],
                    [-114, 243],
                    [14, 99],
                    [166, -250],
                    [111, -193]
                ],
                [
                    [46822, 54589],
                    [-75, 44],
                    [-200, 238],
                    [-144, 316],
                    [-49, 216],
                    [-34, 437]
                ],
                [
                    [25613, 58487],
                    [-31, -139],
                    [-161, 9],
                    [-100, 57],
                    [-115, 117],
                    [-154, 37],
                    [-79, 127]
                ],
                [
                    [61984, 57352],
                    [91, -109],
                    [54, -245],
                    [125, -247],
                    [138, -2],
                    [262, 151],
                    [302, 70],
                    [245, 184],
                    [138, 39],
                    [99, 108],
                    [158, 20]
                ],
                [
                    [63596, 57321],
                    [-2, -9],
                    [-1, -244],
                    [0, -596],
                    [0, -308],
                    [-125, -363],
                    [-194, -493]
                ],
                [
                    [63596, 57321],
                    [89, 12],
                    [128, 88],
                    [147, 59],
                    [132, 202],
                    [105, 2],
                    [6, -163],
                    [-25, -344],
                    [1, -310],
                    [-59, -214],
                    [-78, -639],
                    [-134, -659],
                    [-172, -755],
                    [-238, -866],
                    [-237, -661],
                    [-327, -806],
                    [-278, -479],
                    [-415, -586],
                    [-259, -450],
                    [-304, -715],
                    [-64, -312],
                    [-63, -140]
                ],
                [
                    [34125, 54109],
                    [333, -119],
                    [30, 107],
                    [225, 43],
                    [298, -159]
                ],
                [
                    [34889, 53069],
                    [109, -351],
                    [-49, -254],
                    [-24, -270],
                    [-71, -248]
                ],
                [
                    [56266, 79581],
                    [-77, -154],
                    [-55, -238]
                ],
                [
                    [53809, 77462],
                    [62, 54]
                ],
                [
                    [56639, 89578],
                    [-478, -167],
                    [-269, -413],
                    [43, -361],
                    [-441, -475],
                    [-537, -509],
                    [-202, -832],
                    [198, -416],
                    [265, -328],
                    [-255, -666],
                    [-289, -138],
                    [-106, -992],
                    [-157, -554],
                    [-337, 57],
                    [-158, -468],
                    [-321, -27],
                    [-89, 558],
                    [-232, 671],
                    [-211, 835]
                ],
                [
                    [58908, 34785],
                    [-56, -263],
                    [-163, -63],
                    [-166, 320],
                    [-2, 204],
                    [76, 222],
                    [26, 172],
                    [80, 42],
                    [140, -108]
                ],
                [
                    [59999, 71049],
                    [-26, 452],
                    [68, 243]
                ],
                [
                    [60041, 71744],
                    [74, 129],
                    [75, 130],
                    [15, 329],
                    [91, -115],
                    [306, 165],
                    [147, -112],
                    [229, 2],
                    [320, 222],
                    [149, -10],
                    [316, 92]
                ],
                [
                    [50518, 54209],
                    [-224, -126]
                ],
                [
                    [78495, 57780],
                    [-249, 271],
                    [-238, -11],
                    [41, 464],
                    [-245, -3],
                    [-22, -650],
                    [-150, -863],
                    [-90, -522],
                    [19, -428],
                    [181, -18],
                    [113, -539],
                    [50, -512],
                    [155, -338],
                    [168, -69],
                    [144, -306]
                ],
                [
                    [77801, 54399],
                    [-110, 227],
                    [-47, 292],
                    [-148, 334],
                    [-135, 280],
                    [-45, -347],
                    [-53, 328],
                    [30, 369],
                    [82, 566]
                ],
                [
                    [68841, 72526],
                    [156, 598],
                    [-60, 440],
                    [-204, 140],
                    [72, 261],
                    [232, -28],
                    [132, 326],
                    [89, 380],
                    [371, 137],
                    [-58, -274],
                    [40, -164],
                    [114, 15]
                ],
                [
                    [64978, 72558],
                    [-52, 417],
                    [40, 618],
                    [-216, 200],
                    [71, 405],
                    [-184, 34],
                    [61, 498],
                    [262, -145],
                    [244, 189],
                    [-202, 355],
                    [-80, 338],
                    [-224, -151],
                    [-28, -433],
                    [-87, 383]
                ],
                [
                    [65546, 74986],
                    [313, 8],
                    [-45, 297],
                    [237, 204],
                    [234, 343],
                    [374, -312],
                    [30, -471],
                    [106, -121],
                    [301, 27],
                    [93, -108],
                    [137, -609],
                    [317, -408],
                    [181, -278],
                    [291, -289],
                    [369, -253],
                    [-7, -362]
                ],
                [
                    [84713, 45326],
                    [32, 139],
                    [239, 133],
                    [194, 20],
                    [87, 74],
                    [105, -74],
                    [-102, -160],
                    [-289, -258],
                    [-233, -170]
                ],
                [
                    [32866, 56937],
                    [160, 77],
                    [58, -21],
                    [-11, -440],
                    [-232, -65],
                    [-50, 53],
                    [81, 163],
                    [-6, 233]
                ],
                [
                    [52339, 72408],
                    [302, 239],
                    [195, -71],
                    [-9, -299],
                    [236, 217],
                    [20, -113],
                    [-139, -290],
                    [-2, -273],
                    [96, -147],
                    [-36, -511],
                    [-183, -297],
                    [53, -322],
                    [143, -10],
                    [70, -281],
                    [106, -92]
                ],
                [
                    [60041, 71744],
                    [-102, 268],
                    [105, 222],
                    [-169, -51],
                    [-233, 136],
                    [-191, -340],
                    [-421, -66],
                    [-225, 317],
                    [-300, 20],
                    [-64, -245],
                    [-192, -70],
                    [-268, 314],
                    [-303, -11],
                    [-165, 588],
                    [-203, 328],
                    [135, 459],
                    [-176, 283],
                    [308, 565],
                    [428, 23],
                    [117, 449],
                    [529, -78],
                    [334, 383],
                    [324, 167],
                    [459, 13],
                    [485, -417],
                    [399, -228],
                    [323, 91],
                    [239, -53],
                    [328, 309]
                ],
                [
                    [57776, 75399],
                    [33, -228],
                    [243, -190],
                    [-51, -145],
                    [-330, -33],
                    [-118, -182],
                    [-232, -319],
                    [-87, 276],
                    [3, 121]
                ],
                [
                    [83826, 64992],
                    [-167, -947],
                    [-119, -485],
                    [-146, 499],
                    [-32, 438],
                    [163, 581],
                    [223, 447],
                    [127, -176],
                    [-49, -357]
                ],
                [
                    [60889, 47817],
                    [-128, -728],
                    [16, -335],
                    [178, -216],
                    [8, -153],
                    [-76, -357],
                    [16, -180],
                    [-18, -282],
                    [97, -370],
                    [115, -583],
                    [101, -129]
                ],
                [
                    [59099, 45126],
                    [-157, 177],
                    [-177, 100],
                    [-111, 99],
                    [-116, 150]
                ],
                [
                    [58388, 46397],
                    [-161, 331],
                    [-55, 342]
                ],
                [
                    [58449, 49909],
                    [98, 71],
                    [304, -7],
                    [566, 45]
                ],
                [
                    [60617, 78409],
                    [-222, -48],
                    [-185, -191],
                    [-260, -31],
                    [-239, -220],
                    [16, -368],
                    [136, -142],
                    [284, 35],
                    [-55, -210],
                    [-304, -103],
                    [-377, -342],
                    [-154, 121],
                    [61, 277],
                    [-304, 173],
                    [50, 113],
                    [265, 197],
                    [-80, 135],
                    [-432, 149],
                    [-19, 221],
                    [-257, -73],
                    [-103, -325],
                    [-215, -437]
                ],
                [
                    [35174, 30629],
                    [-121, -372],
                    [-313, -328],
                    [-205, 118],
                    [-151, -63],
                    [-256, 253],
                    [-189, -19],
                    [-169, 327]
                ],
                [
                    [6794, 61855],
                    [-41, -99],
                    [-69, 84],
                    [8, 165],
                    [-46, 216],
                    [14, 65],
                    [48, 97],
                    [-19, 116],
                    [16, 55],
                    [21, -11],
                    [107, -100],
                    [49, -51],
                    [45, -79],
                    [71, -207],
                    [-7, -33],
                    [-108, -126],
                    [-89, -92]
                ],
                [
                    [6645, 62777],
                    [-94, -43],
                    [-47, 125],
                    [-32, 48],
                    [-3, 37],
                    [27, 50],
                    [99, -56],
                    [73, -90],
                    [-23, -71]
                ],
                [
                    [6456, 63091],
                    [-9, -63],
                    [-149, 17],
                    [21, 72],
                    [137, -26]
                ],
                [
                    [6207, 63177],
                    [-15, -34],
                    [-19, 8],
                    [-97, 21],
                    [-35, 133],
                    [-11, 24],
                    [74, 82],
                    [23, -38],
                    [80, -196]
                ],
                [
                    [5737, 63567],
                    [-33, -58],
                    [-93, 107],
                    [14, 43],
                    [43, 58],
                    [64, -12],
                    [5, -138]
                ],
                [
                    [31350, 77248],
                    [48, -194],
                    [-296, -286],
                    [-286, -204],
                    [-293, -175],
                    [-147, -351],
                    [-47, -133],
                    [-3, -313],
                    [92, -313],
                    [115, -15],
                    [-29, 216],
                    [83, -131],
                    [-22, -169],
                    [-188, -96],
                    [-133, 11],
                    [-205, -103],
                    [-121, -29],
                    [-162, -29],
                    [-231, -171],
                    [408, 111],
                    [82, -112],
                    [-389, -177],
                    [-177, -1],
                    [8, 72],
                    [-84, -164],
                    [82, -27],
                    [-60, -424],
                    [-203, -455],
                    [-20, 152],
                    [-61, 30],
                    [-91, 148],
                    [57, -318],
                    [69, -105],
                    [5, -223],
                    [-89, -230],
                    [-157, -472],
                    [-25, 24],
                    [86, 402],
                    [-142, 225],
                    [-33, 491],
                    [-53, -255],
                    [59, -375],
                    [-183, 93],
                    [191, -191],
                    [12, -562],
                    [79, -41],
                    [29, -204],
                    [39, -591],
                    [-176, -439],
                    [-288, -175],
                    [-182, -346],
                    [-139, -38],
                    [-141, -217],
                    [-39, -199],
                    [-305, -383],
                    [-157, -281],
                    [-131, -351],
                    [-43, -419],
                    [50, -411],
                    [92, -505],
                    [124, -418],
                    [1, -256],
                    [132, -685],
                    [-9, -398],
                    [-12, -230],
                    [-69, -361],
                    [-83, -75],
                    [-137, 72],
                    [-44, 259],
                    [-105, 136],
                    [-148, 508],
                    [-129, 452],
                    [-42, 231],
                    [57, 393],
                    [-77, 325],
                    [-217, 494],
                    [-108, 90],
                    [-281, -268],
                    [-49, 30],
                    [-135, 275],
                    [-174, 147],
                    [-314, -75],
                    [-247, 66],
                    [-212, -41],
                    [-114, -92],
                    [50, -157],
                    [-5, -240],
                    [59, -117],
                    [-53, -77],
                    [-103, 87],
                    [-104, -112],
                    [-202, 18],
                    [-207, 312],
                    [-242, -73],
                    [-202, 137],
                    [-173, -42],
                    [-234, -138],
                    [-253, -438],
                    [-276, -255],
                    [-152, -282],
                    [-63, -266],
                    [-3, -407],
                    [14, -284],
                    [52, -201]
                ],
                [
                    [17464, 69802],
                    [-46, 302],
                    [-180, 340],
                    [-130, 71],
                    [-30, 169],
                    [-156, 30],
                    [-100, 159],
                    [-258, 59],
                    [-71, 95],
                    [-33, 324],
                    [-270, 594],
                    [-231, 821],
                    [10, 137],
                    [-123, 195],
                    [-215, 495],
                    [-38, 482],
                    [-148, 323],
                    [61, 489],
                    [-10, 507],
                    [-89, 453],
                    [109, 557],
                    [34, 536],
                    [33, 536],
                    [-50, 792],
                    [-88, 506],
                    [-80, 274],
                    [33, 115],
                    [402, -200],
                    [148, -558],
                    [69, 156],
                    [-45, 484],
                    [-94, 485]
                ],
                [
                    [7498, 84325],
                    [-277, -225],
                    [-142, 152],
                    [-43, 277],
                    [252, 210],
                    [148, 90],
                    [185, -40],
                    [117, -183],
                    [-240, -281]
                ],
                [
                    [4006, 85976],
                    [-171, -92],
                    [-182, 110],
                    [-168, 161],
                    [274, 101],
                    [220, -54],
                    [27, -226]
                ],
                [
                    [2297, 88264],
                    [171, -113],
                    [173, 61],
                    [225, -156],
                    [276, -79],
                    [-23, -64],
                    [-211, -125],
                    [-211, 128],
                    [-106, 107],
                    [-245, -34],
                    [-66, 52],
                    [17, 223]
                ],
                [
                    [13740, 82958],
                    [-153, 223],
                    [-245, 188],
                    [-78, 515],
                    [-358, 478],
                    [-150, 558],
                    [-267, 38],
                    [-441, 15],
                    [-326, 170],
                    [-574, 613],
                    [-266, 112],
                    [-486, 211],
                    [-385, -51],
                    [-546, 272],
                    [-330, 252],
                    [-309, -125],
                    [58, -411],
                    [-154, -38],
                    [-321, -123],
                    [-245, -199],
                    [-308, -126],
                    [-39, 348],
                    [125, 580],
                    [295, 182],
                    [-76, 148],
                    [-354, -329],
                    [-190, -394],
                    [-400, -420],
                    [203, -287],
                    [-262, -424],
                    [-299, -248],
                    [-278, -180],
                    [-69, -261],
                    [-434, -305],
                    [-87, -278],
                    [-325, -252],
                    [-191, 45],
                    [-259, -165],
                    [-282, -201],
                    [-231, -197],
                    [-477, -169],
                    [-43, 99],
                    [304, 276],
                    [271, 182],
                    [296, 324],
                    [345, 66],
                    [137, 243],
                    [385, 353],
                    [62, 119],
                    [205, 208],
                    [48, 448],
                    [141, 349],
                    [-320, -179],
                    [-90, 102],
                    [-150, -215],
                    [-181, 300],
                    [-75, -212],
                    [-104, 294],
                    [-278, -236],
                    [-170, 0],
                    [-24, 352],
                    [50, 216],
                    [-179, 211],
                    [-361, -113],
                    [-235, 277],
                    [-190, 142],
                    [-1, 334],
                    [-214, 252],
                    [108, 340],
                    [226, 330],
                    [99, 303],
                    [225, 43],
                    [191, -94],
                    [224, 285],
                    [201, -51],
                    [212, 183],
                    [-52, 270],
                    [-155, 106],
                    [205, 228],
                    [-170, -7],
                    [-295, -128],
                    [-85, -131],
                    [-219, 131],
                    [-392, -67],
                    [-407, 142],
                    [-117, 238],
                    [-351, 343],
                    [390, 247],
                    [620, 289],
                    [228, 0],
                    [-38, -296],
                    [586, 23],
                    [-225, 366],
                    [-342, 225],
                    [-197, 296],
                    [-267, 252],
                    [-381, 187],
                    [155, 309],
                    [493, 19],
                    [350, 270],
                    [66, 287],
                    [284, 281],
                    [271, 68],
                    [526, 262],
                    [256, -40],
                    [427, 315],
                    [421, -124],
                    [201, -266],
                    [123, 114],
                    [469, -35],
                    [-16, -136],
                    [425, -101],
                    [283, 59],
                    [585, -186],
                    [534, -56],
                    [214, -77],
                    [370, 96],
                    [421, -177],
                    [302, -83]
                ],
                [
                    [30185, 57537],
                    [-8, -139],
                    [-163, -69],
                    [91, -268],
                    [-3, -309],
                    [-123, -344],
                    [105, -468],
                    [120, 38],
                    [62, 427],
                    [-86, 208],
                    [-14, 447],
                    [346, 241],
                    [-38, 278],
                    [97, 186],
                    [100, -415],
                    [195, -9],
                    [180, -330],
                    [11, -195],
                    [249, -6],
                    [297, 61],
                    [159, -264],
                    [213, -74],
                    [155, 185],
                    [4, 149],
                    [344, 35],
                    [333, 9],
                    [-236, -175],
                    [95, -279],
                    [222, -44],
                    [210, -291],
                    [45, -473],
                    [144, 13],
                    [109, -139]
                ],
                [
                    [80013, 63313],
                    [-371, -505],
                    [-231, -558],
                    [-61, -410],
                    [212, -623],
                    [260, -772],
                    [252, -365],
                    [169, -475],
                    [127, -1093],
                    [-37, -1039],
                    [-232, -389],
                    [-318, -381],
                    [-227, -492],
                    [-346, -550],
                    [-101, 378],
                    [78, 401],
                    [-206, 335]
                ],
                [
                    [96623, 40851],
                    [-92, -78],
                    [-93, 259],
                    [10, 158],
                    [175, -339]
                ],
                [
                    [96418, 41756],
                    [45, -476],
                    [-75, 74],
                    [-58, -32],
                    [-39, 163],
                    [-6, 453],
                    [133, -182]
                ],
                [
                    [64752, 60417],
                    [-201, -158],
                    [-54, -263],
                    [-6, -201],
                    [-277, -249],
                    [-444, -276],
                    [-249, -417],
                    [-122, -33],
                    [-83, 35],
                    [-163, -245],
                    [-177, -114],
                    [-233, -30],
                    [-70, -34],
                    [-61, -156],
                    [-73, -43],
                    [-43, -150],
                    [-137, 13],
                    [-89, -80],
                    [-192, 30],
                    [-72, 345],
                    [8, 323],
                    [-46, 174],
                    [-54, 437],
                    [-80, 243],
                    [56, 29],
                    [-29, 270],
                    [34, 114],
                    [-12, 257]
                ],
                [
                    [58175, 37528],
                    [113, -7],
                    [134, -100],
                    [94, 71],
                    [148, -59]
                ],
                [
                    [59119, 34780],
                    [-70, -430],
                    [-32, -491],
                    [-72, -267],
                    [-190, -298],
                    [-54, -86],
                    [-118, -300],
                    [-77, -303],
                    [-158, -424],
                    [-314, -609],
                    [-196, -355],
                    [-210, -269],
                    [-290, -229],
                    [-141, -31],
                    [-36, -164],
                    [-169, 88],
                    [-138, -113],
                    [-301, 114],
                    [-168, -72],
                    [-115, 31],
                    [-286, -233],
                    [-238, -94],
                    [-171, -223],
                    [-127, -14],
                    [-117, 210],
                    [-94, 11],
                    [-120, 264],
                    [-13, -82],
                    [-37, 159],
                    [2, 346],
                    [-90, 396],
                    [89, 108],
                    [-7, 453],
                    [-182, 553],
                    [-139, 501],
                    [-1, 1],
                    [-199, 768]
                ],
                [
                    [58409, 41417],
                    [-210, -81],
                    [-159, -235],
                    [-33, -205],
                    [-100, -46],
                    [-241, -486],
                    [-154, -383],
                    [-94, -13],
                    [-90, 68],
                    [-311, 65]
                ]
            ],
            bbox: [-180, -85.60903777459767, 180, 83.64513000000001],
            transform: {
                scale: [.0036000360003600037, .00169255860333201],
                translate: [-180, -85.60903777459767]
            }
        },
        uh = Object.assign || function (e) {
            for (var n = 1; n < arguments.length; n++) {
                var t = arguments[n];
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r])
            }
            return e
        },
        ph = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();

    function dh(e) {
        if (Array.isArray(e)) {
            for (var n = 0, t = Array(e.length); n < e.length; n++) t[n] = e[n];
            return t
        }
        return Array.from(e)
    }
    var fh = function () {
            function t(e) {
                var n = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, t), this.svg = e.attr("class", ch).attr("transform", "translate(" + lf + ", " + cf + ")"), this.svg.on("click", function () {
                    return n.reset()
                }), this.mapBox = this.svg.append("g"), this.scatterGroup = this.svg.append("g"), this.radiusBox = this.svg.append("g").attr("opacity", 0), this.symbol = Vd().size(64), this.zoom = ic().scaleExtent([-1, 8]).on("zoom", function () {
                    return n._zoomed()
                }), this.svg.call(this.zoom), this.xScale = $c(), this.yScale = $c(), this.rScale = Bc().exponent(.5).range([2, 13]), this.labelScale = Bc().exponent(.5).range([2, 13]).clamp(!0), this.domains = {}, this.colorScale = function e() {
                    var i = [],
                        t = [],
                        r = [];

                    function o() {
                        var e = 0,
                            n = Math.max(1, t.length);
                        for (r = new Array(n - 1); ++e < n;) r[e - 1] = Ie(i, e / n);
                        return a
                    }

                    function a(e) {
                        if (!isNaN(e = +e)) return t[ve(r, e)]
                    }
                    return a.invertExtent = function (e) {
                        var n = t.indexOf(e);
                        return n < 0 ? [NaN, NaN] : [0 < n ? r[n - 1] : i[0], n < r.length ? r[n] : i[i.length - 1]]
                    }, a.domain = function (e) {
                        if (!arguments.length) return i.slice();
                        i = [];
                        for (var n, t = 0, r = e.length; t < r; ++t) null == (n = e[t]) || isNaN(n = +n) || i.push(n);
                        return i.sort(ye), o()
                    }, a.range = function (e) {
                        return arguments.length ? (t = dc.call(e), o()) : t.slice()
                    }, a.quantiles = function () {
                        return r.slice()
                    }, a.copy = function () {
                        return e().domain(i).range(t)
                    }, a
                }().range(Cf), this.kZoom = 1, this.dur = 250, this.clickedCountryId = void 0, this.firstZoomTo = !1, this.activeCountries = void 0, this.textIsHidden = !0, this.mapMode = !0, this.currentlyZooming = !1, this.useSpy = !0, this.radiusValues = []
            }
            return ph(t, [{
                key: "render",
                value: function () {
                    var r = this,
                        i = this.nodes,
                        e = this.scatterGroup,
                        n = this.xScale,
                        t = this.yScale,
                        o = this.dur,
                        a = this.radiusParam,
                        l = this.getWidth() - sf - lf,
                        c = this.getHeight() - cf - uf;
                    if (this.w = l, this.h = c, this.radiusBox.attr("transform", "translate(42, " + (c - 15) + ")"), n.range([lf, l - lf - sf]), t.range([cf, c - cf - uf]), i) {
                        var s = e.selectAll(".point").data(i);
                        s.exit().remove();
                        var u = s.enter().append("g").attr("class", "point").on("click", function (e, n) {
                            N.stopPropagation(), r.activeCountries = void 0, r.actions.onPointClick(r.nodes[n], n), r.zoomTo(i[n].indicator)
                        });
                        u.append("circle"), u.append("path"), u.append("text").attr("class", "name").classed("hidden", !0).text(function (e, n) {
                            return i[n].indicator
                        }), this.points = s.merge(u), this.points.transition().duration(o).style("fill", function (e, n) {
                            return i[n].color
                        }).style("opacity", function (e, n) {
                            var t = !0;
                            return (r.clickedCountryId || r.activeCountries) && n !== r.clickedCountryId && -1 === Li(r.activeCountries, i[n].indicator) && (t = !1), t ? 1 : .2
                        }).style("font-size", 11 / this.kZoom + "px"), this.points.select("circle").style("visibility", function (e, n) {
                            return gi(+i[n][a]) ? "hidden" : "visible"
                        }).transition().duration(o).style("stroke", function (e, n) {
                            return void 0 === i[n].color && console.log(i[n], i[n].color), He(i[n].color).darker(.6)
                        }).style("stroke-width", .5 / this.kZoom).attr("r", function (e, n) {
                            return gi(i[n].radius) ? 0 : i[n].radius / r.kZoom
                        }), this.points.select("path").style("stroke", function (e, n) {
                            return He(i[n].color).darker(.6)
                        }).style("visibility", function (e, n) {
                            return gi(+i[n][a]) ? "visible" : "hidden"
                        }).attr("d", function () {
                            return r.symbol.size(64 / (r.kZoom * r.kZoom)).type(Hd)()
                        })
                    }
                    this.updateText()
                }
            }, {
                key: "showText",
                value: function () {
                    this.textIsHidden = !1, this.updateText()
                }
            }, {
                key: "updateText",
                value: function () {
                    var r = this,
                        i = this.nodes,
                        o = this.clickedCountryId;
                    this.points.select(".name").attr("dy", function (e, n) {
                        return (-(gi(i[n].radius) ? 8 : i[n].radius) - 5) / r.kZoom
                    }).style("font-size", function (e, n) {
                        var t = gi(i[n].radius) ? 0 : i[n].radius;
                        return Math.min(14, Math.max(11, 1.5 * t)) / r.kZoom + "px"
                    }).classed("hidden", function (e, n) {
                        var t = 1.3 * ((gi(i[n].labelRadius) ? 3 : i[n].labelRadius) * r.kZoom) < Me([2, 13]);
                        return o !== n && (r.textIsHidden || r.kZoom < .55 || t || o === n)
                    })
                }
            }, {
                key: "setGeoPosition",
                value: function (e) {
                    var t = this.projection,
                        n = this.countries;
                    this.data = e, this.projection.fitSize([this.getWidth(), this.getHeight() - 200], n);
                    var r = this.projection([-180, 59.26])[0],
                        i = this.projection([20.69, 71.08])[1],
                        o = this.projection([180, 63.56])[0],
                        a = this.projection([-35.69, -38.33])[1];
                    this.projection.fitExtent([
                        [-r, -i],
                        [2 * this.getWidth() - o, 2 * this.getHeight() - a]
                    ], n);
                    var l = function (n, t) {
                        var r, i, o = 4.5;

                        function a(e) {
                            return e && ("function" == typeof o && i.pointRadius(+o.apply(this, arguments)), Xu(e, r(i))), i.result()
                        }
                        return a.area = function (e) {
                            return Xu(e, r(Lp)), Lp.result()
                        }, a.measure = function (e) {
                            return Xu(e, r(Pd)), Pd.result()
                        }, a.bounds = function (e) {
                            return Xu(e, r(Fp)), Fp.result()
                        }, a.centroid = function (e) {
                            return Xu(e, r(td)), td.result()
                        }, a.projection = function (e) {
                            return arguments.length ? (r = null == e ? (n = null, Sp) : (n = e).stream, a) : n
                        }, a.context = function (e) {
                            return arguments.length ? (i = null == e ? (t = null, new wd) : new dd(t = e), "function" != typeof o && i.pointRadius(o), a) : t
                        }, a.pointRadius = function (e) {
                            return arguments.length ? (o = "function" == typeof e ? e : (i.pointRadius(+e), +e), a) : o
                        }, a.projection(n).context(t)
                    }().projection(this.projection);
                    this.map.attr("d", l);
                    var c = e.map(function (e) {
                        var n = $f(e);
                        return t(n)
                    });
                    return this.points.attr("transform", function (e, n) {
                        return "translate(" + c[n][0] + ", " + c[n][1] + ")"
                    }), c
                }
            }, {
                key: "updatePosition",
                value: function (e) {
                    var t = this,
                        n = this.points,
                        r = this.xScale,
                        i = this.yScale;
                    return this.useSpy && this.clickedCountryId && !this.currentlyZooming && this.zoomTo(this.nodes[this.clickedCountryId].indicator, 2, 500, !0), e && (this.data = e, r.domain(be(e.map(function (e) {
                        return e[0]
                    }))), i.domain(be(e.map(function (e) {
                        return e[1]
                    })))), this.mapMode ? this.setGeoPosition(this.data) : n.attr("transform", function (e, n) {
                        return "translate(" + r(t.data[n][0]) + ", " + i(t.data[n][1]) + ")"
                    }), this
                }
            }, {
                key: "updateRadiusDomian",
                value: function () {
                    var e = this.rScale,
                        n = this.labelScale,
                        t = this.domains,
                        r = this.radiusParam;
                    e.domain(be(t[r])), "surface area (km²)" === r ? (e.exponent(1), n.exponent(1)) : (e.exponent(.5), n.exponent(.5))
                }
            }, {
                key: "setRadius",
                value: function (n) {
                    var e = this.nodes,
                        t = this.rScale,
                        r = this.labelScale;
                    this.radiusParam = n, this.updateRadiusDomian(), e.forEach(function (e) {
                        return e.radius = t(+e[n])
                    });
                    var i = e.map(function (e) {
                            return +e[n]
                        }).filter(function (e) {
                            return !gi(e)
                        }).sort(function (e, n) {
                            return e - n
                        }),
                        o = Ie(i, .1),
                        a = Ie(i, .9);
                    return r.domain([o, a]), e.forEach(function (e) {
                        return e.labelRadius = r(+e[n])
                    }), this
                }
            }, {
                key: "setColor",
                value: function (t, e) {
                    var n = this.nodes,
                        r = this.colorScale;
                    this.colorParam = t;
                    var i = Cf;
                    return "indicator" !== t && (i = -1 !== Df.indexOf(e) ? [].concat(dh(Sf)) : [].concat(dh(Sf)).slice().reverse()), r.range(i).domain(n.map(function (e) {
                        return +e[t]
                    })), yi(n, function (e) {
                        if ("indicator" === t) e.color = Tf(e);
                        else {
                            var n = +e[t];
                            e.color = gi(n) ? "#ccc" : r(n)
                        }
                    }), this
                }
            }, {
                key: "setData",
                value: function (e, n) {
                    var t = this;
                    n.forEach(function (e) {
                        return t.domains[e.key] = e.extent
                    });
                    var r, i, o = "GeometryCollection" === (i = (r = sh).objects.countries).type ? {
                        type: "FeatureCollection",
                        features: i.geometries.map(function (e) {
                            return nf(r, e)
                        })
                    } : nf(r, i);
                    return this.countries = o, this.projection = Nd().fitSize([this.getWidth(), this.getHeight()], o), this.map = this.mapBox.selectAll(".country").data(o.features).enter().append("path").attr("class", "country"), this.nodes = e.map(function (e) {
                        return uh({}, e)
                    }), console.log("this.nodes", this.nodes), this
                }
            }, {
                key: "setActions",
                value: function (e) {
                    this.actions = e
                }
            }, {
                key: "showOverviewTransition",
                value: function () {
                    this.zoomTo("United Kingdom", 2, 28e3, !0), this.reset()
                }
            }, {
                key: "showDevelopedCountries",
                value: function () {
                    this.activeCountries = hf, this.zoomTo("United Kingdom")
                }
            }, {
                key: "showBiggestCountries",
                value: function () {
                    this.activeCountries = yf, this.zoomTo("China")
                }
            }, {
                key: "showSingaporeBrunei",
                value: function () {
                    this.activeCountries = mf, this.zoomTo("Brunei")
                }
            }, {
                key: "showRussiaBrazil",
                value: function () {
                    this.activeCountries = gf, this.zoomTo("Brazil")
                }
            }, {
                key: "setActiveCountriesRussiaBrazil",
                value: function () {
                    this.activeCountries = gf, this.render()
                }
            }, {
                key: "showUSA",
                value: function () {
                    this.activeCountries = void 0, this.zoomTo("United States", 1);
                    var e = oa(this.nodes, ["indicator", "United States"]);
                    this.actions.onPointClick(this.nodes[e], e)
                }
            }, {
                key: "zoomTo",
                value: function (n) {
                    var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 2,
                        t = this,
                        r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1e3,
                        i = 3 < arguments.length && void 0 !== arguments[3] && arguments[3];
                    this.currentlyZooming = !0, setTimeout(function () {
                        t.currentlyZooming = !1
                    }, r);
                    var o = this.nodes,
                        a = this.data,
                        l = this.projection,
                        c = oa(o, function (e) {
                            return e.indicator === n
                        }),
                        s = void 0,
                        u = void 0;
                    if (this.mapMode) {
                        var p = l($f(a[c]));
                        s = this.w / 2 - p[0] * e, u = this.h / 2 - p[1] * e
                    } else {
                        var d = a[this.clickedCountryId = c];
                        s = this.w / 2 - this.xScale(d[0]) * e, u = this.h / 2 - this.yScale(d[1]) * e - .15 * this.h
                    }
                    if (this.svg.transition().duration(r).ease(i ? Fl : Rl).call(this.zoom.transform, Zl.translate(s, u).scale(e)), this.render(), !this.firstZoomTo) return this.firstZoomTo = !0, n
                }
            }, {
                key: "_zoomed",
                value: function () {
                    var t = this,
                        r = this.nodes;
                    this.t = N.transform, this.kZoom = N.transform.k, this.scatterGroup.attr("transform", N.transform), this.mapMode && this.mapBox.attr("transform", N.transform), this.points.select("circle").style("stroke-width", .5 / this.kZoom).attr("r", function (e, n) {
                        return gi(r[n].radius) ? 0 : r[n].radius / t.kZoom
                    }), this.symbol.size(64 / (this.kZoom * this.kZoom)), this.points.select("path").style("stroke-width", .5 / this.kZoom).attr("d", function () {
                        return t.symbol.type(Hd)()
                    }), this.updateText()
                }
            }, {
                key: "zoomOut",
                value: function () {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1e3;
                    this.svg.transition().duration(e).call(this.zoom.transform, Zl.scale(1)), this.reset()
                }
            }, {
                key: "zoomOutABit",
                value: function () {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1e3;
                    this.svg.transition().duration(e).call(this.zoom.transform, Zl.translate(.1 * this.w, .1 * this.h).scale(.8)), this.currentlyZooming = !1
                }
            }, {
                key: "reset",
                value: function () {
                    this.clickedCountryId = void 0, this.activeCountries = void 0, this.actions.onSvgClick(), this.render()
                }
            }, {
                key: "setNodeValue",
                value: function (e) {
                    var n = this.radiusParam,
                        t = this.colorParam,
                        r = this.colorScale,
                        i = e.countryId,
                        o = e.key,
                        a = e.value;
                    if (o === n && void 0 !== i && (this.updateRadiusDomian(), this.nodes[i].radius = this.rScale(a)), o === t && void 0 !== i) {
                        var l = this.nodes[i];
                        l.color = "indicator" === t ? Tf(l) : gi(+l[t]) ? "#ccc" : r(a)
                    }
                    this.render()
                }
            }, {
                key: "removeMap",
                value: function () {
                    this.mapMode = !1, this.mapBox.style("opacity", .3).transition().duration(500).style("opacity", 0).remove()
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "getWidth",
                value: function () {
                    var e = this.svg;
                    return e.node().parentNode.clientWidth || e.node().parentNode.width.animVal.value
                }
            }, {
                key: "getHeight",
                value: function () {
                    var e = this.svg;
                    return e.node().parentNode.clientHeight || e.node().parentNode.height.animVal.value
                }
            }]), t
        }(),
        hh = bh(["\n  text-align: center;\n"], ["\n  text-align: center;\n"]),
        yh = bh(["\n  label: tool;\n  font-size: 9px;\n  border-radius: 0.3rem;\n  padding: 0.3rem;\n  text-align: center;\n  transform: translateX(-25%);\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: calc(", "px);\n  transition: opacity 0.3s;\n  background-color: ", ";\n  visibility: visible;\n  opacity: 1;\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  label: tool;\n  font-size: 9px;\n  border-radius: 0.3rem;\n  padding: 0.3rem;\n  text-align: center;\n  transform: translateX(-25%);\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: calc(", "px);\n  transition: opacity 0.3s;\n  background-color: ", ";\n  visibility: visible;\n  opacity: 1;\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        mh = bh(["\n  label: text;\n  max-width: 100%;\n  padding-bottom: 0.3rem;\n  text-align: center;\n  pointer-events: none;\n  font-size: 10.5px;\n  line-height: 11px;\n  // text-transform: capitalize;\n"], ["\n  label: text;\n  max-width: 100%;\n  padding-bottom: 0.3rem;\n  text-align: center;\n  pointer-events: none;\n  font-size: 10.5px;\n  line-height: 11px;\n  // text-transform: capitalize;\n"]),
        gh = bh(["\n  label: value;\n  float: ", ";\n  font-size: 10px;\n  display: inline-block;\n  position: absolute;\n  display: block;\n  font-size: 10px;\n  font-weight: 100;\n  font-size: 9px;\n  // color: ", ";\n  // transform: translateY(-50%);\n  transform: translateY(-35%);\n  display: inline-block;\n  ", ";\n"], ["\n  label: value;\n  float: ", ";\n  font-size: 10px;\n  display: inline-block;\n  position: absolute;\n  display: block;\n  font-size: 10px;\n  font-weight: 100;\n  font-size: 9px;\n  // color: ", ";\n  // transform: translateY(-50%);\n  transform: translateY(-35%);\n  display: inline-block;\n  ", ";\n"]),
        vh = bh(["\n  label: counter;\n  font-size: 10px;\n  margin-top: 0.3rem;\n  display: block;\n"], ["\n  label: counter;\n  font-size: 10px;\n  margin-top: 0.3rem;\n  display: block;\n"]),
        Ph = bh(["\n  position: relative;\n  display: inline-block;\n  padding: 0.4rem 0rem;\n  text-align: center;\n  width: 100%;\n  margin: 0;\n\n  &.hidden {\n    opacity: 0.4;\n    pointer-events: none;\n  }\n\n  > input::focus {\n    outline: none;\n  }\n\n  > input::-moz-focus-outer {\n    border: 0;\n  }\n\n  > input {\n    appearance: none;\n    width: 75%;\n    padding: 0;\n    margin: 0;\n    border: 0;\n    height: 3px;\n\n    &.left {\n      &::-webkit-slider-runnable-track {\n        background-image: linear-gradient(to left, ", ", ", ");\n        height: 3px;\n      }\n      &::-moz-range-track {\n        background-image: linear-gradient(to left, ", ", ", ");\n        background-size: 100% 0.2rem;\n      }\n      &::-ms-track {\n      background-image: linear-gradient(to left, ", ", ", ");\n      background-size: 100% 0.2rem;\n      }\n    }\n\n    &.right {\n      &::-webkit-slider-runnable-track {\n        background-image: linear-gradient(to right, ", ", ", ");\n        height: 3px;\n      }\n      &::-moz-range-track {\n        background-image: linear-gradient(to right, ", ", ", ");\n        background-size: 100% 0.2rem;\n      }\n      &::-ms-track {\n      background-image: linear-gradient(to right, ", ", ", ");\n      background-size: 100% 0.2rem;\n\n      }\n    }\n  }\n\n  > input::-webkit-slider-runnable-track {\n    width: 100%;\n    // height: 0.2rem;\n    padding: 0;\n    border: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    box-shadow: none;\n  }\n\n  > input::-moz-range-track {\n    width: 100%;\n    height: 3px;\n    padding: 0;\n    border: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    box-shadow: none;\n  }\n\n  > input::-ms-track {\n    appearance: none;\n    width: 100%;\n    height: 3px;\n  }\n\n  > input::-ms-fill-lower {\n    box-shadow: none;\n  }\n\n  > input::-ms-fill-upper {\n    box-shadow: none;\n  }\n\n  > input::-webkit-slider-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    box-shadow: none;\n    width: 10px;\n    height: 10px;\n    margin -3.5px 0;\n    // margin-top: -4px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n  }\n\n  input::-moz-range-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    box-shadow: none;\n    border: none;\n    width: 10px;\n    height: 10px;\n    margin-top: -4px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n  }\n\n  > input::-ms-thumb {\n    border: none;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    background: white;\n  }\n"], ["\n  position: relative;\n  display: inline-block;\n  padding: 0.4rem 0rem;\n  text-align: center;\n  width: 100%;\n  margin: 0;\n\n  &.hidden {\n    opacity: 0.4;\n    pointer-events: none;\n  }\n\n  > input::focus {\n    outline: none;\n  }\n\n  > input::-moz-focus-outer {\n    border: 0;\n  }\n\n  > input {\n    appearance: none;\n    width: 75%;\n    padding: 0;\n    margin: 0;\n    border: 0;\n    height: 3px;\n\n    &.left {\n      &::-webkit-slider-runnable-track {\n        background-image: linear-gradient(to left, ", ", ", ");\n        height: 3px;\n      }\n      &::-moz-range-track {\n        background-image: linear-gradient(to left, ", ", ", ");\n        background-size: 100% 0.2rem;\n      }\n      &::-ms-track {\n      background-image: linear-gradient(to left, ", ", ", ");\n      background-size: 100% 0.2rem;\n      }\n    }\n\n    &.right {\n      &::-webkit-slider-runnable-track {\n        background-image: linear-gradient(to right, ", ", ", ");\n        height: 3px;\n      }\n      &::-moz-range-track {\n        background-image: linear-gradient(to right, ", ", ", ");\n        background-size: 100% 0.2rem;\n      }\n      &::-ms-track {\n      background-image: linear-gradient(to right, ", ", ", ");\n      background-size: 100% 0.2rem;\n\n      }\n    }\n  }\n\n  > input::-webkit-slider-runnable-track {\n    width: 100%;\n    // height: 0.2rem;\n    padding: 0;\n    border: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    box-shadow: none;\n  }\n\n  > input::-moz-range-track {\n    width: 100%;\n    height: 3px;\n    padding: 0;\n    border: 0;\n    vertical-align: middle;\n    cursor: pointer;\n    box-shadow: none;\n  }\n\n  > input::-ms-track {\n    appearance: none;\n    width: 100%;\n    height: 3px;\n  }\n\n  > input::-ms-fill-lower {\n    box-shadow: none;\n  }\n\n  > input::-ms-fill-upper {\n    box-shadow: none;\n  }\n\n  > input::-webkit-slider-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    box-shadow: none;\n    width: 10px;\n    height: 10px;\n    margin -3.5px 0;\n    // margin-top: -4px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n  }\n\n  input::-moz-range-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    box-shadow: none;\n    border: none;\n    width: 10px;\n    height: 10px;\n    margin-top: -4px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n  }\n\n  > input::-ms-thumb {\n    border: none;\n    height: 8px;\n    width: 8px;\n    border-radius: 50%;\n    background: white;\n  }\n"]),
        xh = bh(["\n  width: 2px;\n  height: 4px;\n  background-color: #ccc;\n  position: absolute;\n  bottom: 9px;\n  margin-left: 5px;\n  z-index: -10;\n"], ["\n  width: 2px;\n  height: 4px;\n  background-color: #ccc;\n  position: absolute;\n  bottom: 9px;\n  margin-left: 5px;\n  z-index: -10;\n"]);

    function bh(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var wh = ah(hh),
        Dh = function (e) {
            return ah(yh, e.left, Lf)
        },
        Gh = ah(mh),
        Ch = function (e) {
            return ah(gh, "min" == e.pos ? "left" : "right", Mf, "min" == e.pos ? "right: 90%" : "left: 90%")
        },
        Sh = (ah(vh), ah(Ph, Nf, jf, Nf, jf, Nf, jf, Nf, jf, Nf, jf, Nf, jf)),
        Ih = ah(xh),
        Mh = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var kh = function () {
            function u(e, n, t, r, i, o, a, l) {
                var c = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, u), this.maxValue = n[1], this.el = e.attr("class", wh), this.callback = l, this.defaultValue = t, this.title = r, this.formatter = o;
                var s = (Math.abs(n[0]) + Math.abs(n[1])) / 150;
                this.range = this.el.append("div").attr("class", Sh), this.range.append("div").attr("class", Gh).text(r), this.range.append("div").attr("class", Ch({
                    pos: "min"
                })).text("Perplexity" === r ? n[0] : o(n[0])), this.range.append("div").attr("class", Ch({
                    pos: "max"
                })).text("Perplexity" === r ? n[1] : o(n[1])), "Perplexity" !== r && (this.tick = this.range.append("div").attr("class", Ih)), this.handle = this.range.append("input").attr("type", "range").attr("min", "" + n[0]).attr("max", "" + n[1]).attr("step", "" + (t % 1 == 0 ? s.toFixed() : s.toFixed(2))).attr("onkeydown", "return false;"), this.tooltip = this.range.append("div").attr("class", Dh({
                    left: 23
                })).text("s").classed("hidden", !0), -1 !== Df.indexOf(a) ? this.handle.classed("left", !0) : this.handle.classed("right", !0), this.handle.on("input", function () {
                    c.updateValue(c.getValue(), !0), l(c.getValue())
                }).on("change", function () {
                    c.updateValue(c.getValue(), !1)
                }).on("mouseover", function () {
                    c.tooltip.classed("hidden", !1)
                }).on("mouseout", function () {
                    c.tooltip.classed("hidden", !0)
                }), this.updateValue(t)
            }
            return Mh(u, [{
                key: "updateTick",
                value: function (e) {
                    var n = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                        t = this.defaultValue % 1 == 0 ? (+e).toFixed() : (+e).toFixed(2),
                        r = this.handle.node(),
                        i = (+t - r.min) / (r.max - r.min),
                        o = (this.handle.node().clientWidth - 10) * i;
                    return this.tick.style("left", o + 23).style("visibility", n ? "hidden" : "visible"), this
                }
            }, {
                key: "updateValue",
                value: function (e) {
                    var n = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                        t = this.title,
                        r = this.formatter;
                    this.handle.property("value", "" + e);
                    var i = this.defaultValue % 1 == 0 ? (+e).toFixed() : (+e).toFixed(2),
                        o = this.handle.node(),
                        a = (+i - o.min) / (o.max - o.min),
                        l = (this.handle.node().clientWidth - 10) * a,
                        c = "Perplexity" === t ? i : r(+i);
                    return this.tooltip.text(c).attr("class", Dh({
                        left: l + 23
                    })), this.tooltip.classed("hidden", !n), this
                }
            }, {
                key: "slowlyUpdateValueTo",
                value: function (n) {
                    var t = this,
                        r = (+this.getValue() - n) / 15;
                    this.timer = ue(function () {
                        var e = +t.getValue();
                        n < e - r ? t.updateValue(e - r, !0) : (t.updateValue(n, !1), t.callback(n), t.timer.stop())
                    }, 150)
                }
            }, {
                key: "updateVisibility",
                value: function (e) {
                    return this.range.classed("hidden", !e), this
                }
            }, {
                key: "getValue",
                value: function () {
                    return this.handle.node().value
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "getWidth",
                value: function () {
                    return this.width
                }
            }, {
                key: "getHeight",
                value: function () {
                    return this.height
                }
            }]), u
        }(),
        Ah = Lh(["\n  padding: 0.25rem 0;\n  position: relative;\n"], ["\n  padding: 0.25rem 0;\n  position: relative;\n"]),
        _h = Lh(["\n  display: inline-block;\n  margin-left: 1.25rem;\n  // text-transform: uppercase;\n  cursor: pointer;\n  // font-size: 10px;\n  font-size: 10.5px;\n  line-height: 11px;\n  // text-transform: capitalize;\n"], ["\n  display: inline-block;\n  margin-left: 1.25rem;\n  // text-transform: uppercase;\n  cursor: pointer;\n  // font-size: 10px;\n  font-size: 10.5px;\n  line-height: 11px;\n  // text-transform: capitalize;\n"]),
        Oh = Lh(["\n  position: absolute;\n  display: inline-block;\n  float: left;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  input[type='checkbox'] {\n    display: none;\n  }\n\n  .toggle {\n    cursor: pointer;\n    position: relative;\n    width: 6px;\n    height: 6px;\n    border: 1px solid ", ";\n    border-radius: 1px;\n\n    &:after {\n      content: '';\n      position: absolute;\n      width: 6px;\n      height: 6px;\n      transition: background 0.125s;\n    }\n  }\n\n  input[type='checkbox']:checked + .toggle:after {\n    background: ", ";\n    content: url(", ");\n  }\n"], ["\n  position: absolute;\n  display: inline-block;\n  float: left;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  input[type='checkbox'] {\n    display: none;\n  }\n\n  .toggle {\n    cursor: pointer;\n    position: relative;\n    width: 6px;\n    height: 6px;\n    border: 1px solid ", ";\n    border-radius: 1px;\n\n    &:after {\n      content: '';\n      position: absolute;\n      width: 6px;\n      height: 6px;\n      transition: background 0.125s;\n    }\n  }\n\n  input[type='checkbox']:checked + .toggle:after {\n    background: ", ";\n    content: url(", ");\n  }\n"]);

    function Lh(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Eh = ah(Ah),
        Nh = ah(_h),
        jh = ah(Oh, kf, kf, "data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20data-prefix%3D%22fas%22%20data-icon%3D%22check%22%20class%3D%22svg-inline--fa%20fa-check%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22%23CFD0D6%22%20d%3D%22M173.898%20439.404l-166.4-166.4c-9.997-9.997-9.997-26.206%200-36.204l36.203-36.204c9.997-9.998%2026.207-9.998%2036.204%200L192%20312.69%20432.095%2072.596c9.997-9.997%2026.207-9.997%2036.204%200l36.203%2036.204c9.997%209.997%209.997%2026.206%200%2036.204l-294.4%20294.401c-9.998%209.997-26.207%209.997-36.204-.001z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E"),
        Th = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var $h = function () {
            function n(e) {
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, n), this.el = e.attr("class", Eh), this.title = this.el.append("label").attr("class", Nh), this.checkbox = this.el.append("div").attr("class", jh), this.input = this.checkbox.append("input").attr("type", "checkbox").attr("id", ""), this.toggle = this.checkbox.append("div").attr("class", "toggle")
            }
            return Th(n, [{
                key: "setData",
                value: function (e) {
                    return this.input.attr("id", e.title), this.checked = e.checked, this.title.attr("for", e.title).text(e.title), this.input.property("checked", e.checked), this
                }
            }, {
                key: "setActions",
                value: function (e) {
                    var n = this;
                    return this.action = e, this.title.on("click", function () {
                        n.checked = !n.checked, e(n.checked)
                    }), this.toggle.on("click", function () {
                        n.checked = !n.checked, n.update(), e(n.checked)
                    }), this
                }
            }, {
                key: "check",
                value: function (e) {
                    this.action;
                    return this.checked = void 0 !== e ? e : !this.checked, this.update(), this.checked
                }
            }, {
                key: "update",
                value: function () {
                    this.input.property("checked", this.checked)
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "getWidth",
                value: function () {
                    return this.width
                }
            }, {
                key: "getHeight",
                value: function () {
                    return this.height
                }
            }]), n
        }(),
        zh = "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%3E%20%20%20%20%3Cpath%20fill%3D%22none%22%20d%3D%22M0%200h20v20H0V0z%22%2F%3E%20%20%20%20%3Cpath%20d%3D%22M15.95%2010.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12%202.34c-.03-.2-.2-.34-.4-.34H8.4c-.2%200-.36.14-.39.34l-.3%202.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39%200-.49.18l-1.6%202.77c-.1.18-.06.39.1.51l1.69%201.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37%2012.1c-.15.12-.19.34-.1.51l1.6%202.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58%201.35.78l.3%202.12c.04.2.2.34.4.34h3.2c.2%200%20.37-.14.39-.34l.3-2.12c.49-.2.94-.47%201.35-.78l1.99.8c.18.07.39%200%20.49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10%2013c-1.65%200-3-1.35-3-3s1.35-3%203-3%203%201.35%203%203-1.35%203-3%203z%22%20fill%3D%22%239B9BA5%22%2F%3E%3C%2Fsvg%3E",
        Bh = "data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20data-prefix%3D%22fas%22%20data-icon%3D%22chevron-right%22%20class%3D%22svg-inline--fa%20fa-chevron-right%20fa-w-10%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20320%20512%22%3E%3Cpath%20fill%3D%22%239B9BA5%22%20d%3D%22M285.476%20272.971L91.132%20467.314c-9.373%209.373-24.569%209.373-33.941%200l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505%20256%2034.484%20101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373%2024.569-9.373%2033.941%200L285.475%20239.03c9.373%209.372%209.373%2024.568.001%2033.941z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E",
        qh = Kh(["\n  width: ", ";\n"], ["\n  width: ", ";\n"]),
        Fh = Kh(["\n  label: controlPanel;\n  font-size: 10pt;\n  color: ", ";\n  position: fixed;\n  right: 0;\n  top: calc(50% + 25px);\n  transform: translateY(-50%);\n  margin: 0 0.5rem;\n  scrollbar-width: thin;\n  border-radius: 0.3rem;\n  backdrop-filter: blur(3px);\n  background-color: ", ";\n  width: ", ";\n  min-height: calc(60% - 44px - 2rem);\n  max-height: calc(100% - 44px - 2rem);\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: right 300ms, visibility 300ms;\n\n  :hover {\n    scrollbar-width: thin;\n    overflow-y: scroll;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    right: calc(-", "px - 0.5rem);\n  }\n"], ["\n  label: controlPanel;\n  font-size: 10pt;\n  color: ", ";\n  position: fixed;\n  right: 0;\n  top: calc(50% + 25px);\n  transform: translateY(-50%);\n  margin: 0 0.5rem;\n  scrollbar-width: thin;\n  border-radius: 0.3rem;\n  backdrop-filter: blur(3px);\n  background-color: ", ";\n  width: ", ";\n  min-height: calc(60% - 44px - 2rem);\n  max-height: calc(100% - 44px - 2rem);\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: right 300ms, visibility 300ms;\n\n  :hover {\n    scrollbar-width: thin;\n    overflow-y: scroll;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    right: calc(-", "px - 0.5rem);\n  }\n"]),
        Rh = Kh(["\n  margin: 0.5rem 1rem 1rem;\n  color: ", ";\n  &.hidden {\n    display: none;\n  }\n"], ["\n  margin: 0.5rem 1rem 1rem;\n  color: ", ";\n  &.hidden {\n    display: none;\n  }\n"]),
        Uh = Kh(["\n  label: reset;\n  width: 115px;\n  border-radius: 3rem;\n  margin: auto;\n  font-size: 10px;\n  color: ", ";\n  text-align: center;\n  height: 15px;\n  line-height: 15px;\n  border: 1px solid ", ";\n  text-align: center;\n  cursor: pointer;\n\n  &:hover {\n    color: ", ";\n    border: 1px solid ", ";\n  }\n"], ["\n  label: reset;\n  width: 115px;\n  border-radius: 3rem;\n  margin: auto;\n  font-size: 10px;\n  color: ", ";\n  text-align: center;\n  height: 15px;\n  line-height: 15px;\n  border: 1px solid ", ";\n  text-align: center;\n  cursor: pointer;\n\n  &:hover {\n    color: ", ";\n    border: 1px solid ", ";\n  }\n"]),
        Yh = Kh(["\n  color: ", ";\n  margin: 0.75rem 1rem;\n  font-size: 14px;\n  text-align: center;\n  text-transform: uppercase;\n"], ["\n  color: ", ";\n  margin: 0.75rem 1rem;\n  font-size: 14px;\n  text-align: center;\n  text-transform: uppercase;\n"]),
        Hh = Kh(["\n  position: fixed;\n  right: 0.5rem;\n  transform: translateY(-50%);\n  top: 50%;\n  transition: right 0.3s, opacity 0.5s;\n  height: 24px;\n  width: 24px;\n  background: ", ";\n  border-radius: 50px;\n  opacity: 1;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n  &.close {\n    right: calc(", "px + 1rem);\n    transition: right 300ms;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  position: fixed;\n  right: 0.5rem;\n  transform: translateY(-50%);\n  top: 50%;\n  transition: right 0.3s, opacity 0.5s;\n  height: 24px;\n  width: 24px;\n  background: ", ";\n  border-radius: 50px;\n  opacity: 1;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n  &.close {\n    right: calc(", "px + 1rem);\n    transition: right 300ms;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        Vh = Kh(["\n  label: closeButton;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  &.close {\n    background: url(", ") no-repeat center center;\n  }\n"], ["\n  label: closeButton;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  &.close {\n    background: url(", ") no-repeat center center;\n  }\n"]),
        Wh = Kh(["\n  label: titleText;\n  font-size: 12px;\n  margin: 1rem 0;\n  text-align: center;\n  text-transform: uppercase;\n"], ["\n  label: titleText;\n  font-size: 12px;\n  margin: 1rem 0;\n  text-align: center;\n  text-transform: uppercase;\n"]),
        Zh = Kh(["\n  label: titleTexty;\n  max-width: 90%;\n  font-size: 16px;\n  font-weight: 400;\n  text-align: center;\n  margin-top: 40px;\n  margin-left: 20px;\n  margin-right: 20px;\n"], ["\n  label: titleTexty;\n  max-width: 90%;\n  font-size: 16px;\n  font-weight: 400;\n  text-align: center;\n  margin-top: 40px;\n  margin-left: 20px;\n  margin-right: 20px;\n"]);

    function Kh(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Xh = ah(qh, 240),
        Jh = ah(Fh, "rgba(255, 255, 255, 1)", Lf, 240, 240),
        Qh = ah(Rh, Of),
        ey = ah(Uh, Mf, Mf, Ef, Ef),
        ny = ah(Yh, Of),
        ty = ah(Hh, Lf, 240),
        ry = ah(Vh, zh, Bh),
        iy = (ah(Wh), ah(Zh), function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }());
    var oy = function () {
            function r(e, n) {
                var t = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, r), this.root = e, this.el = this.root.append("div").attr("class", "" + Jh), this.content = this.el.append("div").attr("class", "" + Xh), this.updateTsne = n, this.isOpen = !1, this.countryMode = !1, this.menuButton = this.root.append("div").attr("class", ty).on("click", function () {
                    t.isOpen = !t.isOpen, t.el.classed("hidden", !t.isOpen), t.menuButton.classed("close", t.isOpen), t.icon.classed("close", t.isOpen)
                }), this.icon = this.menuButton.append("div").attr("class", ry), this.el.classed("hidden", !this.isOpen), this.menuButton.classed("hidden", !0), this.panelTitle = this.content.append("div").attr("class", ny).text("t-SNE Controls"), this.resetButton = this.content.append("div").attr("class", ey).text("reset general settings"), this.interactivePanel = this.content.append("div").attr("class", Qh), this.countryPanel = this.content.append("div").attr("class", Qh), this.countryPanel.classed("hidden", !0), this.setGeneralPanel(n), this.setCountryPanel()
            }
            return iy(r, [{
                key: "update",
                value: function (e) {
                    this.isOpen = e, this.el.classed("hidden", !this.isOpen), this.menuButton.classed("close", this.isOpen), this.icon.classed("close", this.isOpen)
                }
            }, {
                key: "setGeneralPanel",
                value: function (n) {
                    this.perplexitySliderContainer = this.interactivePanel.append("div"), this.perplexitySlider = new kh(this.perplexitySliderContainer, [0, 50], 4, "Perplexity", 230, null, null, function (e) {
                        n({
                            perplexity: e
                        })
                    })
                }
            }, {
                key: "setCountryPanel",
                value: function () {
                    this.countrySliders = {}, this.sliderContainer = this.countryPanel.append("div")
                }
            }, {
                key: "createCountryPanel",
                value: function (n) {
                    this.countrySliders[n.title] = new kh(this.sliderContainer, n.feature.extent, n.feature.extent[0], n.title, 200, n.formatter, n.allKeys.indexOf(n.title), function (e) {
                        n.action(e)
                    })
                }
            }, {
                key: "setupMode",
                value: function (e) {
                    this.countryMode = e, this.interactivePanel.classed("hidden", e), this.countryPanel.classed("hidden", !e), this.content.node().scrollTop = 0, this.resetButton.text(e ? "reset country settings" : "reset general settings")
                }
            }, {
                key: "scrollToHealthExpenditure",
                value: function (e) {
                    var i = this,
                        n = 0;
                    this.timer = ue(function () {
                        if (n < 450) n += 50, i.content.node().scrollTop = n;
                        else {
                            i.timer.stop();
                            var r = pi(i.countrySliders);
                            e.forEach(function (e, n) {
                                var t = Li(r, e);
                                0 === n ? i.countrySliders[r[t]].slowlyUpdateValueTo(736) : i.countrySliders[r[t]].slowlyUpdateValueTo(4.14)
                            })
                        }
                    }, 100)
                }
            }, {
                key: "setupCheckbox",
                value: function (e) {
                    var n = this.interactivePanel.append("div"),
                        t = new $h(n);
                    return t.setData({
                        title: e.title,
                        checked: e.checked
                    }).setActions(e.action), t
                }
            }, {
                key: "setResetAction",
                value: function (e) {
                    var n = this;
                    this.resetButton.on("click", function () {
                        n.countryMode ? e.resetCountry() : (n.perplexitySlider.updateValue(4), e.resetSettings())
                    })
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "getWidth",
                value: function () {
                    return this.width
                }
            }, {
                key: "getHeight",
                value: function () {
                    return this.height
                }
            }]), r
        }(),
        ay = "data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20data-prefix%3D%22fas%22%20data-icon%3D%22times%22%20class%3D%22svg-inline--fa%20fa-times%20fa-w-11%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20352%20512%22%3E%3Cpath%20fill%3D%22%239B9BA5%22%20d%3D%22M242.72%20256l100.07-100.07c12.28-12.28%2012.28-32.19%200-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48%200L176%20189.28%2075.93%2089.21c-12.28-12.28-32.19-12.28-44.48%200L9.21%20111.45c-12.28%2012.28-12.28%2032.19%200%2044.48L109.28%20256%209.21%20356.07c-12.28%2012.28-12.28%2032.19%200%2044.48l22.24%2022.24c12.28%2012.28%2032.2%2012.28%2044.48%200L176%20322.72l100.07%20100.07c12.28%2012.28%2032.2%2012.28%2044.48%200l22.24-22.24c12.28-12.28%2012.28-32.19%200-44.48L242.72%20256z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E",
        ly = my(["\n  label: arrow;\n  height: 18px;\n  width: 11px;\n  top: calc(50% - 1rem);\n  margin: auto;\n  position: absolute;\n  transform: translateY(-50%);\n  ", ";\n  cursor: pointer;\n  background-repeat: no-repeat;\n\n  &.hidden {\n    pointer-events: none;\n    opacity: 0.35;\n  }\n"], ["\n  label: arrow;\n  height: 18px;\n  width: 11px;\n  top: calc(50% - 1rem);\n  margin: auto;\n  position: absolute;\n  transform: translateY(-50%);\n  ", ";\n  cursor: pointer;\n  background-repeat: no-repeat;\n\n  &.hidden {\n    pointer-events: none;\n    opacity: 0.35;\n  }\n"]),
        cy = my(["\n  display: inline-block;\n  height: auto;\n  width: 3rem;\n  position: relative;\n  opacity: 1;\n  transition: opacity 0.5s;\n  cursor: pointer;\n\n  path {\n    fill: ", ";\n  }\n\n  :hover {\n    path {\n      fill: ", ";\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  &.empty {\n    margin: 0;\n  }\n"], ["\n  display: inline-block;\n  height: auto;\n  width: 3rem;\n  position: relative;\n  opacity: 1;\n  transition: opacity 0.5s;\n  cursor: pointer;\n\n  path {\n    fill: ", ";\n  }\n\n  :hover {\n    path {\n      fill: ", ";\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    opacity: 0;\n    visibility: hidden;\n  }\n\n  &.empty {\n    margin: 0;\n  }\n"]),
        sy = my(["\n  display: flex;\n  width: 100%;\n"], ["\n  display: flex;\n  width: 100%;\n"]),
        uy = my(["\n  color: ", ";\n  display: inline-block;\n  margin-bottom: 1rem;\n  margin-top: 0.5rem;\n  // margin-bottom: 1.5rem;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.25rem;\n  text-align: justify;\n  p {\n    margin: 0.5rem 0rem;\n    padding: 0;\n  }\n  span {\n    margin: 0.5rem 0rem;\n    padding: 0;\n  }\n  &.empty {\n    margin: 0;\n  }\n"], ["\n  color: ", ";\n  display: inline-block;\n  margin-bottom: 1rem;\n  margin-top: 0.5rem;\n  // margin-bottom: 1.5rem;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.25rem;\n  text-align: justify;\n  p {\n    margin: 0.5rem 0rem;\n    padding: 0;\n  }\n  span {\n    margin: 0.5rem 0rem;\n    padding: 0;\n  }\n  &.empty {\n    margin: 0;\n  }\n"]),
        py = my(["\n  position: absolute;\n  left: 50%;\n  bottom: 0%;\n  transform: translateX(-50%);\n  background-color: ", ";\n  max-width: 45%;\n  margin: 1rem 0rem;\n  padding: 0.5rem;\n  border-radius: 0.3rem;\n  backdrop-filter: blur(3px);\n  box-shadow: 2px 2px 11px -4px #14151c;\n  transition: bottom 300ms, visibility 300ms;\n\n  &.hidden {\n    bottom: calc(-", "px - 0.5rem);\n    visibility: hidden;\n  }\n\n  .story-title {\n    color: ", ";\n    // margin: 0.75rem 1rem;\n    margin: 0.3rem 1rem;\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n    font-weight: 100;\n    text-align: center;\n    text-transform: uppercase;\n  }\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n"], ["\n  position: absolute;\n  left: 50%;\n  bottom: 0%;\n  transform: translateX(-50%);\n  background-color: ", ";\n  max-width: 45%;\n  margin: 1rem 0rem;\n  padding: 0.5rem;\n  border-radius: 0.3rem;\n  backdrop-filter: blur(3px);\n  box-shadow: 2px 2px 11px -4px #14151c;\n  transition: bottom 300ms, visibility 300ms;\n\n  &.hidden {\n    bottom: calc(-", "px - 0.5rem);\n    visibility: hidden;\n  }\n\n  .story-title {\n    color: ", ";\n    // margin: 0.75rem 1rem;\n    margin: 0.3rem 1rem;\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n    font-weight: 100;\n    text-align: center;\n    text-transform: uppercase;\n  }\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n"]),
        dy = my(["\n  label: openButton;\n  position: fixed;\n  bottom: 1rem;\n  left: calc(50% - 0.25rem - 12px);\n  transition: opacity 0.5s;\n  margin-right: 2rem;\n  height: 24px;\n  width: 24px;\n  border-radius: 50px;\n  opacity: 1;\n  background: ", ";\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n\n  &.hidden {\n    transition: visibility 0.5s;\n    opacity: 0;\n    visibility: hidden;\n  }\n"], ["\n  label: openButton;\n  position: fixed;\n  bottom: 1rem;\n  left: calc(50% - 0.25rem - 12px);\n  transition: opacity 0.5s;\n  margin-right: 2rem;\n  height: 24px;\n  width: 24px;\n  border-radius: 50px;\n  opacity: 1;\n  background: ", ";\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n\n  &.hidden {\n    transition: visibility 0.5s;\n    opacity: 0;\n    visibility: hidden;\n  }\n"]),
        fy = my(["\n  label: openIcon;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n"], ["\n  label: openIcon;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n"]),
        hy = my(["\n  label: closeButton;\n  position: absolute;\n  bottom: calc(", "px - 1.25rem);\n  left: calc(50% + ", "px - 1.85rem);\n  transition: visibility 0s, opacity 0.3s;\n  transition-delay: 0.3s;\n  margin-right: 2rem;\n  height: 12px;\n  width: 12px;\n  border-radius: 50px;\n  opacity: 1;\n\n  path {\n    fill: ", ";\n  }\n\n  :hover {\n    cursor: pointer;\n    path {\n      fill: ", ";\n    }\n  }\n\n  // &:hover,\n  // &:focus {\n  //   cursor: pointer;\n  // }\n\n  &.hidden {\n    transition-delay: 0s;\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  label: closeButton;\n  position: absolute;\n  bottom: calc(", "px - 1.25rem);\n  left: calc(50% + ", "px - 1.85rem);\n  transition: visibility 0s, opacity 0.3s;\n  transition-delay: 0.3s;\n  margin-right: 2rem;\n  height: 12px;\n  width: 12px;\n  border-radius: 50px;\n  opacity: 1;\n\n  path {\n    fill: ", ";\n  }\n\n  :hover {\n    cursor: pointer;\n    path {\n      fill: ", ";\n    }\n  }\n\n  // &:hover,\n  // &:focus {\n  //   cursor: pointer;\n  // }\n\n  &.hidden {\n    transition-delay: 0s;\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        yy = my(["\n  label: closeIcon;\n  margin-left: auto;\n  position: relative;\n  top: 15%;\n  transform: translateY(-50%);\n  // background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  \n"], ["\n  label: closeIcon;\n  margin-left: auto;\n  position: relative;\n  top: 15%;\n  transform: translateY(-50%);\n  // background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  \n"]);

    function my(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var gy = function (e) {
            return ah(ly, "left" === e.direction ? "left: 25%;" : "right: 25%;")
        },
        vy = ah(cy, Mf, Ef),
        Py = ah(sy),
        xy = ah(uy, Mf),
        by = ah(py, Lf, 650, Of, Mf, Ef),
        wy = ah(fy, "data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20data-prefix%3D%22fas%22%20data-icon%3D%22comment%22%20class%3D%22svg-inline--fa%20fa-comment%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22%239B9BA5%22%20d%3D%22M256%2032C114.6%2032%200%20125.1%200%20240c0%2049.6%2021.4%2095%2057%20130.7C44.5%20421.1%202.7%20466%202.2%20466.5c-2.2%202.3-2.8%205.7-1.5%208.7S4.8%20480%208%20480c66.3%200%20116-31.8%20140.6-51.4%2032.7%2012.3%2069%2019.4%20107.4%2019.4%20141.4%200%20256-93.1%20256-208S397.4%2032%20256%2032z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E"),
        Dy = function (e) {
            return ah(hy, e.height, e.width / 2, Mf, Ef)
        },
        Gy = ah(yy, ay),
        Cy = {
            searchPlaceholder: "Find a country...",
            startButton: "Run t-SNE",
            warning: "We are sorry, the project has been designed for big screens. Come back from your laptop or desktop computer to experiente the magic of machine learning and data visualization.",
            projectTitle: "<span>About the project</span>",
            projectDescription: "This project explores how machine learning algorithms and data visualization techniques can make raw data more meaningful and help to better understand it.\n\nGrand Prize winner of the World Data Visualization Prize 2019.",
            authorsTitle: "---",
            authors: "<b>I N T E R A C T A</b> <br/>Nikita Rokotyan | Olya Stukova | Dasha Kolmakova\n2019",
            introductionTitle: "<span> An alternative data-driven\ncountry map </span>",
            introductionSubTitle: "<span><b>t-SNE</b> powered data exploration experiment</span>",
            introductiondescription: "<span><b>t-SNE</b> is a (magical) machine learning algorithm that can visually group similar data points together without knowing anything about the actual data. Think of every country as a data point which has a number of properties, t-SNE will search for local and global similarities between the countries and place them closer to each other on this map.\n  \nWe processed the data about countries all around the world from one of three dataset provided by <b>Information is Beautiful</b> and <b>World Government Summit</b> through <b>t-SNE</b> and created this visual tool that allows you to play with the data by changing the values of country indicators and see where they land on a <b>t-SNE</b> plot after adjustments.</span>",
            storyTitle0: "t-SNE is doing its magic…",
            storyTitle1: "Understanding the data",
            story1: "<p>Every bubble is a country represented by various indicators and indexes, such as <b>Population</b>, <b>GDP</b>, <b>GINI index</b>, <b>Happy Planet Index</b> and others. You can see the full list by click on the gear on the left. </p>\n\n  <p>Different colors represent different continents, the size of a bubble is related to the population of its country. You will be able to change this later.</p>\n  <p> Some of the countries have been removed from the exploration due to absence of data.</p>",
            storyTitle2: "Understanding the data",
            story2: "<b>t-SNE</b> clusters similar countries together, but it doesn’t tell you what makes them similar. That’s what you have to figure out by yourself, which can uncover unexpected connections.",
            storyTitle3: "Let’s explore our t-SNE canvas",
            story3: "Here you can see a bunch of countries that form a cluster.\n\n  There’s <b>UK</b>, <b>Germany</b>, <b>United States</b>, <b>Japan</b>, and other countries that we call <b>developed</b>. They’re represented by high values of such indicators as <b>Political Stability</b>, <b>Control of Corruption</b>, <b>Judicial Effectiveness</b>, <b>Property Rights Score</b>, and others.",
            storyTitle4: "Let’s explore our t-SNE canvas",
            story4: "Here’s a small cluster that consists of <b>China</b> and <b>India</b>. As we found, it was formed because they have the biggest population in the world.",
            storyTitle5: "Middle East and Singapore?",
            story5: "Surprisingly, <b>Singapore</b> and <b>Brunei</b> landed in the same cluster with some of the <b>Middle East</b> countries. What do they have in common?\n\n  Click on a country bubble to see its indicators and explore!\n  ",
            storyTitle6: "Russia and Brazil?",
            story6: "Why is <b>Russia</b> close to <b>Brazil</b>?\n\n  You can turn on and off which indicators t-SNE will take into account when it calculates where to place the countries.",
            storyTitle7: "You can select which indicators to use",
            story7: "Let’s try to exclude <b>Population</b> and <b>Surface Area</b> from t-SNE and see how some of the clusters will reform.\n\n    <b>Russia</b> and <b>Brazil</b> will now split and move to other areas.",
            storyTitle8: "Play with the indicators",
            story8: "Now let’s see what will happen if you change some of the country indicators. Let’s reduce <b>Health Expendidure</b> in the <b>United States</b>.",
            storyTitle9: "Play with the indicators",
            story9: "The country will leave the developed countries cluster and go somewhere else!",
            storyTitle10: "Explore!",
            story10: "Interested what will happen if you change some of the properties of your country? Click on a bubble to display the control sliders and play with them."
        },
        Sy = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var Iy = function () {
            function n(e) {
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, n), this.container = e, this.currentStep = 0, this.maxStep = 10, this.isOpen = !1
            }
            return Sy(n, [{
                key: "setupStepBox",
                value: function () {
                    var e = this,
                        n = this.container,
                        t = this.currentStep;
                    this.story = n.append("div").attr("class", by), this.story.style("opacity", 0).transition().duration(300).style("opacity", 1), this.story.classed("hidden", this.isOpen), this.stepTitle = this.story.append("div").attr("class", "story-title").html(Cy["storyTitle" + t]), this.stepContent = this.story.append("div").attr("class", Py), this.leftArrowBlock = this.stepContent.append("div").attr("class", vy).classed("hidden", !0).classed("empty", !0), setTimeout(function () {
                        e.leftArrowBlock.classed("hidden", !1)
                    }, 4e3), this.leftArrow = this.leftArrowBlock.append("div").attr("class", gy({
                        direction: "left"
                    })).classed("hidden", !0).classed("empty", !0), this.leftIcon = this.leftArrow.html('<svg aria-hidden="true" data-prefix="fas" data-icon="chevron-left" id="left-arrow-icon" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"></path></svg>'), this.stepText = this.stepContent.append("div").attr("class", xy).html(Cy["story" + t]), this.stepText.classed("empty", !0), this.rightArrowBlock = this.stepContent.append("div").attr("class", vy).classed("hidden", !0).classed("empty", !0), setTimeout(function () {
                        e.rightArrowBlock.classed("hidden", !1)
                    }, 4e3), this.rigthArrow = this.rightArrowBlock.append("div").attr("class", gy({
                        direction: "right"
                    })), this.rigthIcon = this.rigthArrow.html('<svg aria-hidden="true" data-prefix="fas" data-icon="chevron-right" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"></path></svg>'), this.leftArrowBlock.on("click", function () {
                        1 < e.currentStep && (e.currentStep -= 1, e.update())
                    }), this.rightArrowBlock.on("click", function () {
                        e.currentStep < e.maxStep && 0 < e.currentStep && (e.currentStep += 1, e.update())
                    }), U(window).on("keydown", function () {
                        39 === N.keyCode && e.currentStep < e.maxStep && 0 < e.currentStep ? (e.currentStep += 1, e.update()) : 37 === N.keyCode && 1 < e.currentStep && (e.currentStep -= 1, e.update())
                    }), this.closeButton = this.container.append("div").attr("class", Dy({
                        height: this.story.node().clientHeight,
                        width: this.story.node().clientWidth
                    })).classed("hidden", !0).html('<svg aria-hidden="true" data-prefix="fas" data-icon="times"  role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 352 512"><path fill="#9B9BA5" d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"></path></svg>').on("click", function () {
                        e.isOpen = !e.isOpen, e.story.classed("hidden", e.isOpen), e.closeButton.classed("hidden", e.isOpen), e.closeIcon.classed("hidden", e.isOpen), e.openButton.classed("hidden", !e.isOpen), e.openIcon.classed("hidden", !e.isOpen)
                    }), this.closeIcon = this.closeButton.append("div").attr("class", Gy), this.openButton = this.container.append("div").attr("class", (this.story.node().clientHeight, ah(dy, Lf))).classed("hidden", !0).on("click", function () {
                        e.isOpen = !e.isOpen, e.story.classed("hidden", e.isOpen), e.closeButton.classed("hidden", e.isOpen), e.closeIcon.classed("hidden", e.isOpen), e.openButton.classed("hidden", !e.isOpen), e.openIcon.classed("hidden", !e.isOpen)
                    }), this.openIcon = this.openButton.append("div").attr("class", wy)
                }
            }, {
                key: "setActions",
                value: function (e) {
                    this.actions = e
                }
            }, {
                key: "update",
                value: function () {
                    var e = this.stepText,
                        n = this.stepTitle,
                        t = this.currentStep,
                        r = this.actions;
                    1 <= t && (this.leftArrow.classed("hidden", 1 === this.currentStep), this.rigthArrow.classed("hidden", this.currentStep === this.maxStep), e.classed("empty", null == Cy["story" + t]), this.rightArrowBlock.classed("empty", null == Cy["story" + t]), this.leftArrowBlock.classed("empty", null == Cy["story" + t]), n.html(Cy["storyTitle" + t]), e.html(Cy["story" + t]), r.reset(), r["story" + t](), this.closeButton.attr("class", Dy({
                        height: this.story.node().clientHeight,
                        width: this.story.node().clientWidth
                    })), this.closeButton.classed("hidden", this.isOpen))
                }
            }]), n
        }(),
        My = "http://www.w3.org/1999/xhtml",
        ky = {
            svg: "http://www.w3.org/2000/svg",
            xhtml: My,
            xlink: "http://www.w3.org/1999/xlink",
            xml: "http://www.w3.org/XML/1998/namespace",
            xmlns: "http://www.w3.org/2000/xmlns/"
        };

    function Ay(e) {
        var n = e += "",
            t = n.indexOf(":");
        return 0 <= t && "xmlns" !== (n = e.slice(0, t)) && (e = e.slice(t + 1)), ky.hasOwnProperty(n) ? {
            space: ky[n],
            local: e
        } : e
    }

    function _y(e) {
        var n = Ay(e);
        return (n.local ? function (e) {
            return function () {
                return this.ownerDocument.createElementNS(e.space, e.local)
            }
        } : function (t) {
            return function () {
                var e = this.ownerDocument,
                    n = this.namespaceURI;
                return n === My && e.documentElement.namespaceURI === My ? e.createElement(t) : e.createElementNS(n, t)
            }
        })(n)
    }
    var Oy = function (e) {
        return function () {
            return this.matches(e)
        }
    };
    if ("undefined" != typeof document) {
        var Ly = document.documentElement;
        if (!Ly.matches) {
            var Ey = Ly.webkitMatchesSelector || Ly.msMatchesSelector || Ly.mozMatchesSelector || Ly.oMatchesSelector;
            Oy = function (e) {
                return function () {
                    return Ey.call(this, e)
                }
            }
        }
    }
    var Ny = Oy,
        jy = {};
    "undefined" != typeof document && ("onmouseenter" in document.documentElement || (jy = {
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }));

    function Ty(t, e, n) {
        return t = $y(t, e, n),
            function (e) {
                var n = e.relatedTarget;
                n && (n === this || 8 & n.compareDocumentPosition(this)) || t.call(this, e)
            }
    }

    function $y(n, t, r) {
        return function (e) {
            try {
                n.call(this, this.__data__, t, r)
            } finally {}
        }
    }

    function zy(o) {
        return function () {
            var e = this.__on;
            if (e) {
                for (var n, t = 0, r = -1, i = e.length; t < i; ++t) n = e[t], o.type && n.type !== o.type || n.name !== o.name ? e[++r] = n : this.removeEventListener(n.type, n.listener, n.capture);
                ++r ? e.length = r : delete this.__on
            }
        }
    }

    function By(c, s, u) {
        var p = jy.hasOwnProperty(c.type) ? Ty : $y;
        return function (e, n, t) {
            var r, i = this.__on,
                o = p(s, n, t);
            if (i)
                for (var a = 0, l = i.length; a < l; ++a)
                    if ((r = i[a]).type === c.type && r.name === c.name) return this.removeEventListener(r.type, r.listener, r.capture), this.addEventListener(r.type, r.listener = o, r.capture = u), void(r.value = s);
            this.addEventListener(c.type, o, u), r = {
                type: c.type,
                name: c.name,
                value: s,
                listener: o,
                capture: u
            }, i ? i.push(r) : this.__on = [r]
        }
    }

    function qy() {}

    function Fy(e) {
        return null == e ? qy : function () {
            return this.querySelector(e)
        }
    }

    function Ry() {
        return []
    }

    function Uy(e) {
        return new Array(e.length)
    }

    function Yy(e, n) {
        this.ownerDocument = e.ownerDocument, this.namespaceURI = e.namespaceURI, this._next = null, this._parent = e, this.__data__ = n
    }
    Yy.prototype = {
        constructor: Yy,
        appendChild: function (e) {
            return this._parent.insertBefore(e, this._next)
        },
        insertBefore: function (e, n) {
            return this._parent.insertBefore(e, n)
        },
        querySelector: function (e) {
            return this._parent.querySelector(e)
        },
        querySelectorAll: function (e) {
            return this._parent.querySelectorAll(e)
        }
    };
    var Hy = "$";

    function Vy(e, n, t, r, i, o) {
        for (var a, l = 0, c = n.length, s = o.length; l < s; ++l)(a = n[l]) ? (a.__data__ = o[l], r[l] = a) : t[l] = new Yy(e, o[l]);
        for (; l < c; ++l)(a = n[l]) && (i[l] = a)
    }

    function Wy(e, n, t, r, i, o, a) {
        var l, c, s, u = {},
            p = n.length,
            d = o.length,
            f = new Array(p);
        for (l = 0; l < p; ++l)(c = n[l]) && (f[l] = s = Hy + a.call(c, c.__data__, l, n), s in u ? i[l] = c : u[s] = c);
        for (l = 0; l < d; ++l)(c = u[s = Hy + a.call(e, o[l], l, o)]) ? ((r[l] = c).__data__ = o[l], u[s] = null) : t[l] = new Yy(e, o[l]);
        for (l = 0; l < p; ++l)(c = n[l]) && u[f[l]] === c && (i[l] = c)
    }

    function Zy(e, n) {
        return e < n ? -1 : n < e ? 1 : n <= e ? 0 : NaN
    }

    function Ky(e) {
        return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView
    }

    function Xy(e) {
        return e.trim().split(/^|\s+/)
    }

    function Jy(e) {
        return e.classList || new Qy(e)
    }

    function Qy(e) {
        this._node = e, this._names = Xy(e.getAttribute("class") || "")
    }

    function em(e, n) {
        for (var t = Jy(e), r = -1, i = n.length; ++r < i;) t.add(n[r])
    }

    function nm(e, n) {
        for (var t = Jy(e), r = -1, i = n.length; ++r < i;) t.remove(n[r])
    }

    function tm() {
        this.textContent = ""
    }

    function rm() {
        this.innerHTML = ""
    }

    function im() {
        this.nextSibling && this.parentNode.appendChild(this)
    }

    function om() {
        this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild)
    }

    function am() {
        return null
    }

    function lm() {
        var e = this.parentNode;
        e && e.removeChild(this)
    }

    function cm(e, n, t) {
        var r = Ky(e),
            i = r.CustomEvent;
        i ? i = new i(n, t) : (i = r.document.createEvent("Event"), t ? (i.initEvent(n, t.bubbles, t.cancelable), i.detail = t.detail) : i.initEvent(n, !1, !1)), e.dispatchEvent(i)
    }
    Qy.prototype = {
        add: function (e) {
            this._names.indexOf(e) < 0 && (this._names.push(e), this._node.setAttribute("class", this._names.join(" ")))
        },
        remove: function (e) {
            var n = this._names.indexOf(e);
            0 <= n && (this._names.splice(n, 1), this._node.setAttribute("class", this._names.join(" ")))
        },
        contains: function (e) {
            return 0 <= this._names.indexOf(e)
        }
    };
    var sm, um = [null];

    function pm(e, n) {
        this._groups = e, this._parents = n
    }

    function dm(e, n) {
        if ((t = (e = n ? e.toExponential(n - 1) : e.toExponential()).indexOf("e")) < 0) return null;
        var t, r = e.slice(0, t);
        return [1 < r.length ? r[0] + r.slice(2) : r, +e.slice(t + 1)]
    }

    function fm(e, n) {
        var t = dm(e, n);
        if (!t) return e + "";
        var r = t[0],
            i = t[1];
        return i < 0 ? "0." + new Array(-i).join("0") + r : r.length > i + 1 ? r.slice(0, i + 1) + "." + r.slice(i + 1) : r + new Array(i - r.length + 2).join("0")
    }
    pm.prototype = function () {
        return new pm([
            [document.documentElement]
        ], um)
    }.prototype = {
        constructor: pm,
        select: function (e) {
            "function" != typeof e && (e = Fy(e));
            for (var n = this._groups, t = n.length, r = new Array(t), i = 0; i < t; ++i)
                for (var o, a, l = n[i], c = l.length, s = r[i] = new Array(c), u = 0; u < c; ++u)(o = l[u]) && (a = e.call(o, o.__data__, u, l)) && ("__data__" in o && (a.__data__ = o.__data__), s[u] = a);
            return new pm(r, this._parents)
        },
        selectAll: function (e) {
            var n;
            "function" != typeof e && (e = null == (n = e) ? Ry : function () {
                return this.querySelectorAll(n)
            });
            for (var t = this._groups, r = t.length, i = [], o = [], a = 0; a < r; ++a)
                for (var l, c = t[a], s = c.length, u = 0; u < s; ++u)(l = c[u]) && (i.push(e.call(l, l.__data__, u, c)), o.push(l));
            return new pm(i, o)
        },
        filter: function (e) {
            "function" != typeof e && (e = Ny(e));
            for (var n = this._groups, t = n.length, r = new Array(t), i = 0; i < t; ++i)
                for (var o, a = n[i], l = a.length, c = r[i] = [], s = 0; s < l; ++s)(o = a[s]) && e.call(o, o.__data__, s, a) && c.push(o);
            return new pm(r, this._parents)
        },
        data: function (e, n) {
            if (!e) return h = new Array(this.size()), u = -1, this.each(function (e) {
                h[++u] = e
            }), h;
            var t, r = n ? Wy : Vy,
                i = this._parents,
                o = this._groups;
            "function" != typeof e && (t = e, e = function () {
                return t
            });
            for (var a = o.length, l = new Array(a), c = new Array(a), s = new Array(a), u = 0; u < a; ++u) {
                var p = i[u],
                    d = o[u],
                    f = d.length,
                    h = e.call(p, p && p.__data__, u, i),
                    y = h.length,
                    m = c[u] = new Array(y),
                    g = l[u] = new Array(y);
                r(p, d, m, g, s[u] = new Array(f), h, n);
                for (var v, P, x = 0, b = 0; x < y; ++x)
                    if (v = m[x]) {
                        for (b <= x && (b = x + 1); !(P = g[b]) && ++b < y;);
                        v._next = P || null
                    }
            }
            return (l = new pm(l, i))._enter = c, l._exit = s, l
        },
        enter: function () {
            return new pm(this._enter || this._groups.map(Uy), this._parents)
        },
        exit: function () {
            return new pm(this._exit || this._groups.map(Uy), this._parents)
        },
        merge: function (e) {
            for (var n = this._groups, t = e._groups, r = n.length, i = t.length, o = Math.min(r, i), a = new Array(r), l = 0; l < o; ++l)
                for (var c, s = n[l], u = t[l], p = s.length, d = a[l] = new Array(p), f = 0; f < p; ++f)(c = s[f] || u[f]) && (d[f] = c);
            for (; l < r; ++l) a[l] = n[l];
            return new pm(a, this._parents)
        },
        order: function () {
            for (var e = this._groups, n = -1, t = e.length; ++n < t;)
                for (var r, i = e[n], o = i.length - 1, a = i[o]; 0 <= --o;)(r = i[o]) && (a && a !== r.nextSibling && a.parentNode.insertBefore(r, a), a = r);
            return this
        },
        sort: function (t) {
            function e(e, n) {
                return e && n ? t(e.__data__, n.__data__) : !e - !n
            }
            t || (t = Zy);
            for (var n = this._groups, r = n.length, i = new Array(r), o = 0; o < r; ++o) {
                for (var a, l = n[o], c = l.length, s = i[o] = new Array(c), u = 0; u < c; ++u)(a = l[u]) && (s[u] = a);
                s.sort(e)
            }
            return new pm(i, this._parents).order()
        },
        call: function () {
            var e = arguments[0];
            return arguments[0] = this, e.apply(null, arguments), this
        },
        nodes: function () {
            var e = new Array(this.size()),
                n = -1;
            return this.each(function () {
                e[++n] = this
            }), e
        },
        node: function () {
            for (var e = this._groups, n = 0, t = e.length; n < t; ++n)
                for (var r = e[n], i = 0, o = r.length; i < o; ++i) {
                    var a = r[i];
                    if (a) return a
                }
            return null
        },
        size: function () {
            var e = 0;
            return this.each(function () {
                ++e
            }), e
        },
        empty: function () {
            return !this.node()
        },
        each: function (e) {
            for (var n = this._groups, t = 0, r = n.length; t < r; ++t)
                for (var i, o = n[t], a = 0, l = o.length; a < l; ++a)(i = o[a]) && e.call(i, i.__data__, a, o);
            return this
        },
        attr: function (e, n) {
            var t = Ay(e);
            if (arguments.length < 2) {
                var r = this.node();
                return t.local ? r.getAttributeNS(t.space, t.local) : r.getAttribute(t)
            }
            return this.each((null == n ? t.local ? function (e) {
                return function () {
                    this.removeAttributeNS(e.space, e.local)
                }
            } : function (e) {
                return function () {
                    this.removeAttribute(e)
                }
            } : "function" == typeof n ? t.local ? function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.removeAttributeNS(n.space, n.local) : this.setAttributeNS(n.space, n.local, e)
                }
            } : function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.removeAttribute(n) : this.setAttribute(n, e)
                }
            } : t.local ? function (e, n) {
                return function () {
                    this.setAttributeNS(e.space, e.local, n)
                }
            } : function (e, n) {
                return function () {
                    this.setAttribute(e, n)
                }
            })(t, n))
        },
        style: function (e, n, t) {
            var r;
            return 1 < arguments.length ? this.each((null == n ? function (e) {
                return function () {
                    this.style.removeProperty(e)
                }
            } : "function" == typeof n ? function (n, t, r) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? this.style.removeProperty(n) : this.style.setProperty(n, e, r)
                }
            } : function (e, n, t) {
                return function () {
                    this.style.setProperty(e, n, t)
                }
            })(e, n, null == t ? "" : t)) : Ky(r = this.node()).getComputedStyle(r, null).getPropertyValue(e)
        },
        property: function (e, n) {
            return 1 < arguments.length ? this.each((null == n ? function (e) {
                return function () {
                    delete this[e]
                }
            } : "function" == typeof n ? function (n, t) {
                return function () {
                    var e = t.apply(this, arguments);
                    null == e ? delete this[n] : this[n] = e
                }
            } : function (e, n) {
                return function () {
                    this[e] = n
                }
            })(e, n)) : this.node()[e]
        },
        classed: function (e, n) {
            var t = Xy(e + "");
            if (arguments.length < 2) {
                for (var r = Jy(this.node()), i = -1, o = t.length; ++i < o;)
                    if (!r.contains(t[i])) return !1;
                return !0
            }
            return this.each(("function" == typeof n ? function (e, n) {
                return function () {
                    (n.apply(this, arguments) ? em : nm)(this, e)
                }
            } : n ? function (e) {
                return function () {
                    em(this, e)
                }
            } : function (e) {
                return function () {
                    nm(this, e)
                }
            })(t, n))
        },
        text: function (e) {
            return arguments.length ? this.each(null == e ? tm : ("function" == typeof e ? function (n) {
                return function () {
                    var e = n.apply(this, arguments);
                    this.textContent = null == e ? "" : e
                }
            } : function (e) {
                return function () {
                    this.textContent = e
                }
            })(e)) : this.node().textContent
        },
        html: function (e) {
            return arguments.length ? this.each(null == e ? rm : ("function" == typeof e ? function (n) {
                return function () {
                    var e = n.apply(this, arguments);
                    this.innerHTML = null == e ? "" : e
                }
            } : function (e) {
                return function () {
                    this.innerHTML = e
                }
            })(e)) : this.node().innerHTML
        },
        raise: function () {
            return this.each(im)
        },
        lower: function () {
            return this.each(om)
        },
        append: function (e) {
            var n = "function" == typeof e ? e : _y(e);
            return this.select(function () {
                return this.appendChild(n.apply(this, arguments))
            })
        },
        insert: function (e, n) {
            var t = "function" == typeof e ? e : _y(e),
                r = null == n ? am : "function" == typeof n ? n : Fy(n);
            return this.select(function () {
                return this.insertBefore(t.apply(this, arguments), r.apply(this, arguments) || null)
            })
        },
        remove: function () {
            return this.each(lm)
        },
        datum: function (e) {
            return arguments.length ? this.property("__data__", e) : this.node().__data__
        },
        on: function (e, n, t) {
            var r, i, o = (e + "").trim().split(/^|\s+/).map(function (e) {
                    var n = "",
                        t = e.indexOf(".");
                    return 0 <= t && (n = e.slice(t + 1), e = e.slice(0, t)), {
                        type: e,
                        name: n
                    }
                }),
                a = o.length;
            if (!(arguments.length < 2)) {
                for (l = n ? By : zy, null == t && (t = !1), r = 0; r < a; ++r) this.each(l(o[r], n, t));
                return this
            }
            var l = this.node().__on;
            if (l)
                for (var c, s = 0, u = l.length; s < u; ++s)
                    for (r = 0, c = l[s]; r < a; ++r)
                        if ((i = o[r]).type === c.type && i.name === c.name) return c.value
        },
        dispatch: function (e, n) {
            return this.each(("function" == typeof n ? function (e, n) {
                return function () {
                    return cm(this, e, n.apply(this, arguments))
                }
            } : function (e, n) {
                return function () {
                    return cm(this, e, n)
                }
            })(e, n))
        }
    };
    var hm = {
            "": function (e, n) {
                e: for (var t, r = (e = e.toPrecision(n)).length, i = 1, o = -1; i < r; ++i) switch (e[i]) {
                case ".":
                    o = t = i;
                    break;
                case "0":
                    0 === o && (o = i), t = i;
                    break;
                case "e":
                    break e;
                default:
                    0 < o && (o = 0)
                }
                return 0 < o ? e.slice(0, o) + e.slice(t + 1) : e
            },
            "%": function (e, n) {
                return (100 * e).toFixed(n)
            },
            b: function (e) {
                return Math.round(e).toString(2)
            },
            c: function (e) {
                return e + ""
            },
            d: function (e) {
                return Math.round(e).toString(10)
            },
            e: function (e, n) {
                return e.toExponential(n)
            },
            f: function (e, n) {
                return e.toFixed(n)
            },
            g: function (e, n) {
                return e.toPrecision(n)
            },
            o: function (e) {
                return Math.round(e).toString(8)
            },
            p: function (e, n) {
                return fm(100 * e, n)
            },
            r: fm,
            s: function (e, n) {
                var t = dm(e, n);
                if (!t) return e + "";
                var r = t[0],
                    i = t[1],
                    o = i - (sm = 3 * Math.max(-8, Math.min(8, Math.floor(i / 3)))) + 1,
                    a = r.length;
                return o === a ? r : a < o ? r + new Array(o - a + 1).join("0") : 0 < o ? r.slice(0, o) + "." + r.slice(o) : "0." + new Array(1 - o).join("0") + dm(e, Math.max(0, n + o - 1))[0]
            },
            X: function (e) {
                return Math.round(e).toString(16).toUpperCase()
            },
            x: function (e) {
                return Math.round(e).toString(16)
            }
        },
        ym = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;

    function mm(e) {
        return new gm(e)
    }

    function gm(e) {
        if (!(n = ym.exec(e))) throw new Error("invalid format: " + e);
        var n, t = n[1] || " ",
            r = n[2] || ">",
            i = n[3] || "-",
            o = n[4] || "",
            a = !!n[5],
            l = n[6] && +n[6],
            c = !!n[7],
            s = n[8] && +n[8].slice(1),
            u = n[9] || "";
        "n" === u ? (c = !0, u = "g") : hm[u] || (u = ""), (a || "0" === t && "=" === r) && (a = !0, t = "0", r = "="), this.fill = t, this.align = r, this.sign = i, this.symbol = o, this.zero = a, this.width = l, this.comma = c, this.precision = s, this.type = u
    }
    gm.prototype.toString = function () {
        return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (null == this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (null == this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + this.type
    };
    var vm, Pm, xm, bm = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

    function wm(e) {
        return e
    }

    function Dm(e) {
        var l, c, b = e.grouping && e.thousands ? (l = e.grouping, c = e.thousands, function (e, n) {
                for (var t = e.length, r = [], i = 0, o = l[0], a = 0; 0 < t && 0 < o && (n < a + o + 1 && (o = Math.max(1, n - a)), r.push(e.substring(t -= o, t + o)), !((a += o + 1) > n));) o = l[i = (i + 1) % l.length];
                return r.reverse().join(c)
            }) : wm,
            r = e.currency,
            w = e.decimal;

        function s(e) {
            var s = (e = mm(e)).fill,
                u = e.align,
                p = e.sign,
                n = e.symbol,
                d = e.zero,
                f = e.width,
                h = e.comma,
                y = e.precision,
                m = e.type,
                g = "$" === n ? r[0] : "#" === n && /[boxX]/.test(m) ? "0" + m.toLowerCase() : "",
                v = "$" === n ? r[1] : /[%p]/.test(m) ? "%" : "",
                P = hm[m],
                x = !m || /[defgprs%]/.test(m);

            function t(e) {
                var n, t, r, i = g,
                    o = v;
                if ("c" === m) o = P(e) + o, e = "";
                else {
                    var a = ((e = +e) < 0 || 1 / e < 0) && (e *= -1, !0);
                    if (e = P(e, y), a)
                        for (n = -1, t = e.length, a = !1; ++n < t;)
                            if (48 < (r = e.charCodeAt(n)) && r < 58 || "x" === m && 96 < r && r < 103 || "X" === m && 64 < r && r < 71) {
                                a = !0;
                                break
                            } if (i = (a ? "(" === p ? p : "-" : "-" === p || "(" === p ? "" : p) + i, o = o + ("s" === m ? bm[8 + sm / 3] : "") + (a && "(" === p ? ")" : ""), x)
                        for (n = -1, t = e.length; ++n < t;)
                            if ((r = e.charCodeAt(n)) < 48 || 57 < r) {
                                o = (46 === r ? w + e.slice(n + 1) : e.slice(n)) + o, e = e.slice(0, n);
                                break
                            }
                }
                h && !d && (e = b(e, 1 / 0));
                var l = i.length + e.length + o.length,
                    c = l < f ? new Array(f - l + 1).join(s) : "";
                switch (h && d && (e = b(c + e, c.length ? f - o.length : 1 / 0), c = ""), u) {
                case "<":
                    return i + e + o + c;
                case "=":
                    return i + c + e + o;
                case "^":
                    return c.slice(0, l = c.length >> 1) + i + e + o + c.slice(l)
                }
                return c + i + e + o
            }
            return y = null == y ? m ? 6 : 12 : /[gprs]/.test(m) ? Math.max(1, Math.min(21, y)) : Math.max(0, Math.min(20, y)), t.toString = function () {
                return e + ""
            }, t
        }
        return {
            format: s,
            formatPrefix: function (e, n) {
                var t, r = s(((e = mm(e)).type = "f", e)),
                    i = 3 * Math.max(-8, Math.min(8, Math.floor((t = n, ((t = dm(Math.abs(t))) ? t[1] : NaN) / 3)))),
                    o = Math.pow(10, -i),
                    a = bm[8 + i / 3];
                return function (e) {
                    return r(o * e) + a
                }
            }
        }
    }
    vm = Dm({
        decimal: ".",
        thousands: ",",
        grouping: [3],
        currency: ["$", ""]
    }), Pm = vm.format, xm = vm.formatPrefix;
    var Gm = {
        value: function () {}
    };

    function Cm() {
        for (var e, n = 0, t = arguments.length, r = {}; n < t; ++n) {
            if (!(e = arguments[n] + "") || e in r) throw new Error("illegal type: " + e);
            r[e] = []
        }
        return new Sm(r)
    }

    function Sm(e) {
        this._ = e
    }

    function Im(e, n) {
        for (var t, r = 0, i = e.length; r < i; ++r)
            if ((t = e[r]).name === n) return t.value
    }

    function Mm(e, n, t) {
        for (var r = 0, i = e.length; r < i; ++r)
            if (e[r].name === n) {
                e[r] = Gm, e = e.slice(0, r).concat(e.slice(r + 1));
                break
            } return null != t && e.push({
            name: n,
            value: t
        }), e
    }

    function km(e, n) {
        return e < n ? -1 : n < e ? 1 : n <= e ? 0 : NaN
    }
    Sm.prototype = Cm.prototype = {
        constructor: Sm,
        on: function (e, n) {
            var t, r, i = this._,
                o = (r = i, (e + "").trim().split(/^|\s+/).map(function (e) {
                    var n = "",
                        t = e.indexOf(".");
                    if (0 <= t && (n = e.slice(t + 1), e = e.slice(0, t)), e && !r.hasOwnProperty(e)) throw new Error("unknown type: " + e);
                    return {
                        type: e,
                        name: n
                    }
                })),
                a = -1,
                l = o.length;
            if (!(arguments.length < 2)) {
                if (null != n && "function" != typeof n) throw new Error("invalid callback: " + n);
                for (; ++a < l;)
                    if (t = (e = o[a]).type) i[t] = Mm(i[t], e.name, n);
                    else if (null == n)
                    for (t in i) i[t] = Mm(i[t], e.name, null);
                return this
            }
            for (; ++a < l;)
                if ((t = (e = o[a]).type) && (t = Im(i[t], e.name))) return t
        },
        copy: function () {
            var e = {},
                n = this._;
            for (var t in n) e[t] = n[t].slice();
            return new Sm(e)
        },
        call: function (e, n) {
            if (0 < (t = arguments.length - 2))
                for (var t, r, i = new Array(t), o = 0; o < t; ++o) i[o] = arguments[o + 2];
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for (o = 0, t = (r = this._[e]).length; o < t; ++o) r[o].value.apply(n, i)
        },
        apply: function (e, n, t) {
            if (!this._.hasOwnProperty(e)) throw new Error("unknown type: " + e);
            for (var r = this._[e], i = 0, o = r.length; i < o; ++i) r[i].value.apply(n, t)
        }
    };
    var Am, _m;
    1 === (Am = km).length && (_m = Am, Am = function (e, n) {
        return km(_m(e), n)
    });
    var Om = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        Lm = "function" == typeof Symbol && "symbol" === Om(Symbol.iterator) ? function (e) {
            return void 0 === e ? "undefined" : Om(e)
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : void 0 === e ? "undefined" : Om(e)
        },
        Em = function (e) {
            return e
        },
        Nm = function (e) {
            for (var n = [], t = 0, r = e.length; t < r; t++) n[t] = e[r - t - 1];
            return n
        },
        jm = function (e, l) {
            e.each(function () {
                for (var e, n, t = "string" == typeof (n = this) ? new pm([
                        [document.querySelector(n)]
                    ], [document.documentElement]) : new pm([
                        [n]
                    ], um), r = t.text().split(/\s+/).reverse(), i = [], o = (t.attr("y"), parseFloat(t.attr("dy")) || 0), a = t.text(null).append("tspan").attr("x", 0).attr("dy", o + "em"); e = r.pop();) i.push(e), a.text(i.join(" ")), a.node().getComputedTextLength() > l && 1 < i.length && (i.pop(), a.text(i.join(" ")), i = [e], a = t.append("tspan").attr("x", 0).attr("dy", 1.2 + o + "em").text(e))
            })
        },
        Tm = {
            d3_drawShapes: function (e, n, t, r, i, o) {
                "rect" === e ? n.attr("height", t).attr("width", r) : "circle" === e ? n.attr("r", i) : "line" === e ? n.attr("x1", 0).attr("x2", r).attr("y1", 0).attr("y2", 0) : "path" === e && n.attr("d", o)
            },
            d3_addText: function (e, n, t, r, i) {
                n.append("text").attr("class", r + "label");
                var o = e.selectAll("g." + r + "cell text." + r + "label").data(t).text(Em);
                return i && e.selectAll("g." + r + "cell text." + r + "label").call(jm, i), o
            },
            d3_calcType: function (e, n, t, r, i, o) {
                var a, l, c, s, u, p = e.invertExtent ? (c = i, s = o, u = (l = e).range().map(function (e) {
                        var n = l.invertExtent(e);
                        return c(n[0]) + " " + s + " " + c(n[1])
                    }), {
                        data: l.range(),
                        labels: u,
                        feature: Em
                    }) : e.ticks ? function (n, e, t) {
                        var r = [];
                        if (1 < e.length) r = e;
                        else
                            for (var i = n.domain(), o = (i[i.length - 1] - i[0]) / (e - 1), a = 0; a < e; a++) r.push(i[0] + a * o);
                        var l = r.map(t);
                        return {
                            data: r,
                            labels: l,
                            feature: function (e) {
                                return n(e)
                            }
                        }
                    }(e, t, i) : {
                        data: (a = e).domain(),
                        labels: a.domain(),
                        feature: function (e) {
                            return a(e)
                        }
                    },
                    d = e.range && e.range() || e.domain();
                return p.labels = function () {
                    var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [],
                        n = arguments[1],
                        t = arguments[2],
                        r = arguments[3],
                        i = arguments[4];
                    if ("object" === (void 0 === n ? "undefined" : Lm(n))) {
                        if (0 === n.length) return e;
                        for (var o = n.length; o < e.length; o++) n.push(e[o]);
                        return n
                    }
                    if ("function" != typeof n) return e;
                    for (var a = [], l = e.length, c = 0; c < l; c++) a.push(n({
                        i: c,
                        genLength: l,
                        generatedLabels: e,
                        domain: t,
                        range: r,
                        labelDelimiter: i
                    }));
                    return a
                }(p.labels, r, e.domain(), d, o), n && (p.labels = Nm(p.labels), p.data = Nm(p.data)), p
            },
            d3_filterCells: function (t, e) {
                var n = t.data.map(function (e, n) {
                        return {
                            data: e,
                            label: t.labels[n]
                        }
                    }).filter(e),
                    r = n.map(function (e) {
                        return e.data
                    }),
                    i = n.map(function (e) {
                        return e.label
                    });
                return t.data = t.data.filter(function (e) {
                    return -1 !== r.indexOf(e)
                }), t.labels = t.labels.filter(function (e) {
                    return -1 !== i.indexOf(e)
                }), t
            },
            d3_placement: function (e, n, t, r, i, o) {
                n.attr("transform", t), r.attr("transform", i), "horizontal" === e && r.style("text-anchor", o)
            },
            d3_addEvents: function (e, r) {
                e.on("mouseover.legend", function (e) {
                    var n, t;
                    n = e, t = this, r.call("cellover", t, n)
                }).on("mouseout.legend", function (e) {
                    var n, t;
                    n = e, t = this, r.call("cellout", t, n)
                }).on("click.legend", function (e) {
                    var n, t;
                    n = e, t = this, r.call("cellclick", t, n)
                })
            },
            d3_title: function (e, n, t, r) {
                if ("" !== n) {
                    e.selectAll("text." + t + "legendTitle").data([n]).enter().append("text").attr("class", t + "legendTitle"), e.selectAll("text." + t + "legendTitle").text(n), r && e.selectAll("text." + t + "legendTitle").call(jm, r);
                    var i = e.select("." + t + "legendCells"),
                        o = e.select("." + t + "legendTitle").nodes().map(function (e) {
                            return e.getBBox().height
                        })[0],
                        a = -i.nodes().map(function (e) {
                            return e.getBBox().x
                        })[0];
                    i.attr("transform", "translate(" + a + "," + o + ")")
                }
            },
            d3_defaultLocale: {
                format: Pm,
                formatPrefix: xm
            },
            d3_defaultFormatSpecifier: ".01f",
            d3_defaultDelimiter: "to"
        };
    var $m = Zm(["\n  label: legend;\n  position: fixed;\n  user-select: none;\n  top: 0px;\n  left: 0;\n  padding: 0.5rem 1rem;\n  height: 44px;\n  backdrop-filter: blur(3px);\n  background-color: ", ";\n  border-radius: 0.3rem;\n  font-size: 10px;\n  color: ", ";\n  width: 100%;\n  box-sizing: border-box;\n  // overflow: visible;\n  -webkit-font-smoothing: antialiased;\n  transition: opacity 0.5s;\n  opacity: 1;\n\n  &.hidden {\n    opacity: 0;\n    visibility: hidden;\n  }\n"], ["\n  label: legend;\n  position: fixed;\n  user-select: none;\n  top: 0px;\n  left: 0;\n  padding: 0.5rem 1rem;\n  height: 44px;\n  backdrop-filter: blur(3px);\n  background-color: ", ";\n  border-radius: 0.3rem;\n  font-size: 10px;\n  color: ", ";\n  width: 100%;\n  box-sizing: border-box;\n  // overflow: visible;\n  -webkit-font-smoothing: antialiased;\n  transition: opacity 0.5s;\n  opacity: 1;\n\n  &.hidden {\n    opacity: 0;\n    visibility: hidden;\n  }\n"]),
        zm = Zm(["\n  color: ", ";\n  margin: 0.75rem 1rem;\n  font-size: 14px;\n  text-align: center;\n  text-transform: uppercase;\n"], ["\n  color: ", ";\n  margin: 0.75rem 1rem;\n  font-size: 14px;\n  text-align: center;\n  text-transform: uppercase;\n"]),
        Bm = Zm(["\n  label: legend-text;\n  font-size: 9px;\n  transform: translate(37px, 17px);\n  text-anchor: middle;\n"], ["\n  label: legend-text;\n  font-size: 9px;\n  transform: translate(37px, 17px);\n  text-anchor: middle;\n"]),
        qm = Zm(["\n  label: legend-text;\n  font-size: 8px;\n  transform: translate(15px, 17px);\n  text-anchor: middle;\n"], ["\n  label: legend-text;\n  font-size: 8px;\n  transform: translate(15px, 17px);\n  text-anchor: middle;\n"]),
        Fm = Zm(["\n  label: legend-size;\n  width: 73px;\n  padding-left: 0.5rem;\n  // height: 55px;\n  vertical-align: top;\n  height: 29px;\n  fill: ", ";\n  top: 0;\n"], ["\n  label: legend-size;\n  width: 73px;\n  padding-left: 0.5rem;\n  // height: 55px;\n  vertical-align: top;\n  height: 29px;\n  fill: ", ";\n  top: 0;\n"]),
        Rm = Zm(["\n  width: 32px;\n  height: 29px;\n  padding-right: 0.75rem;\n  text {\n    font-size: 9px;\n  }\n"], ["\n  width: 32px;\n  height: 29px;\n  padding-right: 0.75rem;\n  text {\n    font-size: 9px;\n  }\n"]),
        Um = Zm(["\n  label: legend-color;\n  padding: 0rem 1rem;\n  position: relative;\n  top: 50%;\n  height: 18px;\n  display: inline-block;\n  vertical-align: top;\n  transform: translateY(-40%);\n  fill: ", ";\n  width: 600px;\n"], ["\n  label: legend-color;\n  padding: 0rem 1rem;\n  position: relative;\n  top: 50%;\n  height: 18px;\n  display: inline-block;\n  vertical-align: top;\n  transform: translateY(-40%);\n  fill: ", ";\n  width: 600px;\n"]),
        Ym = Zm(["\n  position: fixed;\n  left: calc(120px + 1rem);\n  transform: translateY(-50%);\n  top: 50%;\n  transition: left 0.3s, opacity 0.5s;\n  height: 24px;\n  width: 24px;\n  background: ", ";\n  border-radius: 50px;\n  opacity: 1;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n  &.close {\n    left: 0.5rem;\n    transition: left 300ms;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  position: fixed;\n  left: calc(120px + 1rem);\n  transform: translateY(-50%);\n  top: 50%;\n  transition: left 0.3s, opacity 0.5s;\n  height: 24px;\n  width: 24px;\n  background: ", ";\n  border-radius: 50px;\n  opacity: 1;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n  }\n  &.close {\n    left: 0.5rem;\n    transition: left 300ms;\n  }\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        Hm = Zm(["\n  label: closeButton;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  &.close {\n    background: url(", ") no-repeat center center;\n  }\n"], ["\n  label: closeButton;\n  margin: auto;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n\n  &.close {\n    background: url(", ") no-repeat center center;\n  }\n"]),
        Vm = Zm(["\n  \n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0.5rem;\n  \n  opacity: 1;\n  transition: opacity 0.5s;\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  \n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0.5rem;\n  \n  opacity: 1;\n  transition: opacity 0.5s;\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        Wm = Zm(["\n  display: inline-block;\n  // width: 170px;\n  width: 662px;\n  height: 50px;\n  padding: 0 0.25rem;\n  // position: absolute;\n  // top: 50%;\n  // transform: translateY(-50%);\n"], ["\n  display: inline-block;\n  // width: 170px;\n  width: 662px;\n  height: 50px;\n  padding: 0 0.25rem;\n  // position: absolute;\n  // top: 50%;\n  // transform: translateY(-50%);\n"]);

    function Zm(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Km = ah($m, Lf, Of),
        Xm = (ah(zm, Of), ah(Bm), ah(qm), ah(Fm, Mf)),
        Jm = ah(Rm),
        Qm = ah(Um, Of),
        eg = (ah(Ym, Lf), ah(Hm, Bh, zh), ah(Vm)),
        ng = (ah(Wm), ag(["\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  display: inline-block;\n  vertical-align: top;\n"], ["\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  display: inline-block;\n  vertical-align: top;\n"])),
        tg = ag(["\n  label: text;\n  max-width: 80%;\n  padding: 0 0.5rem 0 0;\n  // padding-bottom: 0.25rem;\n  text-align: center;\n  display: inline-block;\n  pointer-events: none;\n  font-size: 11px;\n  margin: auto;\n  text-transform: uppercase;\n"], ["\n  label: text;\n  max-width: 80%;\n  padding: 0 0.5rem 0 0;\n  // padding-bottom: 0.25rem;\n  text-align: center;\n  display: inline-block;\n  pointer-events: none;\n  font-size: 11px;\n  margin: auto;\n  text-transform: uppercase;\n"]),
        rg = ag(["\n  display: inline-block;\n"], ["\n  display: inline-block;\n"]),
        ig = ag(["\n  font-size: 11px;\n  padding: 2px 20px 2px 8px;\n  width: 155px;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  color: ", ";\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden !important;\n  cursor: pointer;\n  border-radius: 5px;\n  font-family: 'Open Sans';\n  border: 1px solid ", ";\n\n  &:hover {\n    color: ", ";\n    border-color: ", ";\n  }\n\n  ::-ms-expand {\n    display: none;\n  }\n\n  &:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 ", ";\n    &:hover {\n      text-shadow: 0 0 0 ", ";\n    }\n  }\n\n  option {\n    color: black;\n    &:hover {\n      color: black;\n    }\n  }\n"], ["\n  font-size: 11px;\n  padding: 2px 20px 2px 8px;\n  width: 155px;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: transparent;\n  color: ", ";\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden !important;\n  cursor: pointer;\n  border-radius: 5px;\n  font-family: 'Open Sans';\n  border: 1px solid ", ";\n\n  &:hover {\n    color: ", ";\n    border-color: ", ";\n  }\n\n  ::-ms-expand {\n    display: none;\n  }\n\n  &:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 ", ";\n    &:hover {\n      text-shadow: 0 0 0 ", ";\n    }\n  }\n\n  option {\n    color: black;\n    &:hover {\n      color: black;\n    }\n  }\n"]),
        og = ag(["\n  position: absolute;\n  right: 8px;\n  top: calc(50% - 1px);\n  pointer-events: none;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 5px solid ", ";\n  margin-top: -1px;\n  transition: border-top-color 0.125s;\n"], ["\n  position: absolute;\n  right: 8px;\n  top: calc(50% - 1px);\n  pointer-events: none;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 5px solid ", ";\n  margin-top: -1px;\n  transition: border-top-color 0.125s;\n"]);

    function ag(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var lg = ah(ng),
        cg = ah(tg),
        sg = ah(rg),
        ug = ah(ig, Of, Mf, Ef, Ef, Of, Ef),
        pg = ah(og, Of),
        dg = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var fg = function () {
            function n(e) {
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, n), this.el = e.attr("class", lg), this.title = this.el.append("div").attr("class", cg), this.dropbownBox = this.el.append("div").attr("class", sg), this.dropdown = this.dropbownBox.append("select").attr("class", ug), this.arrow = this.dropbownBox.append("div").attr("class", pg)
            }
            return dg(n, [{
                key: "render",
                value: function () {}
            }, {
                key: "setData",
                value: function (n) {
                    return this.title.text(n.titleText), this.options = this.dropdown.selectAll("options").data(n.options).enter().append("option").attr("selected", function (e) {
                        return e === n.selected ? "selected" : null
                    }).attr("value", function (e) {
                        return e
                    }).text(function (e) {
                        return "indicator" === e ? "region" : e
                    }), this
                }
            }, {
                key: "setActions",
                value: function (o) {
                    return this.dropdown.on("change", function (e, n, t) {
                        var r = U(t[n]).node(),
                            i = r.options[r.selectedIndex].value;
                        o(i)
                    }), this
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "getWidth",
                value: function () {
                    return this.width
                }
            }, {
                key: "getHeight",
                value: function () {
                    return this.height
                }
            }]), n
        }(),
        hg = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        yg = Rn(function (o) {
            ! function () {
                var t = function e(n, t) {
                    var r = this;
                    e.count = (e.count || 0) + 1, this.count = e.count, this.isOpened = !1, this.input = a(n), this.input.setAttribute("autocomplete", "off"), this.input.setAttribute("aria-owns", "awesomplete_list_" + this.count), this.input.setAttribute("role", "combobox"), this.options = t = t || {},
                        function (e, n, t) {
                            for (var r in n) {
                                var i = n[r],
                                    o = e.input.getAttribute("data-" + r.toLowerCase());
                                "number" == typeof i ? e[r] = parseInt(o) : !1 === i ? e[r] = null !== o : i instanceof Function ? e[r] = null : e[r] = o, e[r] || 0 === e[r] || (e[r] = r in t ? t[r] : i)
                            }
                        }(this, {
                            minChars: 2,
                            maxItems: 10,
                            autoFirst: !1,
                            data: e.DATA,
                            filter: e.FILTER_CONTAINS,
                            sort: !1 !== t.sort && e.SORT_BYLENGTH,
                            container: e.CONTAINER,
                            item: e.ITEM,
                            replace: e.REPLACE,
                            tabSelect: !1
                        }, t), this.index = -1, this.container = this.container(n), this.ul = a.create("ul", {
                            hidden: "hidden",
                            role: "listbox",
                            id: "awesomplete_list_" + this.count,
                            inside: this.container
                        }), this.status = a.create("span", {
                            className: "visually-hidden",
                            role: "status",
                            "aria-live": "assertive",
                            "aria-atomic": !0,
                            inside: this.container,
                            textContent: 0 != this.minChars ? "Type " + this.minChars + " or more characters for results." : "Begin typing for results."
                        }), this._events = {
                            input: {
                                input: this.evaluate.bind(this),
                                blur: this.close.bind(this, {
                                    reason: "blur"
                                }),
                                keydown: function (e) {
                                    var n = e.keyCode;
                                    r.opened && (13 === n && r.selected ? (e.preventDefault(), r.select()) : 9 === n && r.selected && r.tabSelect ? r.select() : 27 === n ? r.close({
                                        reason: "esc"
                                    }) : 38 !== n && 40 !== n || (e.preventDefault(), r[38 === n ? "previous" : "next"]()))
                                }
                            },
                            form: {
                                submit: this.close.bind(this, {
                                    reason: "submit"
                                })
                            },
                            ul: {
                                mousedown: function (e) {
                                    e.preventDefault()
                                },
                                click: function (e) {
                                    var n = e.target;
                                    if (n !== this) {
                                        for (; n && !/li/i.test(n.nodeName);) n = n.parentNode;
                                        n && 0 === e.button && (e.preventDefault(), r.select(n, e.target))
                                    }
                                }
                            }
                        }, a.bind(this.input, this._events.input), a.bind(this.input.form, this._events.form), a.bind(this.ul, this._events.ul), this.input.hasAttribute("list") ? (this.list = "#" + this.input.getAttribute("list"), this.input.removeAttribute("list")) : this.list = this.input.getAttribute("data-list") || t.list || [], e.all.push(this)
                };

                function n(e) {
                    var n = Array.isArray(e) ? {
                        label: e[0],
                        value: e[1]
                    } : "object" === (void 0 === e ? "undefined" : hg(e)) && "label" in e && "value" in e ? e : {
                        label: e,
                        value: e
                    };
                    this.label = n.label || n.value, this.value = n.value
                }
                t.prototype = {
                    set list(e) {
                        if (Array.isArray(e)) this._list = e;
                        else if ("string" == typeof e && -1 < e.indexOf(",")) this._list = e.split(/\s*,\s*/);
                        else if ((e = a(e)) && e.children) {
                            var i = [];
                            r.apply(e.children).forEach(function (e) {
                                if (!e.disabled) {
                                    var n = e.textContent.trim(),
                                        t = e.value || n,
                                        r = e.label || n;
                                    "" !== t && i.push({
                                        label: r,
                                        value: t
                                    })
                                }
                            }), this._list = i
                        }
                        document.activeElement === this.input && this.evaluate()
                    },
                    get selected() {
                        return -1 < this.index
                    },
                    get opened() {
                        return this.isOpened
                    },
                    close: function (e) {
                        this.opened && (this.ul.setAttribute("hidden", ""), this.isOpened = !1, this.index = -1, this.status.setAttribute("hidden", ""), a.fire(this.input, "awesomplete-close", e || {}))
                    },
                    open: function () {
                        this.ul.removeAttribute("hidden"), this.isOpened = !0, this.status.removeAttribute("hidden"), this.autoFirst && -1 === this.index && this.goto(0), a.fire(this.input, "awesomplete-open")
                    },
                    destroy: function () {
                        if (a.unbind(this.input, this._events.input), a.unbind(this.input.form, this._events.form), !this.options.container) {
                            var e = this.container.parentNode;
                            e.insertBefore(this.input, this.container), e.removeChild(this.container)
                        }
                        this.input.removeAttribute("autocomplete"), this.input.removeAttribute("aria-autocomplete");
                        var n = t.all.indexOf(this); - 1 !== n && t.all.splice(n, 1)
                    },
                    next: function () {
                        var e = this.ul.children.length;
                        this.goto(this.index < e - 1 ? this.index + 1 : e ? 0 : -1)
                    },
                    previous: function () {
                        var e = this.ul.children.length,
                            n = this.index - 1;
                        this.goto(this.selected && -1 !== n ? n : e - 1)
                    },
                    goto: function (e) {
                        var n = this.ul.children;
                        this.selected && n[this.index].setAttribute("aria-selected", "false"), -1 < (this.index = e) && 0 < n.length && (n[e].setAttribute("aria-selected", "true"), this.status.textContent = n[e].textContent + ", list item " + (e + 1) + " of " + n.length, this.input.setAttribute("aria-activedescendant", this.ul.id + "_item_" + this.index), this.ul.scrollTop = n[e].offsetTop - this.ul.clientHeight + n[e].clientHeight, a.fire(this.input, "awesomplete-highlight", {
                            text: this.suggestions[this.index]
                        }))
                    },
                    select: function (e, n) {
                        if (e ? this.index = a.siblingIndex(e) : e = this.ul.children[this.index], e) {
                            var t = this.suggestions[this.index];
                            a.fire(this.input, "awesomplete-select", {
                                text: t,
                                origin: n || e
                            }) && (this.replace(t), this.close({
                                reason: "select"
                            }), a.fire(this.input, "awesomplete-selectcomplete", {
                                text: t
                            }))
                        }
                    },
                    evaluate: function () {
                        var t = this,
                            r = this.input.value;
                        r.length >= this.minChars && this._list && 0 < this._list.length ? (this.index = -1, this.ul.innerHTML = "", this.suggestions = this._list.map(function (e) {
                            return new n(t.data(e, r))
                        }).filter(function (e) {
                            return t.filter(e, r)
                        }), !1 !== this.sort && (this.suggestions = this.suggestions.sort(this.sort)), this.suggestions = this.suggestions.slice(0, this.maxItems), this.suggestions.forEach(function (e, n) {
                            t.ul.appendChild(t.item(e, r, n))
                        }), 0 === this.ul.children.length ? (this.status.textContent = "No results found", this.close({
                            reason: "nomatches"
                        })) : (this.open(), this.status.textContent = this.ul.children.length + " results found")) : (this.close({
                            reason: "nomatches"
                        }), this.status.textContent = "No results found")
                    }
                }, t.all = [], t.FILTER_CONTAINS = function (e, n) {
                    return RegExp(a.regExpEscape(n.trim()), "i").test(e)
                }, t.FILTER_STARTSWITH = function (e, n) {
                    return RegExp("^" + a.regExpEscape(n.trim()), "i").test(e)
                }, t.SORT_BYLENGTH = function (e, n) {
                    return e.length !== n.length ? e.length - n.length : e < n ? -1 : 1
                }, t.CONTAINER = function (e) {
                    return a.create("div", {
                        className: "awesomplete",
                        around: e
                    })
                }, t.ITEM = function (e, n, t) {
                    var r = "" === n.trim() ? e : e.replace(RegExp(a.regExpEscape(n.trim()), "gi"), "<mark>$&</mark>");
                    return a.create("li", {
                        innerHTML: r,
                        "aria-selected": "false",
                        id: "awesomplete_list_" + this.count + "_item_" + t
                    })
                }, t.REPLACE = function (e) {
                    this.input.value = e.value
                }, t.DATA = function (e) {
                    return e
                }, Object.defineProperty(n.prototype = Object.create(String.prototype), "length", {
                    get: function () {
                        return this.label.length
                    }
                }), n.prototype.toString = n.prototype.valueOf = function () {
                    return "" + this.label
                };
                var r = Array.prototype.slice;

                function a(e, n) {
                    return "string" == typeof e ? (n || document).querySelector(e) : e || null
                }

                function e(e, n) {
                    return r.call((n || document).querySelectorAll(e))
                }

                function i() {
                    e("input.awesomplete").forEach(function (e) {
                        new t(e)
                    })
                }
                a.create = function (e, n) {
                    var t = document.createElement(e);
                    for (var r in n) {
                        var i = n[r];
                        if ("inside" === r) a(i).appendChild(t);
                        else if ("around" === r) {
                            var o = a(i);
                            o.parentNode.insertBefore(t, o), t.appendChild(o), null != o.getAttribute("autofocus") && o.focus()
                        } else r in t ? t[r] = i : t.setAttribute(r, i)
                    }
                    return t
                }, a.bind = function (n, e) {
                    if (n)
                        for (var t in e) {
                            var r = e[t];
                            t.split(/\s+/).forEach(function (e) {
                                n.addEventListener(e, r)
                            })
                        }
                }, a.unbind = function (n, e) {
                    if (n)
                        for (var t in e) {
                            var r = e[t];
                            t.split(/\s+/).forEach(function (e) {
                                n.removeEventListener(e, r)
                            })
                        }
                }, a.fire = function (e, n, t) {
                    var r = document.createEvent("HTMLEvents");
                    for (var i in r.initEvent(n, !0, !0), t) r[i] = t[i];
                    return e.dispatchEvent(r)
                }, a.regExpEscape = function (e) {
                    return e.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&")
                }, a.siblingIndex = function (e) {
                    for (var n = 0; e = e.previousElementSibling; n++);
                    return n
                }, "undefined" != typeof self && (self.Awesomplete = t), "undefined" != typeof Document && ("loading" !== document.readyState ? i() : document.addEventListener("DOMContentLoaded", i)), t.$ = a, t.$$ = e, o.exports && (o.exports = t)
            }()
        }),
        mg = vg(["\n  label: searchBarWrapper;\n  padding: 0.5rem;\n\n  .awesomplete {\n    width: 155px;\n    border-radius: 10px;\n    box-shadow: none;\n\n    mark {\n      background-color: transparent !important;\n      padding: 0;\n      margin: 0;\n      color: ", ";\n    }\n    ul {\n      max-height: 50vh;\n      overflow-y: scroll;\n      font-size: 14px;\n      scrollbar-width: thin;\n\n      color: ", ";\n      background: ", ";\n      border: none;\n      box-shadow: -2px 2px 11px -4px #000;\n\n      :before {\n        background: ", ";\n      }\n      li {\n        scrollbar-width: thin;\n\n        color: ", ";\n        :hover {\n          background: ", ";\n          color: ", ";\n        }\n      }\n    }\n\n    input {\n      width: 100%;\n      height: 20px;\n      font-size: 12px;\n      border-radius: 0.285rem;\n      background: ", ";\n      color: ", ";\n      border: none;\n      padding: 3px 8px;\n      box-shadow: 2px 2px 11px -4px #14151c;\n\n      &:focus {\n        outline-style: none;\n      }\n      ::placeholder {\n        color: ", ";\n      }\n    }\n  }\n"], ["\n  label: searchBarWrapper;\n  padding: 0.5rem;\n\n  .awesomplete {\n    width: 155px;\n    border-radius: 10px;\n    box-shadow: none;\n\n    mark {\n      background-color: transparent !important;\n      padding: 0;\n      margin: 0;\n      color: ", ";\n    }\n    ul {\n      max-height: 50vh;\n      overflow-y: scroll;\n      font-size: 14px;\n      scrollbar-width: thin;\n\n      color: ", ";\n      background: ", ";\n      border: none;\n      box-shadow: -2px 2px 11px -4px #000;\n\n      :before {\n        background: ", ";\n      }\n      li {\n        scrollbar-width: thin;\n\n        color: ", ";\n        :hover {\n          background: ", ";\n          color: ", ";\n        }\n      }\n    }\n\n    input {\n      width: 100%;\n      height: 20px;\n      font-size: 12px;\n      border-radius: 0.285rem;\n      background: ", ";\n      color: ", ";\n      border: none;\n      padding: 3px 8px;\n      box-shadow: 2px 2px 11px -4px #14151c;\n\n      &:focus {\n        outline-style: none;\n      }\n      ::placeholder {\n        color: ", ";\n      }\n    }\n  }\n"]),
        gg = vg(["\n  display: inline-block;\n  position: relative;\n"], ["\n  display: inline-block;\n  position: relative;\n"]);

    function vg(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Pg = ah(mg, Ef, "#666671", Af, Af, Mf, _f, Mf, _f, Of, kf),
        xg = (ah(gg), function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }());
    var bg = function () {
            function t(e) {
                var n = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, t), this.searchBarWrapper = e.append("div").attr("class", Pg), this.input = this.searchBarWrapper.append("input"), this.awesomplete = new yg(this.input.node(), {
                    maxItems: 100,
                    minChars: 0,
                    data: function (e) {
                        return {
                            label: e,
                            value: e
                        }
                    }
                }), this.input.on("click", function () {
                    n.showSuggestions()
                })
            }
            return xg(t, [{
                key: "setData",
                value: function (e) {
                    return this.input.attr("placeholder", e.placeholder), this.awesomplete.list = e.list, this
                }
            }, {
                key: "setActions",
                value: function (n) {
                    return this.input.node().addEventListener("awesomplete-selectcomplete", function (e) {
                        return n.complete(e.text.value)
                    }), this
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.fontFamily = e
                }
            }, {
                key: "showSuggestions",
                value: function () {
                    this.awesomplete.evaluate(), this.awesomplete.open()
                }
            }]), t
        }(),
        wg = Sg(["\n  label: size-legend-cell;\n"], ["\n  label: size-legend-cell;\n"]),
        Dg = Sg(["\n  label: size-legend-label;\n  text-anchor: start;\n  font-size: 9px;\n  fill: #ccc;\n  -webkit-font-smoothing: antialiased;\n"], ["\n  label: size-legend-label;\n  text-anchor: start;\n  font-size: 9px;\n  fill: #ccc;\n  -webkit-font-smoothing: antialiased;\n"]),
        Gg = Sg(["\n  label: size-legend-line;\n  stroke-width: 0.5;\n  stroke: #d1d1d1;\n"], ["\n  label: size-legend-line;\n  stroke-width: 0.5;\n  stroke: #d1d1d1;\n"]),
        Cg = Sg(["\n  label: size-legend-circle;\n  stroke-width: 0.8;\n  stroke: #ccc;\n  fill: none;\n"], ["\n  label: size-legend-circle;\n  stroke-width: 0.8;\n  stroke: #ccc;\n  fill: none;\n"]);

    function Sg(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Ig = ah(wg),
        Mg = ah(Dg),
        kg = ah(Gg),
        Ag = ah(Cg),
        _g = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();

    function Og(e) {
        if (Array.isArray(e)) {
            for (var n = 0, t = Array(e.length); n < e.length; n++) t[n] = e[n];
            return t
        }
        return Array.from(e)
    }
    var Lg = function () {
            function t(e) {
                var n = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, t), this.legend = e.append("div").attr("class", Km), this.isOpen = !0, this.datadata = "n/a", this.colorDropdownContainer = this.legend.append("div"), this.colorDropdown = new fg(this.colorDropdownContainer), this.legendColorContainer = this.legend.append("svg").attr("class", Qm), this.colorBox = this.legendColorContainer.append("g"), this.radiusDropdownContainer = this.legend.append("div"), this.radiusDropdown = new fg(this.radiusDropdownContainer), this.legendSizeContainer = this.legend.append("svg").attr("class", Xm), this.radiusBox = this.legendSizeContainer.append("g").style("transform", "translate(25%, 95%)").attr("transform", "translate(15, 27)"), this.noSizeContainer = this.legend.append("svg").attr("class", Jm), this.symbol = Vd().size(50), this.noRadiusPath = this.noSizeContainer.append("path").style("transform", "translate(50%, 30%)").attr("transform", "translate(15, 8)"), this.noRadiusPath.style("fill", "#ccc").style("stroke-width", .5 / this.kZoom).attr("d", function () {
                    return n.symbol.type(Hd)()
                }), this.noSizeContainer.append("text").text("no data").style("fill", "#ccc").attr("y", 25), this.searchBarContainer = this.legend.append("div").attr("class", eg), this.searchBar = new bg(this.searchBarContainer), this.updateVisibility(), this.legendColor = function () {
                    var d = $c(),
                        f = "rect",
                        h = 15,
                        y = 15,
                        m = 10,
                        g = 2,
                        v = [5],
                        P = void 0,
                        x = [],
                        b = "",
                        w = !1,
                        D = "",
                        G = Tm.d3_defaultLocale,
                        C = Tm.d3_defaultFormatSpecifier,
                        S = 10,
                        I = "middle",
                        M = Tm.d3_defaultDelimiter,
                        k = void 0,
                        A = "vertical",
                        _ = !1,
                        O = void 0,
                        L = void 0,
                        E = Cm("cellover", "cellout", "cellclick");

                    function t(e) {
                        var n = Tm.d3_calcType(d, _, v, x, G.format(C), M);
                        e.selectAll("g").data([d]).enter().append("g").attr("class", b + "legendCells"), P && Tm.d3_filterCells(n, P);
                        var t = e.select("." + b + "legendCells").selectAll("." + b + "cell").data(n.data),
                            r = t.enter().append("g").attr("class", b + "cell");
                        r.append(f).attr("class", b + "swatch");
                        var i = e.selectAll("g." + b + "cell " + f + "." + b + "swatch").data(n.data);
                        Tm.d3_addEvents(r, E), t.exit().transition().style("opacity", 0).remove(), i.exit().transition().style("opacity", 0).remove(), i = i.merge(i), Tm.d3_drawShapes(f, i, y, h, m, O);
                        var o = Tm.d3_addText(e, r, n.labels, b, k);
                        t = r.merge(t);
                        var a = o.nodes().map(function (e) {
                                return e.getBBox()
                            }),
                            l = i.nodes().map(function (e) {
                                return e.getBBox()
                            });
                        w ? i.attr("class", function (e) {
                            return b + "swatch " + n.feature(e)
                        }) : "line" == f ? i.style("stroke", n.feature) : i.style("fill", n.feature);
                        var c, s = void 0,
                            u = void 0,
                            p = "start" == I ? 0 : "middle" == I ? .5 : 1;
                        "vertical" === A ? (c = a.map(function (e, n) {
                            return Math.max(e.height, l[n].height)
                        }), s = function (e, n) {
                            return "translate(0, " + (function (e, n) {
                                var t, r = 0,
                                    i = e.length,
                                    o = -1;
                                if (null == n)
                                    for (; ++o < i;)(t = +e[o]) && (r += t);
                                else
                                    for (; ++o < i;)(t = +n(e[o], o, e)) && (r += t);
                                return r
                            }(c.slice(0, n)) + n * g) + ")"
                        }, u = function (e, n) {
                            return "translate( " + (l[n].width + l[n].x + S) + ", " + (l[n].y + l[n].height / 2 + 5) + ")"
                        }) : "horizontal" === A && (s = function (e, n) {
                            return "translate(" + n * (l[n].width + g) + ",0)"
                        }, u = function (e, n) {
                            return "translate(" + (l[n].width * p + l[n].x) + ",\n          " + (l[n].height + l[n].y + S + 8) + ")"
                        }), Tm.d3_placement(A, t, s, o, u, I), Tm.d3_title(e, D, b, L), t.transition().style("opacity", 1)
                    }
                    return t.scale = function (e) {
                        return arguments.length ? (d = e, t) : d
                    }, t.cells = function (e) {
                        return arguments.length ? ((1 < e.length || 2 <= e) && (v = e), t) : v
                    }, t.cellFilter = function (e) {
                        return arguments.length ? (P = e, t) : P
                    }, t.shape = function (e, n) {
                        return arguments.length ? (("rect" == e || "circle" == e || "line" == e || "path" == e && "string" == typeof n) && (f = e, O = n), t) : f
                    }, t.shapeWidth = function (e) {
                        return arguments.length ? (h = +e, t) : h
                    }, t.shapeHeight = function (e) {
                        return arguments.length ? (y = +e, t) : y
                    }, t.shapeRadius = function (e) {
                        return arguments.length ? (m = +e, t) : m
                    }, t.shapePadding = function (e) {
                        return arguments.length ? (g = +e, t) : g
                    }, t.labels = function (e) {
                        return arguments.length ? (x = e, t) : x
                    }, t.labelAlign = function (e) {
                        return arguments.length ? ("start" != e && "end" != e && "middle" != e || (I = e), t) : I
                    }, t.locale = function (e) {
                        return arguments.length ? (G = Dm(e), t) : G
                    }, t.labelFormat = function (e) {
                        return arguments.length ? (C = mm(e), t) : t.locale().format(C)
                    }, t.labelOffset = function (e) {
                        return arguments.length ? (S = +e, t) : S
                    }, t.labelDelimiter = function (e) {
                        return arguments.length ? (M = e, t) : M
                    }, t.labelWrap = function (e) {
                        return arguments.length ? (k = e, t) : k
                    }, t.useClass = function (e) {
                        return arguments.length ? (!0 !== e && !1 !== e || (w = e), t) : w
                    }, t.orient = function (e) {
                        return arguments.length ? ("horizontal" != (e = e.toLowerCase()) && "vertical" != e || (A = e), t) : A
                    }, t.ascending = function (e) {
                        return arguments.length ? (_ = !!e, t) : _
                    }, t.classPrefix = function (e) {
                        return arguments.length ? (b = e, t) : b
                    }, t.title = function (e) {
                        return arguments.length ? (D = e, t) : D
                    }, t.titleWidth = function (e) {
                        return arguments.length ? (L = e, t) : L
                    }, t.textWrap = function (e) {
                        return arguments.length ? (textWrap = e, t) : textWrap
                    }, t.on = function () {
                        var e = E.on.apply(E, arguments);
                        return e === E ? t : e
                    }, t
                }().scale(Bf(Cf)).shapeWidth(75).shapeHeight(4).labelOffset(5).shapePadding(2).labelFormat("").labelWrap(75).labelAlign("start").orient("horizontal")
            }
            return _g(t, [{
                key: "update",
                value: function () {
                    window.innerWidth <= 1280 ? (this.weirdestLegendUpdateFunctionInMyLife(249, 31, 15, 32, rf), this.datadata = "n/a") : 1280 <= window.innerWidth && window.innerWidth <= 1400 ? (this.weirdestLegendUpdateFunctionInMyLife(498, 62, 32, 60, of ), this.datadata = "n/a") : (this.weirdestLegendUpdateFunctionInMyLife(616, 77, 38, 75, tf), this.datadata = "no data")
                }
            }, {
                key: "weirdestLegendUpdateFunctionInMyLife",
                value: function (e, n, t, r, i) {
                    var o = this;
                    this.legendColor.shapeWidth(n), this.legendColor.shapePadding(0), this.legendColorContainer.style("width", e + "px"), this.colorBox.call(this.legendColor), "political rights score" !== this.type && "civil liberties score" !== this.type && "indicator" !== this.type && this.type ? (this.colorBox.selectAll("text").style("text-anchor", "end"), this.colorBox.selectAll("text").style("transform", "translate(" + r + "px, 17px)"), this.colorBox.selectAll("text").attr("transform", "translate(" + r + ", 17)"), this.colorBox.selectAll("text").text(function (e, n) {
                        return n === e.length - 1 ? o.datadata : o.arr[n]
                    })) : ("political rights score" === this.type || "civil liberties score" === this.type ? this.colorBox.selectAll("text").text(function (e, n) {
                        return 7 === n ? o.datadata : n + 1
                    }) : "indicator" !== this.type && this.type || (this.legendColor.shapeWidth(n - 1), this.legendColor.shapePadding(1), this.colorBox.call(this.legendColor), this.colorBox.selectAll("text").text(function (e, n) {
                        return i[n]
                    })), this.colorBox.selectAll("text").style("text-anchor", "middle"), this.colorBox.selectAll("text").style("transform", "translate(" + t + "px, 17px)"), this.colorBox.selectAll("text").attr("transform", "translate(" + t + ", 17)"))
                }
            }, {
                key: "updateVisibility",
                value: function () {
                    this.isOpen = !this.isOpen, this.legend.classed("hidden", this.isOpen)
                }
            }, {
                key: "sendColorScale",
                value: function (e, r, n) {
                    this.type = e;
                    var i = [].concat(Og(tf));
                    if ("indicator" !== e) {
                        var o = qf(e, n);
                        ("indicator" === e ? Cf : Sf).forEach(function (e, n) {
                            var t = r.invertExtent(e);
                            i[n] = "" + o(t[1])
                        })
                    }
                    var t = Cf;
                    "indicator" !== e && (Df.indexOf(n.indexOf(e)), t = [].concat(Og(Sf)).slice().reverse(), i.pop(), i.reverse(), i.push(this.datadata)), this.arr = i, this.legendColor.scale(Bf(t)), this.update()
                }
            }, {
                key: "sendRadiusScale",
                value: function (n, e, t) {
                    var r, i, o, a, l, c, s, u = qf(e, t),
                        p = [2.5, 7.25, 13],
                        d = p.map(function (e) {
                            return n.invert(e)
                        });
                    this.legendSize ? (this.legendSize.text.attr("y", function (e, n) {
                        return -2 * p[n]
                    }).text(function (e, n) {
                        return u(d[n])
                    }), this.legendSize.circle.attr("r", function (e, n) {
                        return p[n]
                    }).attr("cy", function (e, n) {
                        return -p[n]
                    }), this.legendSize.line.attr("y1", function (e, n) {
                        return -2 * p[n]
                    }).attr("y2", function (e, n) {
                        return -2 * p[n]
                    })) : this.legendSize = (r = this.radiusBox, i = n, o = d, a = u, l = r.selectAll(".legendCell").data(o).enter().append("g").attr("class", Ig + " legendCell"), c = l.append("text").attr("class", Mg).attr("x", 26).attr("y", function (e) {
                        return -2 * i(e)
                    }).attr("dy", function (e, n) {
                        return n === o.length - 1 ? "0.6em" : 0 === n ? "0.15em" : "0.255em"
                    }).text(function (e, n) {
                        return a(e)
                    }), s = l.append("line").attr("class", kg).attr("x1", 0).attr("y1", function (e) {
                        return -2 * i(e)
                    }).attr("x2", 22).attr("y2", function (e) {
                        return -2 * i(e)
                    }), {
                        text: c,
                        circle: l.append("circle").attr("r", function (e) {
                            return i(e)
                        }).attr("class", Ag).attr("cx", 0).attr("cy", function (e) {
                            return -i(e)
                        }),
                        line: s
                    })
                }
            }, {
                key: "setupRadiusDropdown",
                value: function (e) {
                    this.radiusDropdown.setData({
                        options: e.options,
                        selected: e.selected,
                        titleText: "Radius by"
                    }).setActions(e.actions)
                }
            }, {
                key: "setupColorDropdown",
                value: function (e) {
                    this.colorDropdown.setData({
                        options: e.options,
                        selected: e.selected,
                        titleText: "Color by"
                    }).setActions(e.actions)
                }
            }]), t
        }(),
        Eg = jg(["\n  label: welcomeScreen;\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  color: ", ";\n  background-color: rgba(28, 30, 34, 0.8);\n  // backdrop-filter: blur(3px);\n  opacity: 1;\n  transition: opacity 0.5s, backdrop-filter 0.5s;\n\n  &.hidden {\n    // backdrop-filter: blur(0px);\n    opacity: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  .welcome {\n    color: ", ";\n    position: absolute;\n    top: 53%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    min-width: 50%;\n    max-width: 650px;\n    font-size: 15px;\n    display: block;\n    text-align: justify;\n    white-space: pre-wrap;\n\n    &.warning {\n      width: auto;\n    }\n\n    .title {\n      text-transform: uppercase;\n      font-size: 1.9rem;\n      font-weight: 100;\n      color: ", ";\n      text-align: center;\n    }\n\n    .subtitle {\n      margin: 1rem;\n      font-size: 13px;\n      text-align: center;\n    }\n\n    .text {\n      font-size: 14px;\n      line-height: 1.25rem;\n    }\n  }\n"], ["\n  label: welcomeScreen;\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  color: ", ";\n  background-color: rgba(28, 30, 34, 0.8);\n  // backdrop-filter: blur(3px);\n  opacity: 1;\n  transition: opacity 0.5s, backdrop-filter 0.5s;\n\n  &.hidden {\n    // backdrop-filter: blur(0px);\n    opacity: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  .welcome {\n    color: ", ";\n    position: absolute;\n    top: 53%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    min-width: 50%;\n    max-width: 650px;\n    font-size: 15px;\n    display: block;\n    text-align: justify;\n    white-space: pre-wrap;\n\n    &.warning {\n      width: auto;\n    }\n\n    .title {\n      text-transform: uppercase;\n      font-size: 1.9rem;\n      font-weight: 100;\n      color: ", ";\n      text-align: center;\n    }\n\n    .subtitle {\n      margin: 1rem;\n      font-size: 13px;\n      text-align: center;\n    }\n\n    .text {\n      font-size: 14px;\n      line-height: 1.25rem;\n    }\n  }\n"]),
        Ng = jg(["\n  position: relative;\n  margin: 3rem 0;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 125px;\n  font-size: 1.5rem;\n  font-weight: 300;\n  text-transform: uppercase;\n  color: ", ";\n  border: 1px solid ", ";\n  border-radius: 4rem;\n  text-align: center;\n  cursor: pointer;\n  padding: 7px 20px;\n\n  &:hover {\n    color: ", ";\n    border: 1px solid ", ";\n  }\n"], ["\n  position: relative;\n  margin: 3rem 0;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 125px;\n  font-size: 1.5rem;\n  font-weight: 300;\n  text-transform: uppercase;\n  color: ", ";\n  border: 1px solid ", ";\n  border-radius: 4rem;\n  text-align: center;\n  cursor: pointer;\n  padding: 7px 20px;\n\n  &:hover {\n    color: ", ";\n    border: 1px solid ", ";\n  }\n"]);

    function jg(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Tg = ah(Eg, Of, Mf, Ef, Mf, Of),
        $g = ah(Ng, Mf, Mf, Ef, Ef),
        zg = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var Bg = function () {
            function n(e) {
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, n), this.container = e.attr("class", Tg), this.welcomeText = e.append("div").attr("class", "welcome"), this.welcomeText.append("div").attr("class", "title").html(Cy.introductionTitle), this.welcomeText.append("div").attr("class", "subtitle").html(Cy.introductionSubTitle), this.descriptionText = this.welcomeText.append("div").attr("class", "text"), this.welcomeText.style("opacity", 0), this.welcomeText.transition().duration(800).style("opacity", 1)
            }
            return zg(n, [{
                key: "setupMobile",
                value: function () {
                    this.welcomeText.classed("warning", !0), this.descriptionText.html(Cy.warning)
                }
            }, {
                key: "setupNormal",
                value: function () {
                    return this.descriptionText.html(Cy.introductiondescription), this.startButton = this.welcomeText.append("div").attr("class", $g).text(Cy.startButton), this
                }
            }, {
                key: "setActions",
                value: function (e) {
                    var n = this;
                    this.actions = e, this.startButton.on("click", function () {
                        e.run(), n.container.classed("hidden", !0), setTimeout(function () {
                            n.container.remove()
                        }, 600)
                    })
                }
            }]), n
        }(),
        qg = Hg(["\n  user-select: none;\n  position: absolute;\n  padding: 1rem 1.5rem;\n  top: 45%;\n  left: 50%;\n  width: auto;\n  transform: translate(-50%, -65%) scale(1);\n  background-color: rgba(28, 30, 34, 0.8);\n  backdrop-filter: blur(3px);\n  color: ", ";\n  border-radius: 0.3rem;\n  box-shadow: 2px 2px 11px -4px #14151c;\n  opacity: 1;\n  \n  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  white-space: pre-wrap;\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  &.hidden {\n    opacity: 0;\n    \n    top: 55%;\n    transform: translate(-50%, -50%) scale(0.9);\n    pointer-events: none;\n  }\n"], ["\n  user-select: none;\n  position: absolute;\n  padding: 1rem 1.5rem;\n  top: 45%;\n  left: 50%;\n  width: auto;\n  transform: translate(-50%, -65%) scale(1);\n  background-color: rgba(28, 30, 34, 0.8);\n  backdrop-filter: blur(3px);\n  color: ", ";\n  border-radius: 0.3rem;\n  box-shadow: 2px 2px 11px -4px #14151c;\n  opacity: 1;\n  \n  transition: all 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  white-space: pre-wrap;\n\n  a {\n    text-decoration: none;\n    color: ", ";\n    font-weight: bold;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  &.hidden {\n    opacity: 0;\n    \n    top: 55%;\n    transform: translate(-50%, -50%) scale(0.9);\n    pointer-events: none;\n  }\n"]),
        Fg = Hg(["\n  margin: 0.5rem;\n  color: ", ";\n  font-size: 1.5rem;\n  font-weight: 100;\n  text-align: center;\n  text-transform: uppercase;\n"], ["\n  margin: 0.5rem;\n  color: ", ";\n  font-size: 1.5rem;\n  font-weight: 100;\n  text-align: center;\n  text-transform: uppercase;\n"]),
        Rg = Hg(["\n  position: relative;\n  font-size: 14px;\n  margin: 0.5rem;\n"], ["\n  position: relative;\n  font-size: 14px;\n  margin: 0.5rem;\n"]),
        Ug = Hg(["\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin: 15px;\n  cursor: pointer;\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n"], ["\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin: 15px;\n  cursor: pointer;\n  background: url(", ") no-repeat center center;\n  height: 16px;\n  width: 16px;\n"]),
        Yg = Hg(["\n  border: 0;\n  height: 0;\n  border-top: 0.5px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.3);\n  margin: 1rem 0.5rem;\n  width: auto;\n"], ["\n  border: 0;\n  height: 0;\n  border-top: 0.5px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.3);\n  margin: 1rem 0.5rem;\n  width: auto;\n"]);

    function Hg(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    var Vg = ah(qg, Mf, Mf, Ef),
        Wg = ah(Fg, Of),
        Zg = ah(Rg),
        Kg = ah(Ug, ay),
        Xg = ah(Yg),
        Jg = function () {
            function r(e, n) {
                for (var t = 0; t < n.length; t++) {
                    var r = n[t];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }
            return function (e, n, t) {
                return n && r(e.prototype, n), t && r(e, t), e
            }
        }();
    var Qg = function () {
            function t(e) {
                var n = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, t), this.container = e.attr("class", Vg).classed("hidden", !0), this.projectTitle = e.append("div").attr("class", Wg).html(Cy.projectTitle), this.projectDescription = e.append("div").attr("class", Zg).html(Cy.projectDescription), this.divider = e.append("div").attr("class", Xg), this.authors = e.append("div").style("font-size", 13).attr("class", Zg).html(Cy.authors), this.logo = this.authors.append("div").style("position", "absolute").style("right", 0).style("top", 5), this.logo.append("img").attr("class", "world-data-logo-2").attr("src", "data/world-data-logo.svg").attr("alt", "World Data Visualization"), this.closeButton = e.append("div").attr("class", Kg), this.closeButton.on("click", function () {
                    n.container.classed("hidden", !0)
                })
            }
            return Jg(t, [{
                key: "show",
                value: function () {
                    this.container.classed("hidden", !1)
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.container.style("font-family", e)
                }
            }]), t
        }(),
        ev = tv(["\n  position: absolute;\n  // width: 170px;\n  top: 0;\n  right: 0;\n  opacity: 1;\n  transition: visibility 0.5s, opacity 0.5s;\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  position: absolute;\n  // width: 170px;\n  top: 0;\n  right: 0;\n  opacity: 1;\n  transition: visibility 0.5s, opacity 0.5s;\n\n  &.hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n"]),
        nv = tv(["\n  position: absolute;\n  bottom: 1rem;\n  left: 3rem;\n  opacity: 1;\n  \n  padding: 4px 10px 4px 10px;\n  \n  border-radius: 50px;\n  transition: visibility 0.5s, opacity 0.5s;\n  background: ", ";\n  color: #9b9ba4;\n  font-size: 10pt;\n  font-weight: 600;\n  cursor: pointer;\n\n  \n\n  &.hidden {\n    transition: visibility 0.5s;\n    visibility: hidden;\n    opacity: 0;\n  }\n"], ["\n  position: absolute;\n  bottom: 1rem;\n  left: 3rem;\n  opacity: 1;\n  \n  padding: 4px 10px 4px 10px;\n  \n  border-radius: 50px;\n  transition: visibility 0.5s, opacity 0.5s;\n  background: ", ";\n  color: #9b9ba4;\n  font-size: 10pt;\n  font-weight: 600;\n  cursor: pointer;\n\n  \n\n  &.hidden {\n    transition: visibility 0.5s;\n    visibility: hidden;\n    opacity: 0;\n  }\n"]);

    function tv(e, n) {
        return Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(n)
            }
        }))
    }
    ah(ev);
    var rv = ah(nv, Lf, "data:image/svg+xml,%3Csvg%20aria-hidden%3D%22true%22%20focusable%3D%22false%22%20data-prefix%3D%22fas%22%20data-icon%3D%22redo%22%20class%3D%22svg-inline--fa%20fa-redo%20fa-w-16%22%20role%3D%22img%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20512%20512%22%3E%3Cpath%20fill%3D%22%239B9BA5%22%20d%3D%22M500.33%200h-47.41a12%2012%200%200%200-12%2012.57l4%2082.76A247.42%20247.42%200%200%200%20256%208C119.34%208%207.9%20119.53%208%20256.19%208.1%20393.07%20119.1%20504%20256%20504a247.1%20247.1%200%200%200%20166.18-63.91%2012%2012%200%200%200%20.48-17.43l-34-34a12%2012%200%200%200-16.38-.55A176%20176%200%201%201%20402.1%20157.8l-101.53-4.87a12%2012%200%200%200-12.57%2012v47.41a12%2012%200%200%200%2012%2012h200.33a12%2012%200%200%200%2012-12V12a12%2012%200%200%200-12-12z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E"),
        iv = [{
            indicator: "Afghanistan",
            "ISO Country code": "AFG",
            population: "36000000",
            "surface area (km²)": "652230",
            "GINI index": "-",
            "happy planet index": "20.2",
            "human development index": "0.498",
            "world happiness report score": "2.66",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "64.1",
            "GDP per capita (PPP)": "1919",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "10.3",
            "health expenditure per person (int. $)": "184",
            "education expenditure\r\n(% of GDP)": "3.8",
            "education expenditure per person ($)": "24",
            "school life expectancy (years)": "11",
            unemployment: "8.5",
            "government spending": "79.3",
            "government expenditure (% of GDP)": "26.30",
            "political rights score": "5",
            "civil liberties score": "6",
            "political stability & absence of violence": "-2.78",
            "government effectiveness": "-1.3",
            "regulatory quality": "-1.3",
            "rule of law": "-1.570",
            "control of corruption": "-1.52",
            "judicial effectiveness": "28.20",
            "government integrity": "26.20",
            "property rights": "17.90",
            "tax burden": "91.80",
            "overall economic freedom": "51.30",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "27.7"
        }, {
            indicator: "Albania",
            "ISO Country code": "ALB",
            population: "2900000",
            "surface area (km²)": "27398",
            "GINI index": "29.0",
            "happy planet index": "36.8",
            "human development index": "0.785",
            "world happiness report score": "4.64",
            SEDA: "53.10",
            "GDP\r\n(billions PPP)": "34.2",
            "GDP per capita (PPP)": "11840",
            "GDP growth\r\n(annual %)": "2.6",
            "health expenditure (% of GDP)": "6.8",
            "health expenditure per person (int. $)": "774",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "16",
            unemployment: "16.3",
            "government spending": "72.7",
            "government expenditure (% of GDP)": "30.10",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.4",
            "government effectiveness": "0.1",
            "regulatory quality": "0.2",
            "rule of law": "-0.400",
            "control of corruption": "-0.42",
            "judicial effectiveness": "25.40",
            "government integrity": "39.90",
            "property rights": "54.10",
            "tax burden": "85.10",
            "overall economic freedom": "64.50",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "27.9"
        }, {
            indicator: "Algeria",
            "ISO Country code": "DZA",
            population: "41000000",
            "surface area (km²)": "2381740",
            "GINI index": "35.3",
            "happy planet index": "33.3",
            "human development index": "0.754",
            "world happiness report score": "5.25",
            SEDA: "45.80",
            "GDP\r\n(billions PPP)": "612.5",
            "GDP per capita (PPP)": "15027",
            "GDP growth\r\n(annual %)": "3.7",
            "health expenditure (% of GDP)": "7.1",
            "health expenditure per person (int. $)": "1031",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "11.2",
            "government spending": "45.9",
            "government expenditure (% of GDP)": "42.50",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.96",
            "government effectiveness": "-0.6",
            "regulatory quality": "-1.2",
            "rule of law": "-0.860",
            "control of corruption": "-0.61",
            "judicial effectiveness": "35.20",
            "government integrity": "29.00",
            "property rights": "27.80",
            "tax burden": "74.00",
            "overall economic freedom": "44.70",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "25.8"
        }, {
            indicator: "Andorra",
            "ISO Country code": "AND",
            population: "77000",
            "surface area (km²)": "468",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.858",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "12.0",
            "health expenditure per person (int. $)": "5949",
            "education expenditure\r\n(% of GDP)": "3.0",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.45",
            "government effectiveness": "1.9",
            "regulatory quality": "1.2",
            "rule of law": "1.600",
            "control of corruption": "1.24",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "32.1"
        }, {
            indicator: "Angola",
            "ISO Country code": "AGO",
            population: "30000000",
            "surface area (km²)": "1246700",
            "GINI index": "42.7",
            "happy planet index": "-",
            "human development index": "0.581",
            "world happiness report score": "-",
            SEDA: "28.40",
            "GDP\r\n(billions PPP)": "187.3",
            "GDP per capita (PPP)": "6844",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "2.9",
            "health expenditure per person (int. $)": "196",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "10",
            unemployment: "6.6",
            "government spending": "69.1",
            "government expenditure (% of GDP)": "32.10",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.29",
            "government effectiveness": "-1.0",
            "regulatory quality": "-1.0",
            "rule of law": "-1.100",
            "control of corruption": "-1.41",
            "judicial effectiveness": "25.40",
            "government integrity": "18.90",
            "property rights": "36.00",
            "tax burden": "82.40",
            "overall economic freedom": "48.60",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "38.2"
        }, {
            indicator: "Antigua & Barbuda",
            "ISO Country code": "ATG",
            population: "102000",
            "surface area (km²)": "443",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.780",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "4.8",
            "health expenditure per person (int. $)": "1105",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.76",
            "government effectiveness": "0.0",
            "regulatory quality": "0.3",
            "rule of law": "0.440",
            "control of corruption": "0.24",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "11.1"
        }, {
            indicator: "Argentina",
            "ISO Country code": "ARG",
            population: "44000000",
            "surface area (km²)": "2736690",
            "GINI index": "41.7",
            "happy planet index": "35.2",
            "human development index": "0.825",
            "world happiness report score": "6.04",
            SEDA: "57.30",
            "GDP\r\n(billions PPP)": "874.1",
            "GDP per capita (PPP)": "20048",
            "GDP growth\r\n(annual %)": "1.2",
            "health expenditure (% of GDP)": "2.9",
            "health expenditure per person (int. $)": "1390",
            "education expenditure\r\n(% of GDP)": "5.4",
            "education expenditure per person ($)": "657",
            "school life expectancy (years)": "17",
            unemployment: "6.6",
            "government spending": "55.6",
            "government expenditure (% of GDP)": "38.50",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.18",
            "government effectiveness": "0.2",
            "regulatory quality": "-0.3",
            "rule of law": "-0.250",
            "control of corruption": "-0.26",
            "judicial effectiveness": "44.50",
            "government integrity": "32.60",
            "property rights": "40.80",
            "tax burden": "65.70",
            "overall economic freedom": "52.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "38.9"
        }, {
            indicator: "Armenia",
            "ISO Country code": "ARM",
            population: "3000000",
            "surface area (km²)": "28203",
            "GINI index": "31.5",
            "happy planet index": "25.7",
            "human development index": "0.755",
            "world happiness report score": "4.29",
            SEDA: "51.70",
            "GDP\r\n(billions PPP)": "25.8",
            "GDP per capita (PPP)": "8621",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "10.1",
            "health expenditure per person (int. $)": "883",
            "education expenditure\r\n(% of GDP)": "2.2",
            "education expenditure per person ($)": "90",
            "school life expectancy (years)": "13",
            unemployment: "16.8",
            "government spending": "80",
            "government expenditure (% of GDP)": "25.80",
            "political rights score": "5",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.71",
            "government effectiveness": "-0.1",
            "regulatory quality": "0.3",
            "rule of law": "-0.160",
            "control of corruption": "-0.56",
            "judicial effectiveness": "47.40",
            "government integrity": "40.50",
            "property rights": "55.30",
            "tax burden": "84.70",
            "overall economic freedom": "68.70",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "18.1"
        }, {
            indicator: "Australia",
            "ISO Country code": "AUS",
            population: "25000000",
            "surface area (km²)": "7682300",
            "GINI index": "30.3",
            "happy planet index": "21.2",
            "human development index": "0.939",
            "world happiness report score": "7.26",
            SEDA: "78.90",
            "GDP\r\n(billions PPP)": "1187.3",
            "GDP per capita (PPP)": "48899",
            "GDP growth\r\n(annual %)": "2.5",
            "health expenditure (% of GDP)": "9.4",
            "health expenditure per person (int. $)": "4492",
            "education expenditure\r\n(% of GDP)": "5.2",
            "education expenditure per person ($)": "3236",
            "school life expectancy (years)": "20",
            unemployment: "5.7",
            "government spending": "61.2",
            "government expenditure (% of GDP)": "36.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.9",
            "government effectiveness": "1.5",
            "regulatory quality": "1.9",
            "rule of law": "1.680",
            "control of corruption": "1.80",
            "judicial effectiveness": "93.40",
            "government integrity": "77.40",
            "property rights": "78.70",
            "tax burden": "63.00",
            "overall economic freedom": "80.90",
            "financial freedom": "90.00",
            "women MPs (% of all MPs)": "28.7"
        }, {
            indicator: "Austria",
            "ISO Country code": "AUT",
            population: "9000000",
            "surface area (km²)": "82445",
            "GINI index": "30.5",
            "happy planet index": "30.5",
            "human development index": "0.908",
            "world happiness report score": "7.29",
            SEDA: "80.30",
            "GDP\r\n(billions PPP)": "417.2",
            "GDP per capita (PPP)": "48005",
            "GDP growth\r\n(annual %)": "0.9",
            "health expenditure (% of GDP)": "10.3",
            "health expenditure per person (int. $)": "5138",
            "education expenditure\r\n(% of GDP)": "5.4",
            "education expenditure per person ($)": "2817",
            "school life expectancy (years)": "16",
            unemployment: "6.1",
            "government spending": "19.4",
            "government expenditure (% of GDP)": "51.80",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.04",
            "government effectiveness": "1.5",
            "regulatory quality": "1.4",
            "rule of law": "1.810",
            "control of corruption": "1.53",
            "judicial effectiveness": "80.90",
            "government integrity": "73.50",
            "property rights": "83.50",
            "tax burden": "49.90",
            "overall economic freedom": "71.80",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "30.6"
        }, {
            indicator: "Azerbaijan",
            "ISO Country code": "AZE",
            population: "10000000",
            "surface area (km²)": "82629",
            "GINI index": "33.7",
            "happy planet index": "-",
            "human development index": "0.757",
            "world happiness report score": "5.15",
            SEDA: "51.1",
            "GDP\r\n(billions PPP)": "165.5",
            "GDP per capita (PPP)": "17439",
            "GDP growth\r\n(annual %)": "1.1",
            "health expenditure (% of GDP)": "6.7",
            "health expenditure per person (int. $)": "1191",
            "education expenditure\r\n(% of GDP)": "2.6",
            "education expenditure per person ($)": "208",
            "school life expectancy (years)": "13",
            unemployment: "5.1",
            "government spending": "59.4",
            "government expenditure (% of GDP)": "36.80",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.76",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.3",
            "rule of law": "-0.560",
            "control of corruption": "-0.88",
            "judicial effectiveness": "36.80",
            "government integrity": "39.90",
            "property rights": "53.60",
            "tax burden": "87.50",
            "overall economic freedom": "64.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "16.8"
        }, {
            indicator: "Bahamas",
            "ISO Country code": "BHS",
            population: "400000",
            "surface area (km²)": "10010",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.807",
            "world happiness report score": "-",
            SEDA: "60.40",
            "GDP\r\n(billions PPP)": "9.0",
            "GDP per capita (PPP)": "24555",
            "GDP growth\r\n(annual %)": "0.5",
            "health expenditure (% of GDP)": "7.4",
            "health expenditure per person (int. $)": "1699",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "15.3",
            "government spending": "82.9",
            "government expenditure (% of GDP)": "23.80",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1",
            "government effectiveness": "0.6",
            "regulatory quality": "0.1",
            "rule of law": "0.190",
            "control of corruption": "1.17",
            "judicial effectiveness": "53.50",
            "government integrity": "50.90",
            "property rights": "46.50",
            "tax burden": "96.50",
            "overall economic freedom": "63.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "12.8"
        }, {
            indicator: "Bahrain",
            "ISO Country code": "BHR",
            population: "1300000",
            "surface area (km²)": "760",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.846",
            "world happiness report score": "6.23",
            SEDA: "63.90",
            "GDP\r\n(billions PPP)": "66.9",
            "GDP per capita (PPP)": "50704",
            "GDP growth\r\n(annual %)": "3.2",
            "health expenditure (% of GDP)": "5.2",
            "health expenditure per person (int. $)": "2453",
            "education expenditure\r\n(% of GDP)": "2.5",
            "education expenditure per person ($)": "616",
            "school life expectancy (years)": "-",
            unemployment: "1.3",
            "government spending": "66.4",
            "government expenditure (% of GDP)": "33.40",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.95",
            "government effectiveness": "0.2",
            "regulatory quality": "0.4",
            "rule of law": "0.450",
            "control of corruption": "-0.14",
            "judicial effectiveness": "55.10",
            "government integrity": "51.80",
            "property rights": "62.10",
            "tax burden": "99.90",
            "overall economic freedom": "67.70",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "7.5"
        }, {
            indicator: "Bangladesh",
            "ISO Country code": "BGD",
            population: "165000000",
            "surface area (km²)": "130170",
            "GINI index": "32.1",
            "happy planet index": "38.4",
            "human development index": "0.608",
            "world happiness report score": "4.31",
            SEDA: "35.30",
            "GDP\r\n(billions PPP)": "628.4",
            "GDP per capita (PPP)": "3891",
            "GDP growth\r\n(annual %)": "6.4",
            "health expenditure (% of GDP)": "2.6",
            "health expenditure per person (int. $)": "88",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "10",
            unemployment: "4.1",
            "government spending": "94.2",
            "government expenditure (% of GDP)": "13.90",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.25",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.8",
            "rule of law": "-0.670",
            "control of corruption": "-0.83",
            "judicial effectiveness": "32.60",
            "government integrity": "21.20",
            "property rights": "32.40",
            "tax burden": "72.70",
            "overall economic freedom": "55.10",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "20.3"
        }, {
            indicator: "Barbados",
            "ISO Country code": "BRB",
            population: "300000",
            "surface area (km²)": "430",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.800",
            "world happiness report score": "-",
            SEDA: "60.80",
            "GDP\r\n(billions PPP)": "4.8",
            "GDP per capita (PPP)": "17100",
            "GDP growth\r\n(annual %)": "0.5",
            "health expenditure (% of GDP)": "7.5",
            "health expenditure per person (int. $)": "1234",
            "education expenditure\r\n(% of GDP)": "6.2",
            "education expenditure per person ($)": "1013",
            "school life expectancy (years)": "15",
            unemployment: "11.4",
            "government spending": "39.3",
            "government expenditure (% of GDP)": "45.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.98",
            "government effectiveness": "0.8",
            "regulatory quality": "0.5",
            "rule of law": "0.660",
            "control of corruption": "1.42",
            "judicial effectiveness": "54.40",
            "government integrity": "53.80",
            "property rights": "51.40",
            "tax burden": "74.00",
            "overall economic freedom": "57.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "16.7"
        }, {
            indicator: "Belarus",
            "ISO Country code": "BLR",
            population: "10000000",
            "surface area (km²)": "202900",
            "GINI index": "26.5",
            "happy planet index": "21.7",
            "human development index": "0.808",
            "world happiness report score": "5.55",
            SEDA: "59.90",
            "GDP\r\n(billions PPP)": "171.0",
            "GDP per capita (PPP)": "18000",
            "GDP growth\r\n(annual %)": "-3.9",
            "health expenditure (% of GDP)": "6.1",
            "health expenditure per person (int. $)": "1085",
            "education expenditure\r\n(% of GDP)": "4.8",
            "education expenditure per person ($)": "401",
            "school life expectancy (years)": "16",
            unemployment: "0.5",
            "government spending": "47.9",
            "government expenditure (% of GDP)": "41.70",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "0.03",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.7",
            "rule of law": "-0.820",
            "control of corruption": "-0.26",
            "judicial effectiveness": "57.30",
            "government integrity": "42.00",
            "property rights": "53.50",
            "tax burden": "89.80",
            "overall economic freedom": "58.10",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "34.5"
        }, {
            indicator: "Belgium",
            "ISO Country code": "BEL",
            population: "11000000",
            "surface area (km²)": "30278",
            "GINI index": "25.9",
            "happy planet index": "23.7",
            "human development index": "0.916",
            "world happiness report score": "6.93",
            SEDA: "77.50",
            "GDP\r\n(billions PPP)": "509.5",
            "GDP per capita (PPP)": "45047",
            "GDP growth\r\n(annual %)": "1.4",
            "health expenditure (% of GDP)": "10.5",
            "health expenditure per person (int. $)": "4782",
            "education expenditure\r\n(% of GDP)": "6.6",
            "education expenditure per person ($)": "3124",
            "school life expectancy (years)": "20",
            unemployment: "8.3",
            "government spending": "12.1",
            "government expenditure (% of GDP)": "54.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.42",
            "government effectiveness": "1.2",
            "regulatory quality": "1.2",
            "rule of law": "1.340",
            "control of corruption": "1.50",
            "judicial effectiveness": "69.50",
            "government integrity": "70.90",
            "property rights": "81.20",
            "tax burden": "44.00",
            "overall economic freedom": "67.50",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "38.0"
        }, {
            indicator: "Belize",
            "ISO Country code": "BLZ",
            population: "400000",
            "surface area (km²)": "22806",
            "GINI index": "-",
            "happy planet index": "33.8",
            "human development index": "0.708",
            "world happiness report score": "-",
            SEDA: "48.50",
            "GDP\r\n(billions PPP)": "3.1",
            "GDP per capita (PPP)": "8220",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "6.2",
            "health expenditure per person (int. $)": "524",
            "education expenditure\r\n(% of GDP)": "6.5",
            "education expenditure per person ($)": "314",
            "school life expectancy (years)": "13",
            unemployment: "11",
            "government spending": "65.5",
            "government expenditure (% of GDP)": "33.90",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.05",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.5",
            "rule of law": "-0.960",
            "control of corruption": "-0.27",
            "judicial effectiveness": "53.50",
            "government integrity": "34.70",
            "property rights": "42.10",
            "tax burden": "80.00",
            "overall economic freedom": "57.10",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "9.4"
        }, {
            indicator: "Benin",
            "ISO Country code": "BEN",
            population: "11000000",
            "surface area (km²)": "110622",
            "GINI index": "36.5",
            "happy planet index": "13.4",
            "human development index": "0.515",
            "world happiness report score": "4.85",
            SEDA: "34.50",
            "GDP\r\n(billions PPP)": "23.6",
            "GDP per capita (PPP)": "2119",
            "GDP growth\r\n(annual %)": "5.2",
            "health expenditure (% of GDP)": "4.0",
            "health expenditure per person (int. $)": "84",
            "education expenditure\r\n(% of GDP)": "4.3",
            "education expenditure per person ($)": "41",
            "school life expectancy (years)": "12",
            unemployment: "1",
            "government spending": "85.6",
            "government expenditure (% of GDP)": "21.90",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.05",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.5",
            "rule of law": "-0.620",
            "control of corruption": "-0.55",
            "judicial effectiveness": "31.30",
            "government integrity": "30.20",
            "property rights": "35.50",
            "tax burden": "67.40",
            "overall economic freedom": "56.70",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "7.2"
        }, {
            indicator: "Bhutan",
            "ISO Country code": "BTN",
            population: "800000",
            "surface area (km²)": "38394",
            "GINI index": "38.8",
            "happy planet index": "28.6",
            "human development index": "0.612",
            "world happiness report score": "-",
            SEDA: "47.70",
            "GDP\r\n(billions PPP)": "6.5",
            "GDP per capita (PPP)": "8227",
            "GDP growth\r\n(annual %)": "7.7",
            "health expenditure (% of GDP)": "3.5",
            "health expenditure per person (int. $)": "287",
            "education expenditure\r\n(% of GDP)": "5.9",
            "education expenditure per person ($)": "148",
            "school life expectancy (years)": "13",
            unemployment: "2.4",
            "government spending": "72.2",
            "government expenditure (% of GDP)": "30.50",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "1.13",
            "government effectiveness": "0.6",
            "regulatory quality": "-0.3",
            "rule of law": "0.630",
            "control of corruption": "1.57",
            "judicial effectiveness": "51.60",
            "government integrity": "50.90",
            "property rights": "60.90",
            "tax burden": "83.00",
            "overall economic freedom": "61.80",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "8.5"
        }, {
            indicator: "Bolivia",
            "ISO Country code": "BOL",
            population: "11000000",
            "surface area (km²)": "1083301",
            "GINI index": "47.0",
            "happy planet index": "23.3",
            "human development index": "0.693",
            "world happiness report score": "5.65",
            SEDA: "44.80",
            "GDP\r\n(billions PPP)": "78.7",
            "GDP per capita (PPP)": "7219",
            "GDP growth\r\n(annual %)": "4.8",
            "health expenditure (% of GDP)": "6.4",
            "health expenditure per person (int. $)": "446",
            "education expenditure\r\n(% of GDP)": "7.3",
            "education expenditure per person ($)": "228",
            "school life expectancy (years)": "-",
            unemployment: "3.7",
            "government spending": "46.5",
            "government expenditure (% of GDP)": "42.20",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.3",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.9",
            "rule of law": "-1.210",
            "control of corruption": "-0.66",
            "judicial effectiveness": "11.40",
            "government integrity": "23.10",
            "property rights": "19.00",
            "tax burden": "85.70",
            "overall economic freedom": "44.10",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "53.1"
        }, {
            indicator: "Bosnia and Herzegovina",
            "ISO Country code": "BIH",
            population: "3900000",
            "surface area (km²)": "51187",
            "GINI index": "33.8",
            "happy planet index": "25.3",
            "human development index": "0.768",
            "world happiness report score": "5.09",
            SEDA: "50.20",
            "GDP\r\n(billions PPP)": "42.2",
            "GDP per capita (PPP)": "10958",
            "GDP growth\r\n(annual %)": "2.8",
            "health expenditure (% of GDP)": "9.4",
            "health expenditure per person (int. $)": "1102",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "25.8",
            "government spending": "41.5",
            "government expenditure (% of GDP)": "44.10",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.38",
            "government effectiveness": "-0.5",
            "regulatory quality": "-0.2",
            "rule of law": "-0.210",
            "control of corruption": "-0.52",
            "judicial effectiveness": "43.70",
            "government integrity": "28.40",
            "property rights": "39.50",
            "tax burden": "83.50",
            "overall economic freedom": "61.40",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "21.4"
        }, {
            indicator: "Botswana",
            "ISO Country code": "BWA",
            population: "2200000",
            "surface area (km²)": "566730",
            "GINI index": "60.5",
            "happy planet index": "16.6",
            "human development index": "0.717",
            "world happiness report score": "3.50",
            SEDA: "44.10",
            "GDP\r\n(billions PPP)": "36.7",
            "GDP per capita (PPP)": "17042",
            "GDP growth\r\n(annual %)": "-0.3",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "970",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "18.4",
            "government spending": "63.4",
            "government expenditure (% of GDP)": "34.90",
            "political rights score": "3",
            "civil liberties score": "2",
            "political stability & absence of violence": "1.03",
            "government effectiveness": "0.4",
            "regulatory quality": "0.5",
            "rule of law": "0.510",
            "control of corruption": "0.80",
            "judicial effectiveness": "54.70",
            "government integrity": "56.60",
            "property rights": "57.70",
            "tax burden": "76.10",
            "overall economic freedom": "69.90",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "9.5"
        }, {
            indicator: "Brazil",
            "ISO Country code": "BRA",
            population: "209000000",
            "surface area (km²)": "8358140",
            "GINI index": "49.0",
            "happy planet index": "34.3",
            "human development index": "0.759",
            "world happiness report score": "6.33",
            SEDA: "51.60",
            "GDP\r\n(billions PPP)": "3141.3",
            "GDP per capita (PPP)": "15242",
            "GDP growth\r\n(annual %)": "-3.8",
            "health expenditure (% of GDP)": "8.9",
            "health expenditure per person (int. $)": "1392",
            "education expenditure\r\n(% of GDP)": "5.9",
            "education expenditure per person ($)": "715",
            "school life expectancy (years)": "15",
            unemployment: "11.5",
            "government spending": "50.7",
            "government expenditure (% of GDP)": "40.50",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "-0.41",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.1",
            "rule of law": "-0.280",
            "control of corruption": "-0.53",
            "judicial effectiveness": "55.50",
            "government integrity": "31.40",
            "property rights": "55.80",
            "tax burden": "70.60",
            "overall economic freedom": "51.40",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "10.7"
        }, {
            indicator: "Brunei",
            "ISO Country code": "BRN",
            population: "400000",
            "surface area (km²)": "5265",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.853",
            "world happiness report score": "-",
            SEDA: "72.50",
            "GDP\r\n(billions PPP)": "32.5",
            "GDP per capita (PPP)": "76884",
            "GDP growth\r\n(annual %)": "-0.2",
            "health expenditure (% of GDP)": "2.6",
            "health expenditure per person (int. $)": "2083",
            "education expenditure\r\n(% of GDP)": "3.4",
            "education expenditure per person ($)": "1393",
            "school life expectancy (years)": "15",
            unemployment: "2",
            "government spending": "57.7",
            "government expenditure (% of GDP)": "37.50",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "1.19",
            "government effectiveness": "1.1",
            "regulatory quality": "0.7",
            "rule of law": "0.650",
            "control of corruption": "0.71",
            "judicial effectiveness": "57.10",
            "government integrity": "45.40",
            "property rights": "56.60",
            "tax burden": "85.60",
            "overall economic freedom": "64.20",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "9.1"
        }, {
            indicator: "Bulgaria",
            "ISO Country code": "BGR",
            population: "7000000",
            "surface area (km²)": "108489",
            "GINI index": "40.2",
            "happy planet index": "20.4",
            "human development index": "0.813",
            "world happiness report score": "-",
            SEDA: "59.90",
            "GDP\r\n(billions PPP)": "144.6",
            "GDP per capita (PPP)": "20327",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "8.2",
            "health expenditure per person (int. $)": "1492",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "8",
            "government spending": "60.5",
            "government expenditure (% of GDP)": "36.30",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.37",
            "government effectiveness": "0.3",
            "regulatory quality": "0.6",
            "rule of law": "-0.040",
            "control of corruption": "-0.16",
            "judicial effectiveness": "42.50",
            "government integrity": "38.20",
            "property rights": "63.60",
            "tax burden": "90.90",
            "overall economic freedom": "68.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "23.8"
        }, {
            indicator: "Burkina Faso",
            "ISO Country code": "BFA",
            population: "19000000",
            "surface area (km²)": "273800",
            "GINI index": "39.5",
            "happy planet index": "17.9",
            "human development index": "0.423",
            "world happiness report score": "4.65",
            SEDA: "33.40",
            "GDP\r\n(billions PPP)": "32.8",
            "GDP per capita (PPP)": "1782",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "96",
            "education expenditure\r\n(% of GDP)": "4.6",
            "education expenditure per person ($)": "32",
            "school life expectancy (years)": "8",
            unemployment: "3",
            "government spending": "83.7",
            "government expenditure (% of GDP)": "23.30",
            "political rights score": "4",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.92",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.4",
            "rule of law": "-0.400",
            "control of corruption": "-0.11",
            "judicial effectiveness": "47.10",
            "government integrity": "31.80",
            "property rights": "42.10",
            "tax burden": "80.60",
            "overall economic freedom": "60.00",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "11.0"
        }, {
            indicator: "Burundi",
            "ISO Country code": "BDI",
            population: "11000000",
            "surface area (km²)": "25680",
            "GINI index": "42.4",
            "happy planet index": "15.6",
            "human development index": "0.417",
            "world happiness report score": "-",
            SEDA: "28.30",
            "GDP\r\n(billions PPP)": "7.9",
            "GDP per capita (PPP)": "814",
            "GDP growth\r\n(annual %)": "-4.1",
            "health expenditure (% of GDP)": "8.2",
            "health expenditure per person (int. $)": "64",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "1.6",
            "government spending": "78.6",
            "government expenditure (% of GDP)": "26.70",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.97",
            "government effectiveness": "-1.3",
            "regulatory quality": "-0.8",
            "rule of law": "-1.400",
            "control of corruption": "-1.28",
            "judicial effectiveness": "21.70",
            "government integrity": "26.20",
            "property rights": "17.60",
            "tax burden": "71.00",
            "overall economic freedom": "50.90",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "36.4"
        }, {
            indicator: "Cabo Verde",
            "ISO Country code": "CPV",
            population: "500000",
            "surface area (km²)": "4033",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.654",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "3.5",
            "GDP per capita (PPP)": "6662",
            "GDP growth\r\n(annual %)": "1.8",
            "health expenditure (% of GDP)": "4.9",
            "health expenditure per person (int. $)": "310",
            "education expenditure\r\n(% of GDP)": "5.0",
            "education expenditure per person ($)": "175",
            "school life expectancy (years)": "13",
            unemployment: "10.5",
            "government spending": "71.5",
            "government expenditure (% of GDP)": "30.80",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.9",
            "government effectiveness": "0.2",
            "regulatory quality": "-0.2",
            "rule of law": "0.410",
            "control of corruption": "0.84",
            "judicial effectiveness": "52.00",
            "government integrity": "42.80",
            "property rights": "42.10",
            "tax burden": "74.00",
            "overall economic freedom": "60.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "23.6"
        }, {
            indicator: "Cambodia",
            "ISO Country code": "KHM",
            population: "16000000",
            "surface area (km²)": "176515",
            "GINI index": "37.9",
            "happy planet index": "25.6",
            "human development index": "0.582",
            "world happiness report score": "4.59",
            SEDA: "38.50",
            "GDP\r\n(billions PPP)": "59.0",
            "GDP per capita (PPP)": "3737",
            "GDP growth\r\n(annual %)": "6.9",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "210",
            "education expenditure\r\n(% of GDP)": "1.9",
            "education expenditure per person ($)": "21",
            "school life expectancy (years)": "11",
            unemployment: "0.3",
            "government spending": "86.5",
            "government expenditure (% of GDP)": "21.20",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.17",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.5",
            "rule of law": "-1.060",
            "control of corruption": "-1.29",
            "judicial effectiveness": "24.50",
            "government integrity": "17.70",
            "property rights": "36.00",
            "tax burden": "89.80",
            "overall economic freedom": "58.70",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "20.3"
        }, {
            indicator: "Cameroon",
            "ISO Country code": "CMR",
            population: "24000000",
            "surface area (km²)": "472710",
            "GINI index": "44.6",
            "happy planet index": "16.7",
            "human development index": "0.556",
            "world happiness report score": "5.07",
            SEDA: "32.10",
            "GDP\r\n(billions PPP)": "76.9",
            "GDP per capita (PPP)": "3249",
            "GDP growth\r\n(annual %)": "5.9",
            "health expenditure (% of GDP)": "5.1",
            "health expenditure per person (int. $)": "163",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "4.5",
            "government spending": "86.1",
            "government expenditure (% of GDP)": "21.60",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.08",
            "government effectiveness": "-0.8",
            "regulatory quality": "-0.8",
            "rule of law": "-1.020",
            "control of corruption": "-1.18",
            "judicial effectiveness": "29.40",
            "government integrity": "23.40",
            "property rights": "40.60",
            "tax burden": "73.70",
            "overall economic freedom": "51.90",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "31.1"
        }, {
            indicator: "Canada",
            "ISO Country code": "CAN",
            population: "37000000",
            "surface area (km²)": "9093507",
            "GINI index": "32.1",
            "happy planet index": "23.9",
            "human development index": "0.926",
            "world happiness report score": "-",
            SEDA: "76.90",
            "GDP\r\n(billions PPP)": "1682.4",
            "GDP per capita (PPP)": "46437",
            "GDP growth\r\n(annual %)": "1.2",
            "health expenditure (% of GDP)": "10.4",
            "health expenditure per person (int. $)": "4600",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "7.1",
            "government spending": "52.3",
            "government expenditure (% of GDP)": "39.90",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.11",
            "government effectiveness": "1.9",
            "regulatory quality": "1.9",
            "rule of law": "1.800",
            "control of corruption": "1.92",
            "judicial effectiveness": "77.10",
            "government integrity": "78.30",
            "property rights": "87.50",
            "tax burden": "76.70",
            "overall economic freedom": "77.70",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "26.3"
        }, {
            indicator: "Central African Republic",
            "ISO Country code": "CAF",
            population: "4900000",
            "surface area (km²)": "622984",
            "GINI index": "43.6",
            "happy planet index": "-",
            "human development index": "0.367",
            "world happiness report score": "3.48",
            SEDA: "16.10",
            "GDP\r\n(billions PPP)": "3.2",
            "GDP per capita (PPP)": "652",
            "GDP growth\r\n(annual %)": "4.3",
            "health expenditure (% of GDP)": "4.8",
            "health expenditure per person (int. $)": "32",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "7",
            unemployment: "6.9",
            "government spending": "94.6",
            "government expenditure (% of GDP)": "13.40",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-1.94",
            "government effectiveness": "-1.8",
            "regulatory quality": "-1.5",
            "rule of law": "-1.730",
            "control of corruption": "-1.17",
            "judicial effectiveness": "28.20",
            "government integrity": "24.60",
            "property rights": "17.90",
            "tax burden": "64.60",
            "overall economic freedom": "49.20",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "8.6"
        }, {
            indicator: "Chad",
            "ISO Country code": "TCD",
            population: "15000000",
            "surface area (km²)": "1259200",
            "GINI index": "43.3",
            "happy planet index": "12.8",
            "human development index": "0.404",
            "world happiness report score": "4.56",
            SEDA: "20.40",
            "GDP\r\n(billions PPP)": "29.0",
            "GDP per capita (PPP)": "2445",
            "GDP growth\r\n(annual %)": "1.8",
            "health expenditure (% of GDP)": "4.6",
            "health expenditure per person (int. $)": "100",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "7",
            unemployment: "5.8",
            "government spending": "90.5",
            "government expenditure (% of GDP)": "17.70",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.34",
            "government effectiveness": "-1.5",
            "regulatory quality": "-1.2",
            "rule of law": "-1.300",
            "control of corruption": "-1.43",
            "judicial effectiveness": "24.10",
            "government integrity": "23.10",
            "property rights": "25.10",
            "tax burden": "44.80",
            "overall economic freedom": "49.30",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "12.8"
        }, {
            indicator: "Chile",
            "ISO Country code": "CHL",
            population: "18000000",
            "surface area (km²)": "743812",
            "GINI index": "50.5",
            "happy planet index": "31.7",
            "human development index": "0.843",
            "world happiness report score": "6.32",
            SEDA: "62.60",
            "GDP\r\n(billions PPP)": "438.8",
            "GDP per capita (PPP)": "24113",
            "GDP growth\r\n(annual %)": "2.1",
            "health expenditure (% of GDP)": "8.1",
            "health expenditure per person (int. $)": "1903",
            "education expenditure\r\n(% of GDP)": "4.7",
            "education expenditure per person ($)": "699",
            "school life expectancy (years)": "16",
            unemployment: "6.6",
            "government spending": "81.3",
            "government expenditure (% of GDP)": "25.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.38",
            "government effectiveness": "0.9",
            "regulatory quality": "1.3",
            "rule of law": "1.010",
            "control of corruption": "1.04",
            "judicial effectiveness": "63.40",
            "government integrity": "61.20",
            "property rights": "67.90",
            "tax burden": "78.00",
            "overall economic freedom": "75.20",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "15.8"
        }, {
            indicator: "China",
            "ISO Country code": "CHN",
            population: "1386000000",
            "surface area (km²)": "9326410",
            "GINI index": "46.5",
            "happy planet index": "25.7",
            "human development index": "0.752",
            "world happiness report score": "5.10",
            SEDA: "50.80",
            "GDP\r\n(billions PPP)": "21291.8",
            "GDP per capita (PPP)": "15399",
            "GDP growth\r\n(annual %)": "6.9",
            "health expenditure (% of GDP)": "5.3",
            "health expenditure per person (int. $)": "762",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "4.6",
            "government spending": "71.6",
            "government expenditure (% of GDP)": "30.70",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.25",
            "government effectiveness": "0.4",
            "regulatory quality": "-0.2",
            "rule of law": "-0.260",
            "control of corruption": "-0.27",
            "judicial effectiveness": "65.40",
            "government integrity": "47.30",
            "property rights": "46.70",
            "tax burden": "70.40",
            "overall economic freedom": "57.80",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "24.2"
        }, {
            indicator: "Colombia",
            "ISO Country code": "COL",
            population: "49000000",
            "surface area (km²)": "1038700",
            "GINI index": "51.1",
            "happy planet index": "40.7",
            "human development index": "0.843",
            "world happiness report score": "6.16",
            SEDA: "49.10",
            "GDP\r\n(billions PPP)": "688.8",
            "GDP per capita (PPP)": "14130",
            "GDP growth\r\n(annual %)": "3.1",
            "health expenditure (% of GDP)": "6.2",
            "health expenditure per person (int. $)": "853",
            "education expenditure\r\n(% of GDP)": "4.7",
            "education expenditure per person ($)": "369",
            "school life expectancy (years)": "14",
            unemployment: "9.9",
            "government spending": "74.4",
            "government expenditure (% of GDP)": "29.20",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.79",
            "government effectiveness": "-0.1",
            "regulatory quality": "0.3",
            "rule of law": "-0.360",
            "control of corruption": "-0.37",
            "judicial effectiveness": "36.40",
            "government integrity": "33.40",
            "property rights": "60.70",
            "tax burden": "80.30",
            "overall economic freedom": "68.90",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "18.7"
        }, {
            indicator: "Comoros",
            "ISO Country code": "COM",
            population: "800000",
            "surface area (km²)": "2235",
            "GINI index": "55.9",
            "happy planet index": "23.1",
            "human development index": "0.752",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1.3",
            "GDP per capita (PPP)": "1529",
            "GDP growth\r\n(annual %)": "1",
            "health expenditure (% of GDP)": "8.0",
            "health expenditure per person (int. $)": "121",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "41",
            "school life expectancy (years)": "11",
            unemployment: "20",
            "government spending": "77.8",
            "government expenditure (% of GDP)": "27.20",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "0.03",
            "government effectiveness": "-1.6",
            "regulatory quality": "-1.0",
            "rule of law": "-1.050",
            "control of corruption": "-0.68",
            "judicial effectiveness": "28.20",
            "government integrity": "27.50",
            "property rights": "36.70",
            "tax burden": "59.70",
            "overall economic freedom": "56.20",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "6.1"
        }, {
            indicator: "Congo (Dem. Rep.)",
            "ISO Country code": "COD",
            population: "81000000",
            "surface area (km²)": "2267048",
            "GINI index": "42.1",
            "happy planet index": "-",
            "human development index": "0.457",
            "world happiness report score": "4.31",
            SEDA: "24.8",
            "GDP\r\n(billions PPP)": "65.0",
            "GDP per capita (PPP)": "773",
            "GDP growth\r\n(annual %)": "7.7",
            "health expenditure (% of GDP)": "4.3",
            "health expenditure per person (int. $)": "34",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "3.6",
            "government spending": "94.8",
            "government expenditure (% of GDP)": "13.20",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-2.3",
            "government effectiveness": "-1.6",
            "regulatory quality": "-1.5",
            "rule of law": "-1.690",
            "control of corruption": "-1.42",
            "judicial effectiveness": "23.90",
            "government integrity": "27.30",
            "property rights": "24.10",
            "tax burden": "73.20",
            "overall economic freedom": "52.10",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "8.9"
        }, {
            indicator: "Congo (Rep.)",
            "ISO Country code": "COG",
            population: "4500000",
            "surface area (km²)": "341500",
            "GINI index": "48.9",
            "happy planet index": "18.8",
            "human development index": "0.606",
            "world happiness report score": "4.88",
            SEDA: "32.7",
            "GDP\r\n(billions PPP)": "29.8",
            "GDP per capita (PPP)": "6676",
            "GDP growth\r\n(annual %)": "2.5",
            "health expenditure (% of GDP)": "3.4",
            "health expenditure per person (int. $)": "203",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "11.2",
            "government spending": "33.4",
            "government expenditure (% of GDP)": "47.10",
            "political rights score": "7",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.53",
            "government effectiveness": "-1.2",
            "regulatory quality": "-1.3",
            "rule of law": "-1.100",
            "control of corruption": "-1.33",
            "judicial effectiveness": "28.20",
            "government integrity": "24.60",
            "property rights": "32.40",
            "tax burden": "60.80",
            "overall economic freedom": "38.90",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "11.3"
        }, {
            indicator: "Costa Rica",
            "ISO Country code": "CRI",
            population: "4900000",
            "surface area (km²)": "51060",
            "GINI index": "48.5",
            "happy planet index": "44.7",
            "human development index": "0.794",
            "world happiness report score": "7.23",
            SEDA: "58.90",
            "GDP\r\n(billions PPP)": "80.7",
            "GDP per capita (PPP)": "16436",
            "GDP growth\r\n(annual %)": "3.7",
            "health expenditure (% of GDP)": "8.1",
            "health expenditure per person (int. $)": "1286",
            "education expenditure\r\n(% of GDP)": "6.9",
            "education expenditure per person ($)": "729",
            "school life expectancy (years)": "15",
            unemployment: "9",
            "government spending": "88.9",
            "government expenditure (% of GDP)": "19.30",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.51",
            "government effectiveness": "0.3",
            "regulatory quality": "0.5",
            "rule of law": "0.450",
            "control of corruption": "0.47",
            "judicial effectiveness": "57.80",
            "government integrity": "51.80",
            "property rights": "54.80",
            "tax burden": "79.30",
            "overall economic freedom": "65.60",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "35.1"
        }, {
            indicator: "Cote d'Ivoire",
            "ISO Country code": "CIV",
            population: "24000000",
            "surface area (km²)": "318003",
            "GINI index": "41.5",
            "happy planet index": "14.4",
            "human development index": "0.794",
            "world happiness report score": "5.04",
            SEDA: "30.50",
            "GDP\r\n(billions PPP)": "87.8",
            "GDP per capita (PPP)": "3609",
            "GDP growth\r\n(annual %)": "8.6",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "190",
            "education expenditure\r\n(% of GDP)": "4.6",
            "education expenditure per person ($)": "72",
            "school life expectancy (years)": "9",
            unemployment: "9.3",
            "government spending": "84.6",
            "government expenditure (% of GDP)": "22.60",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.09",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.4",
            "rule of law": "-0.630",
            "control of corruption": "-0.52",
            "judicial effectiveness": "44.20",
            "government integrity": "36.60",
            "property rights": "39.40",
            "tax burden": "76.40",
            "overall economic freedom": "62.00",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "10.6"
        }, {
            indicator: "Croatia",
            "ISO Country code": "HRV",
            population: "4200000",
            "surface area (km²)": "55974",
            "GINI index": "30.8",
            "happy planet index": "30.2",
            "human development index": "0.831",
            "world happiness report score": "5.34",
            SEDA: "64.50",
            "GDP\r\n(billions PPP)": "95.1",
            "GDP per capita (PPP)": "22795",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "7.4",
            "health expenditure per person (int. $)": "1656",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "13.5",
            "government spending": "32.5",
            "government expenditure (% of GDP)": "47.40",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.75",
            "government effectiveness": "0.6",
            "regulatory quality": "0.4",
            "rule of law": "0.330",
            "control of corruption": "0.19",
            "judicial effectiveness": "56.50",
            "government integrity": "40.50",
            "property rights": "65.90",
            "tax burden": "66.00",
            "overall economic freedom": "61.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "18.5"
        }, {
            indicator: "Cuba",
            "ISO Country code": "CUB",
            population: "11000000",
            "surface area (km²)": "109820",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.777",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "142.0",
            "GDP per capita (PPP)": "12390",
            "GDP growth\r\n(annual %)": "4.3",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "2.9",
            "government spending": "0",
            "government expenditure (% of GDP)": "62.40",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "0.69",
            "government effectiveness": "-0.2",
            "regulatory quality": "-1.3",
            "rule of law": "-0.430",
            "control of corruption": "0.27",
            "judicial effectiveness": "10.00",
            "government integrity": "38.10",
            "property rights": "29.70",
            "tax burden": "49.00",
            "overall economic freedom": "31.90",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "48.9"
        }, {
            indicator: "Cyprus",
            "ISO Country code": "CYP",
            population: "800000",
            "surface area (km²)": "9241",
            "GINI index": "34.8",
            "happy planet index": "30.7",
            "human development index": "0.869",
            "world happiness report score": "6.06",
            SEDA: "65.9",
            "GDP\r\n(billions PPP)": "29.7",
            "GDP per capita (PPP)": "34970",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "6.8",
            "health expenditure per person (int. $)": "2137",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "11.7",
            "government spending": "52.9",
            "government expenditure (% of GDP)": "39.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.6",
            "government effectiveness": "0.9",
            "regulatory quality": "1.0",
            "rule of law": "0.880",
            "control of corruption": "0.78",
            "judicial effectiveness": "56.70",
            "government integrity": "41.30",
            "property rights": "71.20",
            "tax burden": "75.20",
            "overall economic freedom": "67.80",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "17.9"
        }, {
            indicator: "Czech Republic",
            "ISO Country code": "CZE",
            population: "11000000",
            "surface area (km²)": "77247",
            "GINI index": "-",
            "happy planet index": "27.3",
            "human development index": "0.888",
            "world happiness report score": "6.79",
            SEDA: "71.1",
            "GDP\r\n(billions PPP)": "350.7",
            "GDP per capita (PPP)": "33232",
            "GDP growth\r\n(annual %)": "4.2",
            "health expenditure (% of GDP)": "7.3",
            "health expenditure per person (int. $)": "2470",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "17",
            unemployment: "4",
            "government spending": "48.6",
            "government expenditure (% of GDP)": "41.40",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.02",
            "government effectiveness": "1.0",
            "regulatory quality": "1.2",
            "rule of law": "1.120",
            "control of corruption": "0.57",
            "judicial effectiveness": "57.90",
            "government integrity": "51.10",
            "property rights": "73.00",
            "tax burden": "82.90",
            "overall economic freedom": "74.20",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "20.0"
        }, {
            indicator: "Denmark",
            "ISO Country code": "DNK",
            population: "6000000",
            "surface area (km²)": "42434",
            "GINI index": "29.0",
            "happy planet index": "32.7",
            "human development index": "0.929",
            "world happiness report score": "7.59",
            SEDA: "82",
            "GDP\r\n(billions PPP)": "273.9",
            "GDP per capita (PPP)": "47985",
            "GDP growth\r\n(annual %)": "1.2",
            "health expenditure (% of GDP)": "10.3",
            "health expenditure per person (int. $)": "5083",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "19",
            unemployment: "6.1",
            "government spending": "10.6",
            "government expenditure (% of GDP)": "54.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.87",
            "government effectiveness": "1.8",
            "regulatory quality": "1.6",
            "rule of law": "1.860",
            "control of corruption": "2.19",
            "judicial effectiveness": "83.60",
            "government integrity": "84.10",
            "property rights": "84.80",
            "tax burden": "41.40",
            "overall economic freedom": "76.60",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "37.4"
        }, {
            indicator: "Djibouti",
            "ISO Country code": "DJI",
            population: "1000000",
            "surface area (km²)": "23180",
            "GINI index": "40.9",
            "happy planet index": "16.4",
            "human development index": "0.476",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "3.3",
            "GDP per capita (PPP)": "3370",
            "GDP growth\r\n(annual %)": "6.5",
            "health expenditure (% of GDP)": "4.4",
            "health expenditure per person (int. $)": "147",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "6",
            unemployment: "6.6",
            "government spending": "27.2",
            "government expenditure (% of GDP)": "49.30",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.71",
            "government effectiveness": "-1.0",
            "regulatory quality": "-0.6",
            "rule of law": "-0.910",
            "control of corruption": "-0.64",
            "judicial effectiveness": "13.80",
            "government integrity": "29.00",
            "property rights": "19.00",
            "tax burden": "69.80",
            "overall economic freedom": "45.10",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "10.8"
        }, {
            indicator: "Dominica",
            "ISO Country code": "DMA",
            population: "100000",
            "surface area (km²)": "751",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.715",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.8",
            "GDP per capita (PPP)": "11375",
            "GDP growth\r\n(annual %)": "-4.3",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "586",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "64.8",
            "government expenditure (% of GDP)": "34.20",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.04",
            "government effectiveness": "-0.3",
            "regulatory quality": "0.1",
            "rule of law": "0.650",
            "control of corruption": "0.65",
            "judicial effectiveness": "69.20",
            "government integrity": "49.90",
            "property rights": "48.60",
            "tax burden": "72.90",
            "overall economic freedom": "64.50",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "25.0"
        }, {
            indicator: "Dominican Republic",
            "ISO Country code": "DOM",
            population: "11000000",
            "surface area (km²)": "48320",
            "GINI index": "47.1",
            "happy planet index": "30.3",
            "human development index": "0.736",
            "world happiness report score": "5.61",
            SEDA: "48.1",
            "GDP\r\n(billions PPP)": "161.8",
            "GDP per capita (PPP)": "16050",
            "GDP growth\r\n(annual %)": "7",
            "health expenditure (% of GDP)": "6.2",
            "health expenditure per person (int. $)": "873",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "14.4",
            "government spending": "90.6",
            "government expenditure (% of GDP)": "17.70",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.16",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.1",
            "rule of law": "-0.420",
            "control of corruption": "-0.74",
            "judicial effectiveness": "23.10",
            "government integrity": "26.20",
            "property rights": "51.70",
            "tax burden": "84.60",
            "overall economic freedom": "61.60",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "26.8"
        }, {
            indicator: "Ecuador",
            "ISO Country code": "ECU",
            population: "17000000",
            "surface area (km²)": "276841",
            "GINI index": "45.9",
            "happy planet index": "37.0",
            "human development index": "0.752",
            "world happiness report score": "5.84",
            SEDA: "48.1",
            "GDP\r\n(billions PPP)": "183.6",
            "GDP per capita (PPP)": "11109",
            "GDP growth\r\n(annual %)": "0",
            "health expenditure (% of GDP)": "6.8",
            "health expenditure per person (int. $)": "980",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "5.4",
            "government spending": "52.5",
            "government expenditure (% of GDP)": "39.80",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.1",
            "government effectiveness": "-0.3",
            "regulatory quality": "-1.0",
            "rule of law": "-0.700",
            "control of corruption": "-0.60",
            "judicial effectiveness": "23.30",
            "government integrity": "30.20",
            "property rights": "36.70",
            "tax burden": "79.40",
            "overall economic freedom": "48.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "38.0"
        }, {
            indicator: "Egypt",
            "ISO Country code": "EGY",
            population: "98000000",
            "surface area (km²)": "995450",
            "GINI index": "31.8",
            "happy planet index": "23.8",
            "human development index": "0.696",
            "world happiness report score": "3.93",
            SEDA: "43.1",
            "GDP\r\n(billions PPP)": "1132.4",
            "GDP per capita (PPP)": "12554",
            "GDP growth\r\n(annual %)": "4.2",
            "health expenditure (% of GDP)": "7.3",
            "health expenditure per person (int. $)": "495",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "12",
            "government spending": "65.1",
            "government expenditure (% of GDP)": "34.10",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.42",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.9",
            "rule of law": "-0.530",
            "control of corruption": "-0.54",
            "judicial effectiveness": "52.50",
            "government integrity": "32.20",
            "property rights": "32.70",
            "tax burden": "84.20",
            "overall economic freedom": "53.40",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "14.9"
        }, {
            indicator: "El Salvador",
            "ISO Country code": "SLV",
            population: "6000000",
            "surface area (km²)": "20721",
            "GINI index": "36.0",
            "happy planet index": "35.6",
            "human development index": "0.674",
            "world happiness report score": "6.34",
            SEDA: "47.2",
            "GDP\r\n(billions PPP)": "54.8",
            "GDP per capita (PPP)": "8909",
            "GDP growth\r\n(annual %)": "2.4",
            "health expenditure (% of GDP)": "10.3",
            "health expenditure per person (int. $)": "578",
            "education expenditure\r\n(% of GDP)": "3.4",
            "education expenditure per person ($)": "124",
            "school life expectancy (years)": "13",
            unemployment: "6.3",
            "government spending": "86.3",
            "government expenditure (% of GDP)": "21.30",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.25",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.2",
            "rule of law": "-0.860",
            "control of corruption": "-0.51",
            "judicial effectiveness": "35.40",
            "government integrity": "25.20",
            "property rights": "37.30",
            "tax burden": "78.90",
            "overall economic freedom": "63.20",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "32.1"
        }, {
            indicator: "Equatorial Guinea",
            "ISO Country code": "GNQ",
            population: "800000",
            "surface area (km²)": "28051",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.591",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "31.7",
            "GDP per capita (PPP)": "38639",
            "GDP growth\r\n(annual %)": "-12.2",
            "health expenditure (% of GDP)": "4.4",
            "health expenditure per person (int. $)": "790",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "7.3",
            "government spending": "61",
            "government expenditure (% of GDP)": "36.10",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.15",
            "government effectiveness": "-1.4",
            "regulatory quality": "-1.4",
            "rule of law": "-1.490",
            "control of corruption": "-1.83",
            "judicial effectiveness": "17.60",
            "government integrity": "26.20",
            "property rights": "29.80",
            "tax burden": "69.60",
            "overall economic freedom": "42.00",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "24.0"
        }, {
            indicator: "Eritrea",
            "ISO Country code": "ERI",
            population: "5000000",
            "surface area (km²)": "101000",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.440",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "9.2",
            "GDP per capita (PPP)": "1410",
            "GDP growth\r\n(annual %)": "4.8",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "56",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "5",
            unemployment: "7.3",
            "government spending": "75.6",
            "government expenditure (% of GDP)": "28.50",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.66",
            "government effectiveness": "-1.7",
            "regulatory quality": "-2.2",
            "rule of law": "-1.560",
            "control of corruption": "-1.20",
            "judicial effectiveness": "13.80",
            "government integrity": "23.40",
            "property rights": "35.50",
            "tax burden": "79.90",
            "overall economic freedom": "41.70",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "22.0"
        }, {
            indicator: "Estonia",
            "ISO Country code": "EST",
            population: "1300000",
            "surface area (km²)": "42388",
            "GINI index": "34.8",
            "happy planet index": "17.9",
            "human development index": "0.871",
            "world happiness report score": "5.94",
            SEDA: "70.8",
            "GDP\r\n(billions PPP)": "38.5",
            "GDP per capita (PPP)": "29313",
            "GDP growth\r\n(annual %)": "1.1",
            "health expenditure (% of GDP)": "6.2",
            "health expenditure per person (int. $)": "1887",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "16",
            unemployment: "6.9",
            "government spending": "52.6",
            "government expenditure (% of GDP)": "39.80",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.66",
            "government effectiveness": "1.1",
            "regulatory quality": "1.6",
            "rule of law": "1.280",
            "control of corruption": "1.24",
            "judicial effectiveness": "83.90",
            "government integrity": "75.70",
            "property rights": "80.40",
            "tax burden": "80.70",
            "overall economic freedom": "78.80",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "26.7"
        }, {
            indicator: "Eswatini",
            "ISO Country code": "SWZ",
            population: "1100000",
            "surface area (km²)": "17204",
            "GINI index": "50.4",
            "happy planet index": "15.5",
            "human development index": "0.588",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "11.1",
            "GDP per capita (PPP)": "9776",
            "GDP growth\r\n(annual %)": "1.7",
            "health expenditure (% of GDP)": "7.0",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "25.3",
            "government spending": "65.2",
            "government expenditure (% of GDP)": "34.10",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.3",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.6",
            "rule of law": "-0.290",
            "control of corruption": "-0.30",
            "judicial effectiveness": "35.30",
            "government integrity": "26.90",
            "property rights": "55.30",
            "tax burden": "74.80",
            "overall economic freedom": "55.90",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "6.2"
        }, {
            indicator: "Ethiopia",
            "ISO Country code": "ETH",
            population: "105000000",
            "surface area (km²)": "1000000",
            "GINI index": "33.0",
            "happy planet index": "26.7",
            "human development index": "0.463",
            "world happiness report score": "4.18",
            SEDA: "32.3",
            "GDP\r\n(billions PPP)": "177.5",
            "GDP per capita (PPP)": "1946",
            "GDP growth\r\n(annual %)": "10.2",
            "health expenditure (% of GDP)": "4.0",
            "health expenditure per person (int. $)": "66",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "8",
            unemployment: "5.7",
            "government spending": "90.6",
            "government expenditure (% of GDP)": "17.70",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.69",
            "government effectiveness": "-0.7",
            "regulatory quality": "-1.0",
            "rule of law": "-0.450",
            "control of corruption": "-0.56",
            "judicial effectiveness": "37.60",
            "government integrity": "37.70",
            "property rights": "31.10",
            "tax burden": "76.50",
            "overall economic freedom": "52.80",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "38.8"
        }, {
            indicator: "Fiji",
            "ISO Country code": "FJI",
            population: "900000",
            "surface area (km²)": "18274",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.741",
            "world happiness report score": "-",
            SEDA: "49",
            "GDP\r\n(billions PPP)": "8.3",
            "GDP per capita (PPP)": "9268",
            "GDP growth\r\n(annual %)": "4.3",
            "health expenditure (% of GDP)": "3.6",
            "health expenditure per person (int. $)": "331",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "7.9",
            "government spending": "68.2",
            "government expenditure (% of GDP)": "32.60",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.79",
            "government effectiveness": "0.1",
            "regulatory quality": "-0.2",
            "rule of law": "-0.250",
            "control of corruption": "0.36",
            "judicial effectiveness": "47.10",
            "government integrity": "34.80",
            "property rights": "68.30",
            "tax burden": "81.40",
            "overall economic freedom": "62.00",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "16.0"
        }, {
            indicator: "Finland",
            "ISO Country code": "FIN",
            population: "6000000",
            "surface area (km²)": "303815",
            "GINI index": "27.2",
            "happy planet index": "31.3",
            "human development index": "0.920",
            "world happiness report score": "7.79",
            SEDA: "81.3",
            "GDP\r\n(billions PPP)": "231.4",
            "GDP per capita (PPP)": "42165",
            "GDP growth\r\n(annual %)": "0.4",
            "health expenditure (% of GDP)": "9.4",
            "health expenditure per person (int. $)": "3669",
            "education expenditure\r\n(% of GDP)": "7.2",
            "education expenditure per person ($)": "3570",
            "school life expectancy (years)": "19",
            unemployment: "9",
            "government spending": "2.3",
            "government expenditure (% of GDP)": "57.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.07",
            "government effectiveness": "1.9",
            "regulatory quality": "1.8",
            "rule of law": "2.030",
            "control of corruption": "2.22",
            "judicial effectiveness": "82.70",
            "government integrity": "89.80",
            "property rights": "89.00",
            "tax burden": "66.50",
            "overall economic freedom": "74.10",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "42.0"
        }, {
            indicator: "France",
            "ISO Country code": "FRA",
            population: "67000000",
            "surface area (km²)": "549970",
            "GINI index": "29.3",
            "happy planet index": "30.4",
            "human development index": "0.901",
            "world happiness report score": "6.64",
            SEDA: "73.9",
            "GDP\r\n(billions PPP)": "2733.7",
            "GDP per capita (PPP)": "42314",
            "GDP growth\r\n(annual %)": "1.1",
            "health expenditure (% of GDP)": "11.1",
            "health expenditure per person (int. $)": "4542",
            "education expenditure\r\n(% of GDP)": "5.5",
            "education expenditure per person ($)": "2373",
            "school life expectancy (years)": "16",
            unemployment: "10",
            "government spending": "2.7",
            "government expenditure (% of GDP)": "57.00",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.21",
            "government effectiveness": "1.4",
            "regulatory quality": "1.2",
            "rule of law": "1.440",
            "control of corruption": "1.26",
            "judicial effectiveness": "72.70",
            "government integrity": "65.10",
            "property rights": "84.00",
            "tax burden": "47.30",
            "overall economic freedom": "63.90",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "39.0"
        }, {
            indicator: "Gabon",
            "ISO Country code": "GAB",
            population: "1900000",
            "surface area (km²)": "257667",
            "GINI index": "42.2",
            "happy planet index": "17.5",
            "human development index": "0.702",
            "world happiness report score": "4.78",
            SEDA: "40.9",
            "GDP\r\n(billions PPP)": "35.9",
            "GDP per capita (PPP)": "19057",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "2.7",
            "health expenditure per person (int. $)": "481",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "18.5",
            "government spending": "84.6",
            "government expenditure (% of GDP)": "22.60",
            "political rights score": "7",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.09",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.8",
            "rule of law": "-0.680",
            "control of corruption": "-0.81",
            "judicial effectiveness": "27.80",
            "government integrity": "33.40",
            "property rights": "29.90",
            "tax burden": "74.30",
            "overall economic freedom": "58.00",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "17.1"
        }, {
            indicator: "Gambia. The",
            "ISO Country code": "GMB",
            population: "2100000",
            "surface area (km²)": "10120",
            "GINI index": "50.2",
            "happy planet index": "-",
            "human development index": "0.460",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "3.4",
            "GDP per capita (PPP)": "1667",
            "GDP growth\r\n(annual %)": "4.4",
            "health expenditure (% of GDP)": "6.6",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "29.7",
            "government spending": "74",
            "government expenditure (% of GDP)": "29.40",
            "political rights score": "4",
            "civil liberties score": "5",
            "political stability & absence of violence": "-",
            "government effectiveness": "-",
            "regulatory quality": "-",
            "rule of law": "-",
            "control of corruption": "-",
            "judicial effectiveness": "38.80",
            "government integrity": "36.80",
            "property rights": "34.40",
            "tax burden": "71.90",
            "overall economic freedom": "52.30",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "10.3"
        }, {
            indicator: "Georgia",
            "ISO Country code": "GEO",
            population: "3700000",
            "surface area (km²)": "69700",
            "GINI index": "40.1",
            "happy planet index": "31.1",
            "human development index": "0.780",
            "world happiness report score": "4.45",
            SEDA: "55.40",
            "GDP\r\n(billions PPP)": "37.2",
            "GDP per capita (PPP)": "10044",
            "GDP growth\r\n(annual %)": "2.8",
            "health expenditure (% of GDP)": "7.9",
            "health expenditure per person (int. $)": "718",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "11.6",
            "government spending": "73.3",
            "government expenditure (% of GDP)": "29.80",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.37",
            "government effectiveness": "0.6",
            "regulatory quality": "1.1",
            "rule of law": "0.330",
            "control of corruption": "0.74",
            "judicial effectiveness": "64.20",
            "government integrity": "61.80",
            "property rights": "62.80",
            "tax burden": "87.00",
            "overall economic freedom": "76.20",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "16.0"
        }, {
            indicator: "Germany",
            "ISO Country code": "DEU",
            population: "83000000",
            "surface area (km²)": "348672",
            "GINI index": "27.0",
            "happy planet index": "29.8",
            "human development index": "0.936",
            "world happiness report score": "7.07",
            SEDA: "79.6",
            "GDP\r\n(billions PPP)": "3980.3",
            "GDP per capita (PPP)": "48111",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "11.2",
            "health expenditure per person (int. $)": "5357",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "2369",
            "school life expectancy (years)": "17",
            unemployment: "4.3",
            "government spending": "41.3",
            "government expenditure (% of GDP)": "44.20",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.58",
            "government effectiveness": "1.7",
            "regulatory quality": "1.8",
            "rule of law": "1.610",
            "control of corruption": "1.84",
            "judicial effectiveness": "78.00",
            "government integrity": "75.30",
            "property rights": "81.00",
            "tax burden": "61.30",
            "overall economic freedom": "74.20",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "37.0"
        }, {
            indicator: "Ghana",
            "ISO Country code": "GHA",
            population: "29000000",
            "surface area (km²)": "227533",
            "GINI index": "42.3",
            "happy planet index": "21.4",
            "human development index": "0.592",
            "world happiness report score": "5.48",
            SEDA: "40.2",
            "GDP\r\n(billions PPP)": "121.7",
            "GDP per capita (PPP)": "4412",
            "GDP growth\r\n(annual %)": "3.5",
            "health expenditure (% of GDP)": "5.9",
            "health expenditure per person (int. $)": "249",
            "education expenditure\r\n(% of GDP)": "6.2",
            "education expenditure per person ($)": "89",
            "school life expectancy (years)": "12",
            unemployment: "5.8",
            "government spending": "79",
            "government expenditure (% of GDP)": "26.50",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.09",
            "government effectiveness": "-0.1",
            "regulatory quality": "-0.1",
            "rule of law": "0.130",
            "control of corruption": "-0.23",
            "judicial effectiveness": "43.70",
            "government integrity": "32.90",
            "property rights": "48.90",
            "tax burden": "83.50",
            "overall economic freedom": "56.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "12.7"
        }, {
            indicator: "Greece",
            "ISO Country code": "GRC",
            population: "11000000",
            "surface area (km²)": "130647",
            "GINI index": "36.7",
            "happy planet index": "23.6",
            "human development index": "0.870",
            "world happiness report score": "5.15",
            SEDA: "64.1",
            "GDP\r\n(billions PPP)": "289.4",
            "GDP per capita (PPP)": "26669",
            "GDP growth\r\n(annual %)": "-0.2",
            "health expenditure (% of GDP)": "8.4",
            "health expenditure per person (int. $)": "2204",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "18",
            unemployment: "23.9",
            "government spending": "20.9",
            "government expenditure (% of GDP)": "51.30",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "-0.13",
            "government effectiveness": "0.3",
            "regulatory quality": "0.2",
            "rule of law": "0.080",
            "control of corruption": "-0.14",
            "judicial effectiveness": "59.00",
            "government integrity": "37.90",
            "property rights": "52.30",
            "tax burden": "60.40",
            "overall economic freedom": "57.30",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "18.3"
        }, {
            indicator: "Grenada",
            "ISO Country code": "GRD",
            population: "108000",
            "surface area (km²)": "344",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.772",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "5.0",
            "health expenditure per person (int. $)": "677",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "17",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "1.03",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.1",
            "rule of law": "0.440",
            "control of corruption": "0.48",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "33.3"
        }, {
            indicator: "Guatemala",
            "ISO Country code": "GTM",
            population: "17000000",
            "surface area (km²)": "107159",
            "GINI index": "53.0",
            "happy planet index": "34.2",
            "human development index": "0.650",
            "world happiness report score": "6.33",
            SEDA: "42.5",
            "GDP\r\n(billions PPP)": "131.7",
            "GDP per capita (PPP)": "7899",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "5.7",
            "health expenditure per person (int. $)": "444",
            "education expenditure\r\n(% of GDP)": "2.9",
            "education expenditure per person ($)": "108",
            "school life expectancy (years)": "11",
            unemployment: "2.4",
            "government spending": "95.3",
            "government expenditure (% of GDP)": "12.50",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.57",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.3",
            "rule of law": "-1.060",
            "control of corruption": "-0.74",
            "judicial effectiveness": "33.10",
            "government integrity": "27.30",
            "property rights": "40.40",
            "tax burden": "79.20",
            "overall economic freedom": "63.40",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "12.7"
        }, {
            indicator: "Guinea",
            "ISO Country code": "GIN",
            population: "13000000",
            "surface area (km²)": "245717",
            "GINI index": "39.4",
            "happy planet index": "-",
            "human development index": "0.459",
            "world happiness report score": "4.87",
            SEDA: "28.3",
            "GDP\r\n(billions PPP)": "16.0",
            "GDP per capita (PPP)": "1265",
            "GDP growth\r\n(annual %)": "0.1",
            "health expenditure (% of GDP)": "4.5",
            "health expenditure per person (int. $)": "57",
            "education expenditure\r\n(% of GDP)": "2.4",
            "education expenditure per person ($)": "18",
            "school life expectancy (years)": "9",
            unemployment: "6.8",
            "government spending": "80.6",
            "government expenditure (% of GDP)": "25.40",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.61",
            "government effectiveness": "-1.0",
            "regulatory quality": "-0.8",
            "rule of law": "-1.230",
            "control of corruption": "-1.01",
            "judicial effectiveness": "28.20",
            "government integrity": "26.90",
            "property rights": "32.40",
            "tax burden": "65.90",
            "overall economic freedom": "52.20",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "21.9"
        }, {
            indicator: "Guinea-Bissau",
            "ISO Country code": "GNB",
            population: "1700000",
            "surface area (km²)": "28120",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.455",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "2.9",
            "GDP per capita (PPP)": "1730",
            "GDP growth\r\n(annual %)": "4.8",
            "health expenditure (% of GDP)": "6.9",
            "health expenditure per person (int. $)": "100",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "6.5",
            "government spending": "85.6",
            "government expenditure (% of GDP)": "21.90",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.6",
            "government effectiveness": "-1.8",
            "regulatory quality": "-1.2",
            "rule of law": "-1.440",
            "control of corruption": "-1.56",
            "judicial effectiveness": "53.50",
            "government integrity": "27.30",
            "property rights": "31.10",
            "tax burden": "86.40",
            "overall economic freedom": "56.90",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "13.7"
        }, {
            indicator: "Guyana",
            "ISO Country code": "GUY",
            population: "800000",
            "surface area (km²)": "196849",
            "GINI index": "44.6",
            "happy planet index": "-",
            "human development index": "0.654",
            "world happiness report score": "-",
            SEDA: "42.8",
            "GDP\r\n(billions PPP)": "6.0",
            "GDP per capita (PPP)": "7873",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "4.5",
            "health expenditure per person (int. $)": "336",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "10",
            unemployment: "11.4",
            "government spending": "70.8",
            "government expenditure (% of GDP)": "31.20",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.04",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.4",
            "rule of law": "-0.290",
            "control of corruption": "-0.51",
            "judicial effectiveness": "42.50",
            "government integrity": "34.80",
            "property rights": "42.10",
            "tax burden": "68.40",
            "overall economic freedom": "58.70",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "31.9"
        }, {
            indicator: "Haiti",
            "ISO Country code": "HTI",
            population: "11000000",
            "surface area (km²)": "27560",
            "GINI index": "60.8",
            "happy planet index": "28.6",
            "human development index": "0.498",
            "world happiness report score": "3.82",
            SEDA: "24.2",
            "GDP\r\n(billions PPP)": "19.4",
            "GDP per capita (PPP)": "1784",
            "GDP growth\r\n(annual %)": "1",
            "health expenditure (% of GDP)": "6.9",
            "health expenditure per person (int. $)": "120",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "13.2",
            "government spending": "85.6",
            "government expenditure (% of GDP)": "21.90",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.7",
            "government effectiveness": "-2.1",
            "regulatory quality": "-1.3",
            "rule of law": "-1.090",
            "control of corruption": "-1.24",
            "judicial effectiveness": "42.50",
            "government integrity": "24.60",
            "property rights": "25.10",
            "tax burden": "80.10",
            "overall economic freedom": "55.80",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "2.5"
        }, {
            indicator: "Honduras",
            "ISO Country code": "HND",
            population: "9000000",
            "surface area (km²)": "111890",
            "GINI index": "47.1",
            "happy planet index": "27.2",
            "human development index": "0.617",
            "world happiness report score": "6.02",
            SEDA: "41.9",
            "GDP\r\n(billions PPP)": "43.2",
            "GDP per capita (PPP)": "5272",
            "GDP growth\r\n(annual %)": "3.6",
            "health expenditure (% of GDP)": "7.6",
            "health expenditure per person (int. $)": "353",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "6.3",
            "government spending": "76.6",
            "government expenditure (% of GDP)": "27.90",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.55",
            "government effectiveness": "-0.5",
            "regulatory quality": "-0.4",
            "rule of law": "-1.050",
            "control of corruption": "-0.72",
            "judicial effectiveness": "34.50",
            "government integrity": "28.20",
            "property rights": "44.30",
            "tax burden": "82.80",
            "overall economic freedom": "60.60",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "25.8"
        }, {
            indicator: "Hungary",
            "ISO Country code": "HUN",
            population: "10000000",
            "surface area (km²)": "89608",
            "GINI index": "28.2",
            "happy planet index": "26.4",
            "human development index": "0.838",
            "world happiness report score": "6.07",
            SEDA: "66.1",
            "GDP\r\n(billions PPP)": "270.3",
            "GDP per capita (PPP)": "27482",
            "GDP growth\r\n(annual %)": "2.9",
            "health expenditure (% of GDP)": "7.2",
            "health expenditure per person (int. $)": "1912",
            "education expenditure\r\n(% of GDP)": "4.6",
            "education expenditure per person ($)": "658",
            "school life expectancy (years)": "15",
            unemployment: "5.2",
            "government spending": "29.4",
            "government expenditure (% of GDP)": "48.50",
            "political rights score": "3",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.81",
            "government effectiveness": "0.5",
            "regulatory quality": "0.7",
            "rule of law": "0.530",
            "control of corruption": "0.09",
            "judicial effectiveness": "57.10",
            "government integrity": "36.40",
            "property rights": "57.60",
            "tax burden": "78.60",
            "overall economic freedom": "66.70",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "10.1"
        }, {
            indicator: "Iceland",
            "ISO Country code": "ISL",
            population: "300000",
            "surface area (km²)": "100250",
            "GINI index": "28.0",
            "happy planet index": "31.1",
            "human development index": "0.935",
            "world happiness report score": "7.48",
            SEDA: "83.7",
            "GDP\r\n(billions PPP)": "16.5",
            "GDP per capita (PPP)": "49136",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "8.6",
            "health expenditure per person (int. $)": "4116",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "20",
            unemployment: "3.8",
            "government spending": "44.2",
            "government expenditure (% of GDP)": "43.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.37",
            "government effectiveness": "1.5",
            "regulatory quality": "1.4",
            "rule of law": "1.610",
            "control of corruption": "1.84",
            "judicial effectiveness": "72.60",
            "government integrity": "77.30",
            "property rights": "86.70",
            "tax burden": "72.10",
            "overall economic freedom": "77.00",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "47.6"
        }, {
            indicator: "India",
            "ISO Country code": "IND",
            population: "1339000000",
            "surface area (km²)": "2973193",
            "GINI index": "35.2",
            "happy planet index": "29.2",
            "human development index": "0.640",
            "world happiness report score": "4.05",
            SEDA: "40",
            "GDP\r\n(billions PPP)": "8662.4",
            "GDP per capita (PPP)": "6616",
            "GDP growth\r\n(annual %)": "7.3",
            "health expenditure (% of GDP)": "3.9",
            "health expenditure per person (int. $)": "238",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "3.5",
            "government spending": "77.7",
            "government expenditure (% of GDP)": "27.30",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.83",
            "government effectiveness": "0.1",
            "regulatory quality": "-0.3",
            "rule of law": "0.000",
            "control of corruption": "-0.24",
            "judicial effectiveness": "54.30",
            "government integrity": "47.20",
            "property rights": "55.40",
            "tax burden": "79.40",
            "overall economic freedom": "54.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "11.8"
        }, {
            indicator: "Indonesia",
            "ISO Country code": "IDN",
            population: "264000000",
            "surface area (km²)": "1811569",
            "GINI index": "36.8",
            "happy planet index": "35.7",
            "human development index": "0.694",
            "world happiness report score": "5.10",
            SEDA: "46.4",
            "GDP\r\n(billions PPP)": "3032.1",
            "GDP per capita (PPP)": "11720",
            "GDP growth\r\n(annual %)": "4.8",
            "health expenditure (% of GDP)": "3.3",
            "health expenditure per person (int. $)": "369",
            "education expenditure\r\n(% of GDP)": "3.3",
            "education expenditure per person ($)": "115",
            "school life expectancy (years)": "13",
            unemployment: "5.6",
            "government spending": "90.7",
            "government expenditure (% of GDP)": "17.60",
            "political rights score": "2",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.51",
            "government effectiveness": "0.0",
            "regulatory quality": "-0.1",
            "rule of law": "-0.350",
            "control of corruption": "-0.25",
            "judicial effectiveness": "45.20",
            "government integrity": "42.80",
            "property rights": "49.30",
            "tax burden": "83.70",
            "overall economic freedom": "64.20",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "19.8"
        }, {
            indicator: "Iran",
            "ISO Country code": "IRN",
            population: "81000000",
            "surface area (km²)": "1531595",
            "GINI index": "44.5",
            "happy planet index": "24.0",
            "human development index": "0.798",
            "world happiness report score": "4.72",
            SEDA: "48.00",
            "GDP\r\n(billions PPP)": "1454.5",
            "GDP per capita (PPP)": "18078",
            "GDP growth\r\n(annual %)": "0",
            "health expenditure (% of GDP)": "7.6",
            "health expenditure per person (int. $)": "1262",
            "education expenditure\r\n(% of GDP)": "2.8",
            "education expenditure per person ($)": "155",
            "school life expectancy (years)": "15",
            unemployment: "11.3",
            "government spending": "91.1",
            "government expenditure (% of GDP)": "17.20",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.93",
            "government effectiveness": "-0.2",
            "regulatory quality": "-1.2",
            "rule of law": "-0.680",
            "control of corruption": "-0.81",
            "judicial effectiveness": "35.30",
            "government integrity": "32.60",
            "property rights": "32.50",
            "tax burden": "81.00",
            "overall economic freedom": "50.90",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "5.9"
        }, {
            indicator: "Iraq",
            "ISO Country code": "IRQ",
            population: "38000000",
            "surface area (km²)": "437367",
            "GINI index": "-",
            "happy planet index": "26.5",
            "human development index": "0.685",
            "world happiness report score": "4.46",
            SEDA: "37.00",
            "GDP\r\n(billions PPP)": "647.2",
            "GDP per capita (PPP)": "17944",
            "GDP growth\r\n(annual %)": "2.4",
            "health expenditure (% of GDP)": "3.4",
            "health expenditure per person (int. $)": "481",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "16",
            "government spending": "45.4",
            "government expenditure (% of GDP)": "42.70",
            "political rights score": "5",
            "civil liberties score": "6",
            "political stability & absence of violence": "-2.33",
            "government effectiveness": "-1.3",
            "regulatory quality": "-1.2",
            "rule of law": "-1.640",
            "control of corruption": "-1.37",
            "judicial effectiveness": "11.40",
            "government integrity": "23.40",
            "property rights": "36.70",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "25.3"
        }, {
            indicator: "Ireland",
            "ISO Country code": "IRL",
            population: "4700000",
            "surface area (km²)": "68883",
            "GINI index": "31.3",
            "happy planet index": "30.0",
            "human development index": "0.938",
            "world happiness report score": "7.06",
            SEDA: "80.30",
            "GDP\r\n(billions PPP)": "324.9",
            "GDP per capita (PPP)": "69231",
            "GDP growth\r\n(annual %)": "7.8",
            "health expenditure (% of GDP)": "7.8",
            "health expenditure per person (int. $)": "5335",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "19",
            unemployment: "8.1",
            "government spending": "69.6",
            "government expenditure (% of GDP)": "31.90",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.02",
            "government effectiveness": "1.3",
            "regulatory quality": "1.6",
            "rule of law": "1.430",
            "control of corruption": "1.55",
            "judicial effectiveness": "79.00",
            "government integrity": "79.00",
            "property rights": "87.70",
            "tax burden": "76.10",
            "overall economic freedom": "80.40",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "22.2"
        }, {
            indicator: "Israel",
            "ISO Country code": "ISR",
            population: "9000000",
            "surface area (km²)": "20330",
            "GINI index": "42.8",
            "happy planet index": "28.8",
            "human development index": "0.903",
            "world happiness report score": "7.33",
            SEDA: "66.50",
            "GDP\r\n(billions PPP)": "300.6",
            "GDP per capita (PPP)": "35179",
            "GDP growth\r\n(annual %)": "2.6",
            "health expenditure (% of GDP)": "7.4",
            "health expenditure per person (int. $)": "2819",
            "education expenditure\r\n(% of GDP)": "5.7",
            "education expenditure per person ($)": "2154",
            "school life expectancy (years)": "16",
            unemployment: "5.6",
            "government spending": "51.8",
            "government expenditure (% of GDP)": "40.10",
            "political rights score": "1",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.88",
            "government effectiveness": "1.4",
            "regulatory quality": "1.3",
            "rule of law": "1.020",
            "control of corruption": "0.83",
            "judicial effectiveness": "83.10",
            "government integrity": "61.20",
            "property rights": "78.20",
            "tax burden": "60.90",
            "overall economic freedom": "72.20",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "27.5"
        }, {
            indicator: "Italy",
            "ISO Country code": "ITA",
            population: "61000000",
            "surface area (km²)": "294140",
            "GINI index": "31.9",
            "happy planet index": "28.1",
            "human development index": "0.880",
            "world happiness report score": "6.20",
            SEDA: "69.10",
            "GDP\r\n(billions PPP)": "2234.5",
            "GDP per capita (PPP)": "36833",
            "GDP growth\r\n(annual %)": "0.8",
            "health expenditure (% of GDP)": "9.0",
            "health expenditure per person (int. $)": "3351",
            "education expenditure\r\n(% of GDP)": "4.1",
            "education expenditure per person ($)": "1443",
            "school life expectancy (years)": "16",
            unemployment: "11.5",
            "government spending": "24.1",
            "government expenditure (% of GDP)": "50.30",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.24",
            "government effectiveness": "0.5",
            "regulatory quality": "0.7",
            "rule of law": "0.320",
            "control of corruption": "0.19",
            "judicial effectiveness": "60.90",
            "government integrity": "40.10",
            "property rights": "71.20",
            "tax burden": "55.20",
            "overall economic freedom": "62.50",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "31.0"
        }, {
            indicator: "Jamaica",
            "ISO Country code": "JAM",
            population: "2800000",
            "surface area (km²)": "10831",
            "GINI index": "35.0",
            "happy planet index": "36.9",
            "human development index": "0.732",
            "world happiness report score": "5.89",
            SEDA: "49.70",
            "GDP\r\n(billions PPP)": "25.4",
            "GDP per capita (PPP)": "8976",
            "GDP growth\r\n(annual %)": "1.1",
            "health expenditure (% of GDP)": "5.9",
            "health expenditure per person (int. $)": "511",
            "education expenditure\r\n(% of GDP)": "6.0",
            "education expenditure per person ($)": "292",
            "school life expectancy (years)": "-",
            unemployment: "13.3",
            "government spending": "77.2",
            "government expenditure (% of GDP)": "27.60",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.25",
            "government effectiveness": "0.5",
            "regulatory quality": "0.1",
            "rule of law": "-0.160",
            "control of corruption": "-0.17",
            "judicial effectiveness": "56.60",
            "government integrity": "39.40",
            "property rights": "60.90",
            "tax burden": "80.00",
            "overall economic freedom": "69.10",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "17.5"
        }, {
            indicator: "Japan",
            "ISO Country code": "JPN",
            population: "127000000",
            "surface area (km²)": "364485",
            "GINI index": "37.9",
            "happy planet index": "28.3",
            "human development index": "0.909",
            "world happiness report score": "5.91",
            SEDA: "75.20",
            "GDP\r\n(billions PPP)": "5237.8",
            "GDP per capita (PPP)": "41275",
            "GDP growth\r\n(annual %)": "0.5",
            "health expenditure (% of GDP)": "10.9",
            "health expenditure per person (int. $)": "4405",
            "education expenditure\r\n(% of GDP)": "3.6",
            "education expenditure per person ($)": "1368",
            "school life expectancy (years)": "15",
            unemployment: "3.1",
            "government spending": "54.1",
            "government expenditure (% of GDP)": "39.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.12",
            "government effectiveness": "1.6",
            "regulatory quality": "1.4",
            "rule of law": "1.570",
            "control of corruption": "1.52",
            "judicial effectiveness": "73.20",
            "government integrity": "79.20",
            "property rights": "86.00",
            "tax burden": "67.40",
            "overall economic freedom": "72.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "9.3"
        }, {
            indicator: "Jordan",
            "ISO Country code": "JOR",
            population: "10000000",
            "surface area (km²)": "88802",
            "GINI index": "39.7",
            "happy planet index": "-",
            "human development index": "0.735",
            "world happiness report score": "4.81",
            SEDA: "48.70",
            "GDP\r\n(billions PPP)": "85.6",
            "GDP per capita (PPP)": "12278",
            "GDP growth\r\n(annual %)": "2.5",
            "health expenditure (% of GDP)": "6.3",
            "health expenditure per person (int. $)": "568",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "13.2",
            "government spending": "69.4",
            "government expenditure (% of GDP)": "32.00",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.53",
            "government effectiveness": "0.1",
            "regulatory quality": "0.1",
            "rule of law": "0.260",
            "control of corruption": "0.26",
            "judicial effectiveness": "57.30",
            "government integrity": "51.90",
            "property rights": "57.60",
            "tax burden": "92.40",
            "overall economic freedom": "64.90",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "15.4"
        }, {
            indicator: "Kazakhstan",
            "ISO Country code": "KAZ",
            population: "18000000",
            "surface area (km²)": "2699700",
            "GINI index": "26.3",
            "happy planet index": "19.1",
            "human development index": "0.800",
            "world happiness report score": "5.88",
            SEDA: "57.70",
            "GDP\r\n(billions PPP)": "451.3",
            "GDP per capita (PPP)": "25145",
            "GDP growth\r\n(annual %)": "1.2",
            "health expenditure (% of GDP)": "3.9",
            "health expenditure per person (int. $)": "903",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "5.2",
            "government spending": "85.3",
            "government expenditure (% of GDP)": "22.20",
            "political rights score": "7",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.02",
            "government effectiveness": "0.0",
            "regulatory quality": "0.2",
            "rule of law": "-0.410",
            "control of corruption": "-0.82",
            "judicial effectiveness": "58.10",
            "government integrity": "44.60",
            "property rights": "56.00",
            "tax burden": "92.60",
            "overall economic freedom": "69.10",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "27.1"
        }, {
            indicator: "Kenya",
            "ISO Country code": "KEN",
            population: "50000000",
            "surface area (km²)": "569140",
            "GINI index": "48.5",
            "happy planet index": "24.2",
            "human development index": "0.590",
            "world happiness report score": "4.48",
            SEDA: "35.40",
            "GDP\r\n(billions PPP)": "152.8",
            "GDP per capita (PPP)": "3361",
            "GDP growth\r\n(annual %)": "5.6",
            "health expenditure (% of GDP)": "5.2",
            "health expenditure per person (int. $)": "157",
            "education expenditure\r\n(% of GDP)": "5.3",
            "education expenditure per person ($)": "70",
            "school life expectancy (years)": "11",
            unemployment: "11",
            "government spending": "77.5",
            "government expenditure (% of GDP)": "27.40",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.08",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.2",
            "rule of law": "-0.410",
            "control of corruption": "-0.96",
            "judicial effectiveness": "44.00",
            "government integrity": "27.50",
            "property rights": "47.90",
            "tax burden": "78.50",
            "overall economic freedom": "54.70",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "21.8"
        }, {
            indicator: "Kiribati",
            "ISO Country code": "KIR",
            population: "100000",
            "surface area (km²)": "811",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.612",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.2",
            "GDP per capita (PPP)": "1823",
            "GDP growth\r\n(annual %)": "4.2",
            "health expenditure (% of GDP)": "7.6",
            "health expenditure per person (int. $)": "152",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "-",
            "government spending": "0",
            "government expenditure (% of GDP)": "117.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.9",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.8",
            "rule of law": "0.530",
            "control of corruption": "0.39",
            "judicial effectiveness": "35.30",
            "government integrity": "37.90",
            "property rights": "45.00",
            "tax burden": "72.40",
            "overall economic freedom": "50.80",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "6.5"
        }, {
            indicator: "Korea (Dem. Peoples Rep.)",
            "ISO Country code": "PRK",
            population: "25000000",
            "surface area (km²)": "120408",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "15.1",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "1",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "4.3",
            "government spending": "0",
            "government expenditure (% of GDP)": "-",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.48",
            "government effectiveness": "-1.7",
            "regulatory quality": "-2.3",
            "rule of law": "-1.710",
            "control of corruption": "-1.48",
            "judicial effectiveness": "5.00",
            "government integrity": "25.20",
            "property rights": "29.80",
            "tax burden": "0.00",
            "overall economic freedom": "5.80",
            "financial freedom": "0.00",
            "women MPs (% of all MPs)": "16.3"
        }, {
            indicator: "Korea (Rep.)",
            "ISO Country code": "KOR",
            population: "51000000",
            "surface area (km²)": "96920",
            "GINI index": "35.7",
            "happy planet index": "24.8",
            "human development index": "0.903",
            "world happiness report score": "5.87",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1934.0",
            "GDP per capita (PPP)": "37740",
            "GDP growth\r\n(annual %)": "2.6",
            "health expenditure (% of GDP)": "7.4",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "5.1",
            "education expenditure per person ($)": "1406",
            "school life expectancy (years)": "17",
            unemployment: "3.7",
            "government spending": "68.8",
            "government expenditure (% of GDP)": "32.30",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.29",
            "government effectiveness": "1.1",
            "regulatory quality": "1.1",
            "rule of law": "1.160",
            "control of corruption": "0.48",
            "judicial effectiveness": "63.70",
            "government integrity": "49.90",
            "property rights": "79.40",
            "tax burden": "73.30",
            "overall economic freedom": "73.80",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "17.0"
        }, {
            indicator: "Kosovo",
            "ISO Country code": "-",
            population: "1900000",
            "surface area (km²)": "10887",
            "GINI index": "23.2",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "6.15",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "18.4",
            "GDP per capita (PPP)": "9600",
            "GDP growth\r\n(annual %)": "3.3",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "77.9",
            "government expenditure (% of GDP)": "27.10",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.21",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.1",
            "rule of law": "-0.420",
            "control of corruption": "-0.50",
            "judicial effectiveness": "59.00",
            "government integrity": "45.40",
            "property rights": "52.30",
            "tax burden": "93.20",
            "overall economic freedom": "66.60",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "-"
        }, {
            indicator: "Kuwait",
            "ISO Country code": "KWT",
            population: "4200000",
            "surface area (km²)": "17818",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.803",
            "world happiness report score": "6.09",
            SEDA: "65.70",
            "GDP\r\n(billions PPP)": "303.7",
            "GDP per capita (PPP)": "71887",
            "GDP growth\r\n(annual %)": "0.9",
            "health expenditure (% of GDP)": "4.0",
            "health expenditure per person (int. $)": "2978",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "2.4",
            "government spending": "20.5",
            "government expenditure (% of GDP)": "51.50",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.04",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.1",
            "rule of law": "0.100",
            "control of corruption": "-0.33",
            "judicial effectiveness": "53.50",
            "government integrity": "36.60",
            "property rights": "52.00",
            "tax burden": "97.70",
            "overall economic freedom": "62.20",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "3.1"
        }, {
            indicator: "Kyrgyzstan",
            "ISO Country code": "KGZ",
            population: "6000000",
            "surface area (km²)": "191801",
            "GINI index": "33.4",
            "happy planet index": "33.1",
            "human development index": "0.672",
            "world happiness report score": "5.63",
            SEDA: "45.40",
            "GDP\r\n(billions PPP)": "21.5",
            "GDP per capita (PPP)": "3521",
            "GDP growth\r\n(annual %)": "3.5",
            "health expenditure (% of GDP)": "8.2",
            "health expenditure per person (int. $)": "287",
            "education expenditure\r\n(% of GDP)": "5.5",
            "education expenditure per person ($)": "71",
            "school life expectancy (years)": "13",
            unemployment: "7.7",
            "government spending": "58.2",
            "government expenditure (% of GDP)": "37.30",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.43",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.4",
            "rule of law": "-0.930",
            "control of corruption": "-1.05",
            "judicial effectiveness": "22.10",
            "government integrity": "29.40",
            "property rights": "50.20",
            "tax burden": "93.80",
            "overall economic freedom": "62.80",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "19.2"
        }, {
            indicator: "Laos",
            "ISO Country code": "LAO",
            population: "7000000",
            "surface area (km²)": "230800",
            "GINI index": "36.7",
            "happy planet index": "-",
            "human development index": "0.601",
            "world happiness report score": "4.62",
            SEDA: "37.80",
            "GDP\r\n(billions PPP)": "40.9",
            "GDP per capita (PPP)": "5710",
            "GDP growth\r\n(annual %)": "7",
            "health expenditure (% of GDP)": "2.8",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "2.9",
            "education expenditure per person ($)": "59",
            "school life expectancy (years)": "11",
            unemployment: "1.5",
            "government spending": "79.3",
            "government expenditure (% of GDP)": "26.30",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "0.43",
            "government effectiveness": "-0.4",
            "regulatory quality": "-0.7",
            "rule of law": "-0.880",
            "control of corruption": "-0.94",
            "judicial effectiveness": "41.40",
            "government integrity": "33.10",
            "property rights": "34.10",
            "tax burden": "86.70",
            "overall economic freedom": "53.60",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "27.5"
        }, {
            indicator: "Latvia",
            "ISO Country code": "LVA",
            population: "2000000",
            "surface area (km²)": "62249",
            "GINI index": "34.5",
            "happy planet index": "17.1",
            "human development index": "0.847",
            "world happiness report score": "6.09",
            SEDA: "66.10",
            "GDP\r\n(billions PPP)": "50.6",
            "GDP per capita (PPP)": "25710",
            "GDP growth\r\n(annual %)": "2.7",
            "health expenditure (% of GDP)": "5.8",
            "health expenditure per person (int. $)": "1429",
            "education expenditure\r\n(% of GDP)": "5.3",
            "education expenditure per person ($)": "828",
            "school life expectancy (years)": "16",
            unemployment: "9.9",
            "government spending": "59",
            "government expenditure (% of GDP)": "37.00",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.46",
            "government effectiveness": "0.9",
            "regulatory quality": "1.2",
            "rule of law": "0.930",
            "control of corruption": "0.54",
            "judicial effectiveness": "58.90",
            "government integrity": "45.40",
            "property rights": "68.30",
            "tax burden": "84.00",
            "overall economic freedom": "73.60",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "16.0"
        }, {
            indicator: "Lebanon",
            "ISO Country code": "LBN",
            population: "4600000",
            "surface area (km²)": "10230",
            "GINI index": "-",
            "happy planet index": "21.9",
            "human development index": "0.757",
            "world happiness report score": "5.15",
            SEDA: "44.80",
            "GDP\r\n(billions PPP)": "85.2",
            "GDP per capita (PPP)": "18525",
            "GDP growth\r\n(annual %)": "1",
            "health expenditure (% of GDP)": "7.4",
            "health expenditure per person (int. $)": "1117",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "6.8",
            "government spending": "78.2",
            "government expenditure (% of GDP)": "26.90",
            "political rights score": "6",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.59",
            "government effectiveness": "-0.5",
            "regulatory quality": "-0.3",
            "rule of law": "-0.820",
            "control of corruption": "-1.00",
            "judicial effectiveness": "33.60",
            "government integrity": "20.20",
            "property rights": "39.70",
            "tax burden": "91.90",
            "overall economic freedom": "53.20",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "3.1"
        }, {
            indicator: "Lesotho",
            "ISO Country code": "LSO",
            population: "1900000",
            "surface area (km²)": "30355",
            "GINI index": "63.2",
            "happy planet index": "16.7",
            "human development index": "0.520",
            "world happiness report score": "-",
            SEDA: "29.50",
            "GDP\r\n(billions PPP)": "7.0",
            "GDP per capita (PPP)": "3601",
            "GDP growth\r\n(annual %)": "2.5",
            "health expenditure (% of GDP)": "8.4",
            "health expenditure per person (int. $)": "251",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "27.4",
            "government spending": "23.8",
            "government expenditure (% of GDP)": "50.40",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.25",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.3",
            "rule of law": "-0.270",
            "control of corruption": "-0.03",
            "judicial effectiveness": "52.70",
            "government integrity": "32.90",
            "property rights": "49.40",
            "tax burden": "48.20",
            "overall economic freedom": "53.90",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "22.9"
        }, {
            indicator: "Liberia",
            "ISO Country code": "LBR",
            population: "4400000",
            "surface area (km²)": "96320",
            "GINI index": "32.0",
            "happy planet index": "22.2",
            "human development index": "0.435",
            "world happiness report score": "4.42",
            SEDA: "30.60",
            "GDP\r\n(billions PPP)": "3.8",
            "GDP per capita (PPP)": "855",
            "GDP growth\r\n(annual %)": "0",
            "health expenditure (% of GDP)": "15.2",
            "health expenditure per person (int. $)": "128",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "4",
            "government spending": "59.4",
            "government expenditure (% of GDP)": "36.80",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.41",
            "government effectiveness": "-1.4",
            "regulatory quality": "-1.0",
            "rule of law": "-0.970",
            "control of corruption": "-0.69",
            "judicial effectiveness": "42.40",
            "government integrity": "32.00",
            "property rights": "28.20",
            "tax burden": "77.50",
            "overall economic freedom": "50.90",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "12.3"
        }, {
            indicator: "Libya",
            "ISO Country code": "LBY",
            population: "6000000",
            "surface area (km²)": "1759540",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.706",
            "world happiness report score": "5.65",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "55.4",
            "GDP per capita (PPP)": "8679",
            "GDP growth\r\n(annual %)": "-6.4",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "19.2",
            "government spending": "0",
            "government expenditure (% of GDP)": "92.90",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-2.33",
            "government effectiveness": "-1.8",
            "regulatory quality": "-2.2",
            "rule of law": "-1.780",
            "control of corruption": "-1.59",
            "judicial effectiveness": "22.10",
            "government integrity": "23.10",
            "property rights": "5.20",
            "tax burden": "90.50",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "16.0"
        }, {
            indicator: "Liechtenstein",
            "ISO Country code": "LIE",
            population: "38000",
            "surface area (km²)": "160",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.916",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "6.1",
            "GDP per capita (PPP)": "160526",
            "GDP growth\r\n(annual %)": "1.2",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "2.4",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "2",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.5",
            "government effectiveness": "1.8",
            "regulatory quality": "1.5",
            "rule of law": "1.670",
            "control of corruption": "2.06",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "12.0"
        }, {
            indicator: "Lithuania",
            "ISO Country code": "LTU",
            population: "2900000",
            "surface area (km²)": "62680",
            "GINI index": "37.9",
            "happy planet index": "21.0",
            "human development index": "0.858",
            "world happiness report score": "6.27",
            SEDA: "67.4",
            "GDP\r\n(billions PPP)": "86.1",
            "GDP per capita (PPP)": "29972",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "6.5",
            "health expenditure per person (int. $)": "1875",
            "education expenditure\r\n(% of GDP)": "4.5",
            "education expenditure per person ($)": "742",
            "school life expectancy (years)": "17",
            unemployment: "9.2",
            "government spending": "63.9",
            "government expenditure (% of GDP)": "34.70",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.78",
            "government effectiveness": "1.0",
            "regulatory quality": "1.2",
            "rule of law": "0.990",
            "control of corruption": "2.06",
            "judicial effectiveness": "66.70",
            "government integrity": "50.90",
            "property rights": "73.80",
            "tax burden": "86.40",
            "overall economic freedom": "75.30",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "21.3"
        }, {
            indicator: "Luxembourg",
            "ISO Country code": "LUX",
            population: "600000",
            "surface area (km²)": "2586",
            "GINI index": "30.4",
            "happy planet index": "13.2",
            "human development index": "0.904",
            "world happiness report score": "7.06",
            SEDA: "83.20",
            "GDP\r\n(billions PPP)": "59.9",
            "GDP per capita (PPP)": "104003",
            "GDP growth\r\n(annual %)": "4.5",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "6382",
            "education expenditure\r\n(% of GDP)": "4.0",
            "education expenditure per person ($)": "4762",
            "school life expectancy (years)": "14",
            unemployment: "5.9",
            "government spending": "48.5",
            "government expenditure (% of GDP)": "41.40",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.34",
            "government effectiveness": "1.7",
            "regulatory quality": "1.7",
            "rule of law": "1.740",
            "control of corruption": "1.99",
            "judicial effectiveness": "77.90",
            "government integrity": "79.00",
            "property rights": "82.70",
            "tax burden": "65.10",
            "overall economic freedom": "76.40",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "28.3"
        }, {
            indicator: "Macedonia",
            "ISO Country code": "MKD",
            population: "2100000",
            "surface area (km²)": "25433",
            "GINI index": "33.7",
            "happy planet index": "23.4",
            "human development index": "-",
            "world happiness report score": "5.23",
            SEDA: "52.50",
            "GDP\r\n(billions PPP)": "30.3",
            "GDP per capita (PPP)": "14597",
            "GDP growth\r\n(annual %)": "3.7",
            "health expenditure (% of GDP)": "6.1",
            "health expenditure per person (int. $)": "857",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "26.7",
            "government spending": "70.3",
            "government expenditure (% of GDP)": "31.50",
            "political rights score": "4",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.25",
            "government effectiveness": "0.1",
            "regulatory quality": "0.5",
            "rule of law": "-0.240",
            "control of corruption": "-0.31",
            "judicial effectiveness": "57.00",
            "government integrity": "47.40",
            "property rights": "64.80",
            "tax burden": "91.60",
            "overall economic freedom": "71.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "34.2"
        }, {
            indicator: "Madagascar",
            "ISO Country code": "MDG",
            population: "26000000",
            "surface area (km²)": "581540",
            "GINI index": "41.0",
            "happy planet index": "-",
            "human development index": "0.519",
            "world happiness report score": "4.08",
            SEDA: "31.10",
            "GDP\r\n(billions PPP)": "37.5",
            "GDP per capita (PPP)": "1505",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "5.2",
            "health expenditure per person (int. $)": "77",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "2.1",
            "government spending": "92.9",
            "government expenditure (% of GDP)": "15.40",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.33",
            "government effectiveness": "-1.1",
            "regulatory quality": "-0.7",
            "rule of law": "-0.860",
            "control of corruption": "-1.05",
            "judicial effectiveness": "21.40",
            "government integrity": "17.80",
            "property rights": "33.20",
            "tax burden": "90.30",
            "overall economic freedom": "56.80",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "19.2"
        }, {
            indicator: "Malawi",
            "ISO Country code": "MWI",
            population: "19000000",
            "surface area (km²)": "94080",
            "GINI index": "46.1",
            "happy planet index": "22.1",
            "human development index": "0.477",
            "world happiness report score": "3.42",
            SEDA: "32.50",
            "GDP\r\n(billions PPP)": "21.1",
            "GDP per capita (PPP)": "1135",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "9.3",
            "health expenditure per person (int. $)": "108",
            "education expenditure\r\n(% of GDP)": "4.8",
            "education expenditure per person ($)": "17",
            "school life expectancy (years)": "11",
            unemployment: "6.7",
            "government spending": "70.7",
            "government expenditure (% of GDP)": "31.30",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.27",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.8",
            "rule of law": "-0.370",
            "control of corruption": "-0.65",
            "judicial effectiveness": "47.10",
            "government integrity": "28.90",
            "property rights": "33.10",
            "tax burden": "76.90",
            "overall economic freedom": "52.00",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "16.7"
        }, {
            indicator: "Malaysia",
            "ISO Country code": "MYS",
            population: "32000000",
            "surface area (km²)": "328657",
            "GINI index": "46.2",
            "happy planet index": "30.3",
            "human development index": "0.802",
            "world happiness report score": "-",
            SEDA: "59.80",
            "GDP\r\n(billions PPP)": "863.3",
            "GDP per capita (PPP)": "27267",
            "GDP growth\r\n(annual %)": "5",
            "health expenditure (% of GDP)": "4.0",
            "health expenditure per person (int. $)": "1064",
            "education expenditure\r\n(% of GDP)": "5.2",
            "education expenditure per person ($)": "583",
            "school life expectancy (years)": "13",
            unemployment: "3.3",
            "government spending": "81.3",
            "government expenditure (% of GDP)": "24.90",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "0.16",
            "government effectiveness": "0.8",
            "regulatory quality": "0.7",
            "rule of law": "0.410",
            "control of corruption": "0.03",
            "judicial effectiveness": "65.20",
            "government integrity": "54.80",
            "property rights": "83.80",
            "tax burden": "85.60",
            "overall economic freedom": "74.50",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "10.4"
        }, {
            indicator: "Maldives",
            "ISO Country code": "MDV",
            population: "400000",
            "surface area (km²)": "298",
            "GINI index": "38.4",
            "happy planet index": "-",
            "human development index": "0.717",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "5.5",
            "GDP per capita (PPP)": "15553",
            "GDP growth\r\n(annual %)": "1.9",
            "health expenditure (% of GDP)": "11.5",
            "health expenditure per person (int. $)": "1514",
            "education expenditure\r\n(% of GDP)": "3.5",
            "education expenditure per person ($)": "314",
            "school life expectancy (years)": "-",
            unemployment: "3.2",
            "government spending": "45.5",
            "government expenditure (% of GDP)": "42.60",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.26",
            "government effectiveness": "-0.5",
            "regulatory quality": "-0.4",
            "rule of law": "-0.620",
            "control of corruption": "-0.79",
            "judicial effectiveness": "38.80",
            "government integrity": "36.60",
            "property rights": "45.00",
            "tax burden": "94.30",
            "overall economic freedom": "51.10",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "5.9"
        }, {
            indicator: "Mali",
            "ISO Country code": "MLI",
            population: "19000000",
            "surface area (km²)": "1220190",
            "GINI index": "40.1",
            "happy planet index": "-",
            "human development index": "0.427",
            "world happiness report score": "4.74",
            SEDA: "29.70",
            "GDP\r\n(billions PPP)": "38.1",
            "GDP per capita (PPP)": "2266",
            "GDP growth\r\n(annual %)": "6.1",
            "health expenditure (% of GDP)": "5.8",
            "health expenditure per person (int. $)": "118",
            "education expenditure\r\n(% of GDP)": "3.6",
            "education expenditure per person ($)": "31",
            "school life expectancy (years)": "8",
            unemployment: "8.1",
            "government spending": "85.3",
            "government expenditure (% of GDP)": "22.20",
            "political rights score": "5",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.91",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.6",
            "rule of law": "-0.780",
            "control of corruption": "-0.63",
            "judicial effectiveness": "32.40",
            "government integrity": "31.40",
            "property rights": "31.90",
            "tax burden": "68.10",
            "overall economic freedom": "57.60",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "8.8"
        }, {
            indicator: "Malta",
            "ISO Country code": "MLT",
            population: "400000",
            "surface area (km²)": "316",
            "GINI index": "28.1",
            "happy planet index": "29.0",
            "human development index": "0.878",
            "world happiness report score": "6.68",
            SEDA: "68.80",
            "GDP\r\n(billions PPP)": "17.3",
            "GDP per capita (PPP)": "39834",
            "GDP growth\r\n(annual %)": "6.3",
            "health expenditure (% of GDP)": "9.6",
            "health expenditure per person (int. $)": "3471",
            "education expenditure\r\n(% of GDP)": "7.2",
            "education expenditure per person ($)": "1874",
            "school life expectancy (years)": "15",
            unemployment: "5.3",
            "government spending": "51",
            "government expenditure (% of GDP)": "40.40",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.27",
            "government effectiveness": "1.0",
            "regulatory quality": "1.3",
            "rule of law": "1.140",
            "control of corruption": "0.74",
            "judicial effectiveness": "62.80",
            "government integrity": "49.90",
            "property rights": "68.10",
            "tax burden": "64.70",
            "overall economic freedom": "68.50",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "11.9"
        }, {
            indicator: "Marshall Islands",
            "ISO Country code": "MHL",
            population: "53000",
            "surface area (km²)": "181",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.708",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "22.1",
            "health expenditure per person (int. $)": "863",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.2",
            "government effectiveness": "-1.6",
            "regulatory quality": "-1.0",
            "rule of law": "0.140",
            "control of corruption": "0.00",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "9.1"
        }, {
            indicator: "Mauritania",
            "ISO Country code": "MRT",
            population: "3800000",
            "surface area (km²)": "1030700",
            "GINI index": "37.0",
            "happy planet index": "18.0",
            "human development index": "0.520",
            "world happiness report score": "4.68",
            SEDA: "28.90",
            "GDP\r\n(billions PPP)": "16.4",
            "GDP per capita (PPP)": "4328",
            "GDP growth\r\n(annual %)": "1.9",
            "health expenditure (% of GDP)": "4.6",
            "health expenditure per person (int. $)": "177",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "11.7",
            "government spending": "72.8",
            "government expenditure (% of GDP)": "30.10",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.62",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.8",
            "rule of law": "-0.600",
            "control of corruption": "-0.75",
            "judicial effectiveness": "17.60",
            "government integrity": "28.90",
            "property rights": "23.90",
            "tax burden": "75.90",
            "overall economic freedom": "54.00",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "25.2"
        }, {
            indicator: "Mauritius",
            "ISO Country code": "MUS",
            population: "1300000",
            "surface area (km²)": "2030",
            "GINI index": "35.9",
            "happy planet index": "27.4",
            "human development index": "0.790",
            "world happiness report score": "6.17",
            SEDA: "60.20",
            "GDP\r\n(billions PPP)": "25.9",
            "GDP per capita (PPP)": "20422",
            "GDP growth\r\n(annual %)": "3.4",
            "health expenditure (% of GDP)": "5.5",
            "health expenditure per person (int. $)": "1099",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "499",
            "school life expectancy (years)": "15",
            unemployment: "7.8",
            "government spending": "80.7",
            "government expenditure (% of GDP)": "25.40",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.99",
            "government effectiveness": "0.9",
            "regulatory quality": "1.0",
            "rule of law": "0.680",
            "control of corruption": "0.20",
            "judicial effectiveness": "69.60",
            "government integrity": "52.10",
            "property rights": "68.70",
            "tax burden": "91.00",
            "overall economic freedom": "75.10",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "11.6"
        }, {
            indicator: "Mexico",
            "ISO Country code": "MEX",
            population: "129000000",
            "surface area (km²)": "1943945",
            "GINI index": "48.2",
            "happy planet index": "40.7",
            "human development index": "0.774",
            "world happiness report score": "6.41",
            SEDA: "49.1",
            "GDP\r\n(billions PPP)": "2315.7",
            "GDP per capita (PPP)": "18938",
            "GDP growth\r\n(annual %)": "2.5",
            "health expenditure (% of GDP)": "5.9",
            "health expenditure per person (int. $)": "1009",
            "education expenditure\r\n(% of GDP)": "5.3",
            "education expenditure per person ($)": "564",
            "school life expectancy (years)": "13",
            unemployment: "4",
            "government spending": "78.1",
            "government expenditure (% of GDP)": "27.00",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.65",
            "government effectiveness": "0.0",
            "regulatory quality": "0.2",
            "rule of law": "-0.570",
            "control of corruption": "-0.93",
            "judicial effectiveness": "39.00",
            "government integrity": "26.90",
            "property rights": "58.60",
            "tax burden": "75.70",
            "overall economic freedom": "64.80",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "42.6"
        }, {
            indicator: "Micronesia",
            "ISO Country code": "FSM",
            population: "100000",
            "surface area (km²)": "702",
            "GINI index": "61.1",
            "happy planet index": "-",
            "human development index": "0.627",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.3",
            "GDP per capita (PPP)": "3234",
            "GDP growth\r\n(annual %)": "-0.2",
            "health expenditure (% of GDP)": "13.1",
            "health expenditure per person (int. $)": "458",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "7.4",
            "government expenditure (% of GDP)": "55.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.2",
            "government effectiveness": "0.1",
            "regulatory quality": "-1.0",
            "rule of law": "0.010",
            "control of corruption": "0.75",
            "judicial effectiveness": "25.40",
            "government integrity": "38.80",
            "property rights": "5.20",
            "tax burden": "93.20",
            "overall economic freedom": "52.30",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "0.0"
        }, {
            indicator: "Moldova",
            "ISO Country code": "MDA",
            population: "3600000",
            "surface area (km²)": "32891",
            "GINI index": "26.8",
            "happy planet index": "-",
            "human development index": "0.700",
            "world happiness report score": "5.33",
            SEDA: "48.7",
            "GDP\r\n(billions PPP)": "18.9",
            "GDP per capita (PPP)": "5328",
            "GDP growth\r\n(annual %)": "-1.1",
            "health expenditure (% of GDP)": "10.2",
            "health expenditure per person (int. $)": "515",
            "education expenditure\r\n(% of GDP)": "7.5",
            "education expenditure per person ($)": "168",
            "school life expectancy (years)": "12",
            unemployment: "5",
            "government spending": "56.7",
            "government expenditure (% of GDP)": "38.00",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.24",
            "government effectiveness": "-0.5",
            "regulatory quality": "0.0",
            "rule of law": "-0.410",
            "control of corruption": "-0.80",
            "judicial effectiveness": "26.30",
            "government integrity": "26.60",
            "property rights": "53.50",
            "tax burden": "85.30",
            "overall economic freedom": "58.40",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "22.8"
        }, {
            indicator: "Monaco",
            "ISO Country code": "MCO",
            population: "39000",
            "surface area (km²)": "2",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "2.0",
            "health expenditure per person (int. $)": "3407",
            "education expenditure\r\n(% of GDP)": "1.0",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "3",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.65",
            "government effectiveness": "-",
            "regulatory quality": "-",
            "rule of law": "-",
            "control of corruption": "-",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "20.8"
        }, {
            indicator: "Mongolia",
            "ISO Country code": "MNG",
            population: "3000000",
            "surface area (km²)": "1553556",
            "GINI index": "34.0",
            "happy planet index": "14.3",
            "human development index": "0.741",
            "world happiness report score": "5.33",
            SEDA: "50.6",
            "GDP\r\n(billions PPP)": "37.0",
            "GDP per capita (PPP)": "12275",
            "GDP growth\r\n(annual %)": "2.3",
            "health expenditure (% of GDP)": "3.9",
            "health expenditure per person (int. $)": "470",
            "education expenditure\r\n(% of GDP)": "4.7",
            "education expenditure per person ($)": "197",
            "school life expectancy (years)": "15",
            unemployment: "6.7",
            "government spending": "57.1",
            "government expenditure (% of GDP)": "37.80",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.82",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.1",
            "rule of law": "-0.300",
            "control of corruption": "-0.45",
            "judicial effectiveness": "30.90",
            "government integrity": "34.80",
            "property rights": "51.00",
            "tax burden": "88.40",
            "overall economic freedom": "55.70",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "17.1"
        }, {
            indicator: "Montenegro",
            "ISO Country code": "MNE",
            population: "600000",
            "surface area (km²)": "13452",
            "GINI index": "31.9",
            "happy planet index": "25.1",
            "human development index": "0.814",
            "world happiness report score": "5.61",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "10.4",
            "GDP per capita (PPP)": "16643",
            "GDP growth\r\n(annual %)": "4.1",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "957",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "17.5",
            "government spending": "35.7",
            "government expenditure (% of GDP)": "46.30",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.01",
            "government effectiveness": "0.2",
            "regulatory quality": "0.3",
            "rule of law": "0.010",
            "control of corruption": "-0.09",
            "judicial effectiveness": "51.30",
            "government integrity": "38.10",
            "property rights": "54.20",
            "tax burden": "85.20",
            "overall economic freedom": "64.30",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "23.5"
        }, {
            indicator: "Morocco",
            "ISO Country code": "MAR",
            population: "36000000",
            "surface area (km²)": "446300",
            "GINI index": "40.9",
            "happy planet index": "32.7",
            "human development index": "0.667",
            "world happiness report score": "5.31",
            SEDA: "45.8",
            "GDP\r\n(billions PPP)": "281.8",
            "GDP per capita (PPP)": "8330",
            "GDP growth\r\n(annual %)": "4.5",
            "health expenditure (% of GDP)": "5.5",
            "health expenditure per person (int. $)": "435",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "10",
            "government spending": "70.5",
            "government expenditure (% of GDP)": "31.40",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.41",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.2",
            "rule of law": "-0.170",
            "control of corruption": "-0.13",
            "judicial effectiveness": "44.30",
            "government integrity": "41.30",
            "property rights": "53.80",
            "tax burden": "70.50",
            "overall economic freedom": "61.90",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "20.5"
        }, {
            indicator: "Mozambique",
            "ISO Country code": "MOZ",
            population: "30000000",
            "surface area (km²)": "786380",
            "GINI index": "45.6",
            "happy planet index": "23.7",
            "human development index": "0.437",
            "world happiness report score": "4.28",
            SEDA: "26.70",
            "GDP\r\n(billions PPP)": "34.9",
            "GDP per capita (PPP)": "1215",
            "GDP growth\r\n(annual %)": "6.3",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "64",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "10",
            unemployment: "24.4",
            "government spending": "60.7",
            "government expenditure (% of GDP)": "36.20",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.98",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.7",
            "rule of law": "-1.010",
            "control of corruption": "-0.86",
            "judicial effectiveness": "36.30",
            "government integrity": "28.20",
            "property rights": "35.40",
            "tax burden": "70.60",
            "overall economic freedom": "46.30",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "39.6"
        }, {
            indicator: "Myanmar",
            "ISO Country code": "MMR",
            population: "53000000",
            "surface area (km²)": "676575",
            "GINI index": "-",
            "happy planet index": "24.7",
            "human development index": "0.578",
            "world happiness report score": "4.15",
            SEDA: "37.00",
            "GDP\r\n(billions PPP)": "304.7",
            "GDP per capita (PPP)": "5832",
            "GDP growth\r\n(annual %)": "7",
            "health expenditure (% of GDP)": "4.9",
            "health expenditure per person (int. $)": "267",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "0.8",
            "government spending": "84.7",
            "government expenditure (% of GDP)": "22.60",
            "political rights score": "5",
            "civil liberties score": "5",
            "political stability & absence of violence": "-1.08",
            "government effectiveness": "-1.1",
            "regulatory quality": "-0.8",
            "rule of law": "-0.950",
            "control of corruption": "-0.56",
            "judicial effectiveness": "17.60",
            "government integrity": "28.20",
            "property rights": "32.50",
            "tax burden": "86.30",
            "overall economic freedom": "53.90",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "10.2"
        }, {
            indicator: "Namibia",
            "ISO Country code": "NAM",
            population: "2300000",
            "surface area (km²)": "823290",
            "GINI index": "59.7",
            "happy planet index": "21.6",
            "human development index": "0.647",
            "world happiness report score": "4.44",
            SEDA: "39.10",
            "GDP\r\n(billions PPP)": "26.0",
            "GDP per capita (PPP)": "11290",
            "GDP growth\r\n(annual %)": "4.5",
            "health expenditure (% of GDP)": "8.9",
            "health expenditure per person (int. $)": "942",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "25.6",
            "government spending": "50.4",
            "government expenditure (% of GDP)": "40.70",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.65",
            "government effectiveness": "0.2",
            "regulatory quality": "-0.2",
            "rule of law": "0.240",
            "control of corruption": "0.32",
            "judicial effectiveness": "54.20",
            "government integrity": "45.40",
            "property rights": "56.60",
            "tax burden": "63.00",
            "overall economic freedom": "58.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "41.3"
        }, {
            indicator: "Nauru",
            "ISO Country code": "NRU",
            population: "14000",
            "surface area (km²)": "21",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "4.8",
            "health expenditure per person (int. $)": "1064",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.57",
            "government effectiveness": "-0.4",
            "regulatory quality": "-1.1",
            "rule of law": "-0.730",
            "control of corruption": "-0.47",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "10.5"
        }, {
            indicator: "Nepal",
            "ISO Country code": "NPL",
            population: "29000000",
            "surface area (km²)": "143351",
            "GINI index": "32.8",
            "happy planet index": "30.5",
            "human development index": "0.574",
            "world happiness report score": "4.74",
            SEDA: "41.70",
            "GDP\r\n(billions PPP)": "71.5",
            "GDP per capita (PPP)": "2479",
            "GDP growth\r\n(annual %)": "3.4",
            "health expenditure (% of GDP)": "6.1",
            "health expenditure per person (int. $)": "151",
            "education expenditure\r\n(% of GDP)": "4.0",
            "education expenditure per person ($)": "28",
            "school life expectancy (years)": "12",
            unemployment: "3.2",
            "government spending": "87.6",
            "government expenditure (% of GDP)": "20.30",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.66",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.7",
            "rule of law": "-0.680",
            "control of corruption": "-0.75",
            "judicial effectiveness": "36.20",
            "government integrity": "24.60",
            "property rights": "37.50",
            "tax burden": "84.20",
            "overall economic freedom": "54.10",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "29.6"
        }, {
            indicator: "Netherlands",
            "ISO Country code": "NLD",
            population: "17000000",
            "surface area (km²)": "33893",
            "GINI index": "30.3",
            "happy planet index": "35.3",
            "human development index": "0.931",
            "world happiness report score": "7.46",
            SEDA: "80.30",
            "GDP\r\n(billions PPP)": "869.4",
            "GDP per capita (PPP)": "51049",
            "GDP growth\r\n(annual %)": "1.9",
            "health expenditure (% of GDP)": "10.7",
            "health expenditure per person (int. $)": "5313",
            "education expenditure\r\n(% of GDP)": "5.5",
            "education expenditure per person ($)": "2884",
            "school life expectancy (years)": "18",
            unemployment: "6.2",
            "government spending": "39.1",
            "government expenditure (% of GDP)": "45.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.92",
            "government effectiveness": "1.9",
            "regulatory quality": "2.1",
            "rule of law": "1.830",
            "control of corruption": "1.87",
            "judicial effectiveness": "74.10",
            "government integrity": "86.00",
            "property rights": "87.90",
            "tax burden": "52.50",
            "overall economic freedom": "76.20",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "36.0"
        }, {
            indicator: "New Zealand",
            "ISO Country code": "NZL",
            population: "4700000",
            "surface area (km²)": "264537",
            "GINI index": "36.2",
            "happy planet index": "31.3",
            "human development index": "0.917",
            "world happiness report score": "7.33",
            SEDA: "78.60",
            "GDP\r\n(billions PPP)": "177.0",
            "GDP per capita (PPP)": "37294",
            "GDP growth\r\n(annual %)": "3.4",
            "health expenditure (% of GDP)": "9.3",
            "health expenditure per person (int. $)": "3530",
            "education expenditure\r\n(% of GDP)": "6.4",
            "education expenditure per person ($)": "2832",
            "school life expectancy (years)": "19",
            unemployment: "5.2",
            "government spending": "49.5",
            "government expenditure (% of GDP)": "41.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.59",
            "government effectiveness": "1.8",
            "regulatory quality": "2.1",
            "rule of law": "1.920",
            "control of corruption": "2.24",
            "judicial effectiveness": "88.40",
            "government integrity": "95.70",
            "property rights": "95.10",
            "tax burden": "70.50",
            "overall economic freedom": "84.20",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "34.2"
        }, {
            indicator: "Nicaragua",
            "ISO Country code": "NIC",
            population: "6000000",
            "surface area (km²)": "119990",
            "GINI index": "47.1",
            "happy planet index": "38.7",
            "human development index": "0.658",
            "world happiness report score": "6.48",
            SEDA: "43.50",
            "GDP\r\n(billions PPP)": "33.6",
            "GDP per capita (PPP)": "5452",
            "GDP growth\r\n(annual %)": "4.5",
            "health expenditure (% of GDP)": "7.8",
            "health expenditure per person (int. $)": "406",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "5.9",
            "government spending": "80",
            "government expenditure (% of GDP)": "25.80",
            "political rights score": "5",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.05",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.7",
            "rule of law": "-0.640",
            "control of corruption": "-0.87",
            "judicial effectiveness": "19.00",
            "government integrity": "24.20",
            "property rights": "29.80",
            "tax burden": "77.20",
            "overall economic freedom": "58.90",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "45.7"
        }, {
            indicator: "Niger",
            "ISO Country code": "NER",
            population: "21000000",
            "surface area (km²)": "1266700",
            "GINI index": "34.0",
            "happy planet index": "16.8",
            "human development index": "0.354",
            "world happiness report score": "4.62",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "20.1",
            "GDP per capita (PPP)": "1107",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "7.2",
            "health expenditure per person (int. $)": "68",
            "education expenditure\r\n(% of GDP)": "6.7",
            "education expenditure per person ($)": "29",
            "school life expectancy (years)": "5",
            unemployment: "2.6",
            "government spending": "72.9",
            "government expenditure (% of GDP)": "30.10",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-1.3",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.7",
            "rule of law": "-0.680",
            "control of corruption": "-0.65",
            "judicial effectiveness": "32.60",
            "government integrity": "30.40",
            "property rights": "37.40",
            "tax burden": "73.30",
            "overall economic freedom": "49.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "17.0"
        }, {
            indicator: "Nigeria",
            "ISO Country code": "NGA",
            population: "191000000",
            "surface area (km²)": "910768",
            "GINI index": "48.8",
            "happy planet index": "22.2",
            "human development index": "0.532",
            "world happiness report score": "5.32",
            SEDA: "26.50",
            "GDP\r\n(billions PPP)": "1091.2",
            "GDP per capita (PPP)": "5942",
            "GDP growth\r\n(annual %)": "2.7",
            "health expenditure (% of GDP)": "3.6",
            "health expenditure per person (int. $)": "215",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "5",
            "government spending": "96.3",
            "government expenditure (% of GDP)": "11.00",
            "political rights score": "3",
            "civil liberties score": "5",
            "political stability & absence of violence": "-1.94",
            "government effectiveness": "-1.0",
            "regulatory quality": "-0.9",
            "rule of law": "-0.870",
            "control of corruption": "-1.07",
            "judicial effectiveness": "39.60",
            "government integrity": "14.40",
            "property rights": "38.00",
            "tax burden": "84.40",
            "overall economic freedom": "58.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "5.6"
        }, {
            indicator: "Norway",
            "ISO Country code": "NOR",
            population: "5000000",
            "surface area (km²)": "304282",
            "GINI index": "26.8",
            "happy planet index": "36.8",
            "human development index": "0.953",
            "world happiness report score": "7.58",
            SEDA: "85.30",
            "GDP\r\n(billions PPP)": "364.4",
            "GDP per capita (PPP)": "69250",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "10.0",
            "health expenditure per person (int. $)": "6222",
            "education expenditure\r\n(% of GDP)": "7.7",
            "education expenditure per person ($)": "7466",
            "school life expectancy (years)": "18",
            unemployment: "4.8",
            "government spending": "29.2",
            "government expenditure (% of GDP)": "48.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.15",
            "government effectiveness": "2.0",
            "regulatory quality": "1.8",
            "rule of law": "2.020",
            "control of corruption": "2.24",
            "judicial effectiveness": "86.00",
            "government integrity": "93.60",
            "property rights": "86.40",
            "tax burden": "56.40",
            "overall economic freedom": "74.30",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "39.6"
        }, {
            indicator: "Oman",
            "ISO Country code": "OMN",
            population: "4000000",
            "surface area (km²)": "309500",
            "GINI index": "-",
            "happy planet index": "21.1",
            "human development index": "0.821",
            "world happiness report score": "-",
            SEDA: "62.10",
            "GDP\r\n(billions PPP)": "184.8",
            "GDP per capita (PPP)": "46698",
            "GDP growth\r\n(annual %)": "4.1",
            "health expenditure (% of GDP)": "2.7",
            "health expenditure per person (int. $)": "1636",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "17.5",
            "government spending": "25",
            "government expenditure (% of GDP)": "50.00",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.74",
            "government effectiveness": "0.2",
            "regulatory quality": "0.4",
            "rule of law": "0.430",
            "control of corruption": "0.25",
            "judicial effectiveness": "57.40",
            "government integrity": "51.50",
            "property rights": "59.50",
            "tax burden": "98.50",
            "overall economic freedom": "61.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "1.2"
        }, {
            indicator: "Pakistan",
            "ISO Country code": "PAK",
            population: "197000000",
            "surface area (km²)": "770875",
            "GINI index": "30.7",
            "happy planet index": "31.5",
            "human development index": "0.562",
            "world happiness report score": "5.83",
            SEDA: "27.90",
            "GDP\r\n(billions PPP)": "988.2",
            "GDP per capita (PPP)": "5106",
            "GDP growth\r\n(annual %)": "4.2",
            "health expenditure (% of GDP)": "2.7",
            "health expenditure per person (int. $)": "134",
            "education expenditure\r\n(% of GDP)": "2.5",
            "education expenditure per person ($)": "32",
            "school life expectancy (years)": "8",
            unemployment: "5.9",
            "government spending": "88.2",
            "government expenditure (% of GDP)": "19.80",
            "political rights score": "4",
            "civil liberties score": "5",
            "political stability & absence of violence": "-2.4",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.6",
            "rule of law": "-0.720",
            "control of corruption": "-0.78",
            "judicial effectiveness": "34.00",
            "government integrity": "27.30",
            "property rights": "36.00",
            "tax burden": "78.50",
            "overall economic freedom": "54.40",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "20.6"
        }, {
            indicator: "Palau",
            "ISO Country code": "PLW",
            population: "22000",
            "surface area (km²)": "459",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.798",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "10.6",
            "health expenditure per person (int. $)": "1611",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "17",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.94",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.6",
            "rule of law": "0.280",
            "control of corruption": "-0.47",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "12.5"
        }, {
            indicator: "Panama",
            "ISO Country code": "PAN",
            population: "4000000",
            "surface area (km²)": "74340",
            "GINI index": "50.7",
            "happy planet index": "39.5",
            "human development index": "0.789",
            "world happiness report score": "6.57",
            SEDA: "54.5",
            "GDP\r\n(billions PPP)": "92.9",
            "GDP per capita (PPP)": "23024",
            "GDP growth\r\n(annual %)": "5.8",
            "health expenditure (% of GDP)": "7.0",
            "health expenditure per person (int. $)": "1543",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "5.8",
            "government spending": "84.1",
            "government expenditure (% of GDP)": "23.10",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.39",
            "government effectiveness": "0.0",
            "regulatory quality": "0.4",
            "rule of law": "0.040",
            "control of corruption": "-0.54",
            "judicial effectiveness": "29.40",
            "government integrity": "38.80",
            "property rights": "60.90",
            "tax burden": "85.00",
            "overall economic freedom": "67.00",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "18.3"
        }, {
            indicator: "Papua New Guinea",
            "ISO Country code": "PNG",
            population: "8000000",
            "surface area (km²)": "452860",
            "GINI index": "50.9",
            "happy planet index": "-",
            "human development index": "0.544",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "28.0",
            "GDP per capita (PPP)": "3541",
            "GDP growth\r\n(annual %)": "9",
            "health expenditure (% of GDP)": "3.8",
            "health expenditure per person (int. $)": "99",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "2.5",
            "government spending": "82",
            "government expenditure (% of GDP)": "24.50",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.58",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.7",
            "rule of law": "-0.820",
            "control of corruption": "-0.90",
            "judicial effectiveness": "55.10",
            "government integrity": "33.10",
            "property rights": "38.00",
            "tax burden": "71.10",
            "overall economic freedom": "55.70",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "0.0"
        }, {
            indicator: "Paraguay",
            "ISO Country code": "PRY",
            population: "7000000",
            "surface area (km²)": "397302",
            "GINI index": "51.7",
            "happy planet index": "23.3",
            "human development index": "0.702",
            "world happiness report score": "-",
            SEDA: "46.20",
            "GDP\r\n(billions PPP)": "64.4",
            "GDP per capita (PPP)": "9396",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "7.8",
            "health expenditure per person (int. $)": "724",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "5.4",
            "government spending": "82.2",
            "government expenditure (% of GDP)": "24.40",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.12",
            "government effectiveness": "-0.8",
            "regulatory quality": "-0.2",
            "rule of law": "-0.650",
            "control of corruption": "-0.72",
            "judicial effectiveness": "28.20",
            "government integrity": "28.30",
            "property rights": "38.30",
            "tax burden": "96.10",
            "overall economic freedom": "62.10",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "13.8"
        }, {
            indicator: "Peru",
            "ISO Country code": "PER",
            population: "32000000",
            "surface area (km²)": "1279996",
            "GINI index": "45.3",
            "happy planet index": "34.6",
            "human development index": "0.750",
            "world happiness report score": "5.71",
            SEDA: "49.30",
            "GDP\r\n(billions PPP)": "406.2",
            "GDP per capita (PPP)": "12903",
            "GDP growth\r\n(annual %)": "3.3",
            "health expenditure (% of GDP)": "5.3",
            "health expenditure per person (int. $)": "671",
            "education expenditure\r\n(% of GDP)": "3.7",
            "education expenditure per person ($)": "240",
            "school life expectancy (years)": "13",
            unemployment: "4.9",
            "government spending": "85.6",
            "government expenditure (% of GDP)": "21.90",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "-0.26",
            "government effectiveness": "-0.1",
            "regulatory quality": "0.4",
            "rule of law": "-0.500",
            "control of corruption": "-0.50",
            "judicial effectiveness": "33.50",
            "government integrity": "36.60",
            "property rights": "56.90",
            "tax burden": "80.60",
            "overall economic freedom": "68.70",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "27.7"
        }, {
            indicator: "Philippines",
            "ISO Country code": "PHL",
            population: "105000000",
            "surface area (km²)": "298170",
            "GINI index": "44.4",
            "happy planet index": "35.0",
            "human development index": "0.699",
            "world happiness report score": "5.59",
            SEDA: "44.50",
            "GDP\r\n(billions PPP)": "805.2",
            "GDP per capita (PPP)": "7728",
            "GDP growth\r\n(annual %)": "5.8",
            "health expenditure (% of GDP)": "4.4",
            "health expenditure per person (int. $)": "323",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "5.9",
            "government spending": "89.3",
            "government expenditure (% of GDP)": "18.90",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-1.24",
            "government effectiveness": "-0.1",
            "regulatory quality": "0.0",
            "rule of law": "-0.410",
            "control of corruption": "-0.48",
            "judicial effectiveness": "38.20",
            "government integrity": "34.40",
            "property rights": "45.00",
            "tax burden": "78.90",
            "overall economic freedom": "65.00",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "29.5"
        }, {
            indicator: "Poland",
            "ISO Country code": "POL",
            population: "38000000",
            "surface area (km²)": "304255",
            "GINI index": "30.8",
            "happy planet index": "27.5",
            "human development index": "0.865",
            "world happiness report score": "6.20",
            SEDA: "67.70",
            "GDP\r\n(billions PPP)": "1054.1",
            "GDP per capita (PPP)": "27764",
            "GDP growth\r\n(annual %)": "3.6",
            "health expenditure (% of GDP)": "6.3",
            "health expenditure per person (int. $)": "1704",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "705",
            "school life expectancy (years)": "16",
            unemployment: "6.2",
            "government spending": "47.8",
            "government expenditure (% of GDP)": "41.70",
            "political rights score": "1",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.52",
            "government effectiveness": "0.6",
            "regulatory quality": "0.9",
            "rule of law": "0.470",
            "control of corruption": "0.73",
            "judicial effectiveness": "56.60",
            "government integrity": "50.90",
            "property rights": "61.80",
            "tax burden": "75.90",
            "overall economic freedom": "68.50",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "28.0"
        }, {
            indicator: "Portugal",
            "ISO Country code": "PRT",
            population: "10000000",
            "surface area (km²)": "91470",
            "GINI index": "33.9",
            "happy planet index": "24.8",
            "human development index": "0.847",
            "world happiness report score": "5.71",
            SEDA: "70.80",
            "GDP\r\n(billions PPP)": "298.7",
            "GDP per capita (PPP)": "28933",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "9.0",
            "health expenditure per person (int. $)": "2661",
            "education expenditure\r\n(% of GDP)": "5.1",
            "education expenditure per person ($)": "1131",
            "school life expectancy (years)": "17",
            unemployment: "11.2",
            "government spending": "29.8",
            "government expenditure (% of GDP)": "48.40",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.08",
            "government effectiveness": "1.3",
            "regulatory quality": "0.9",
            "rule of law": "1.130",
            "control of corruption": "0.87",
            "judicial effectiveness": "70.10",
            "government integrity": "56.80",
            "property rights": "69.20",
            "tax burden": "59.80",
            "overall economic freedom": "63.40",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "34.8"
        }, {
            indicator: "Qatar",
            "ISO Country code": "QAT",
            population: "2600000",
            "surface area (km²)": "11586",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.856",
            "world happiness report score": "-",
            SEDA: "70.80",
            "GDP\r\n(billions PPP)": "329.2",
            "GDP per capita (PPP)": "127660",
            "GDP growth\r\n(annual %)": "3.3",
            "health expenditure (% of GDP)": "2.7",
            "health expenditure per person (int. $)": "3900",
            "education expenditure\r\n(% of GDP)": "3.6",
            "education expenditure per person ($)": "3131",
            "school life expectancy (years)": "13",
            unemployment: "0.2",
            "government spending": "60.2",
            "government expenditure (% of GDP)": "36.40",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.55",
            "government effectiveness": "0.7",
            "regulatory quality": "0.4",
            "rule of law": "0.720",
            "control of corruption": "0.73",
            "judicial effectiveness": "59.80",
            "government integrity": "71.60",
            "property rights": "70.30",
            "tax burden": "99.60",
            "overall economic freedom": "72.60",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "0.0"
        }, {
            indicator: "Romania",
            "ISO Country code": "ROU",
            population: "20000000",
            "surface area (km²)": "229891",
            "GINI index": "27.3",
            "happy planet index": "28.8",
            "human development index": "0.811",
            "world happiness report score": "6.09",
            SEDA: "60.00",
            "GDP\r\n(billions PPP)": "441.6",
            "GDP per capita (PPP)": "22348",
            "GDP growth\r\n(annual %)": "3.7",
            "health expenditure (% of GDP)": "10.6",
            "health expenditure per person (int. $)": "1090",
            "education expenditure\r\n(% of GDP)": "3.1",
            "education expenditure per person ($)": "313",
            "school life expectancy (years)": "15",
            unemployment: "6.4",
            "government spending": "66.9",
            "government expenditure (% of GDP)": "33.20",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.06",
            "government effectiveness": "-0.2",
            "regulatory quality": "0.5",
            "rule of law": "0.390",
            "control of corruption": "-0.03",
            "judicial effectiveness": "59.70",
            "government integrity": "40.00",
            "property rights": "61.00",
            "tax burden": "87.30",
            "overall economic freedom": "69.40",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "20.7"
        }, {
            indicator: "Russia",
            "ISO Country code": "RUS",
            population: "144000000",
            "surface area (km²)": "16377742",
            "GINI index": "41.2",
            "happy planet index": "18.7",
            "human development index": "0.816",
            "world happiness report score": "5.58",
            SEDA: "57.00",
            "GDP\r\n(billions PPP)": "3799.7",
            "GDP per capita (PPP)": "26490",
            "GDP growth\r\n(annual %)": "-3.7",
            "health expenditure (% of GDP)": "7.0",
            "health expenditure per person (int. $)": "1414",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "5.7",
            "government spending": "62.5",
            "government expenditure (% of GDP)": "35.30",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.67",
            "government effectiveness": "-0.1",
            "regulatory quality": "-0.5",
            "rule of law": "-0.790",
            "control of corruption": "-0.89",
            "judicial effectiveness": "46.90",
            "government integrity": "38.10",
            "property rights": "48.70",
            "tax burden": "85.80",
            "overall economic freedom": "58.20",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "15.8"
        }, {
            indicator: "Rwanda",
            "ISO Country code": "RWA",
            population: "12000000",
            "surface area (km²)": "24668",
            "GINI index": "50.4",
            "happy planet index": "19.6",
            "human development index": "0.524",
            "world happiness report score": "-",
            SEDA: "38.00",
            "GDP\r\n(billions PPP)": "22.8",
            "GDP per capita (PPP)": "1977",
            "GDP growth\r\n(annual %)": "6.9",
            "health expenditure (% of GDP)": "3.8",
            "health expenditure per person (int. $)": "143",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "2.5",
            "government spending": "77.7",
            "government expenditure (% of GDP)": "27.20",
            "political rights score": "6",
            "civil liberties score": "6",
            "political stability & absence of violence": "0.04",
            "government effectiveness": "0.3",
            "regulatory quality": "0.2",
            "rule of law": "0.130",
            "control of corruption": "0.63",
            "judicial effectiveness": "79.60",
            "government integrity": "61.20",
            "property rights": "69.80",
            "tax burden": "75.80",
            "overall economic freedom": "69.10",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "61.3"
        }, {
            indicator: "Saint Kitts and Nevis",
            "ISO Country code": "KNA",
            population: "55000",
            "surface area (km²)": "261",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.778",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "5.6",
            "health expenditure per person (int. $)": "1443",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.64",
            "government effectiveness": "0.6",
            "regulatory quality": "0.6",
            "rule of law": "0.530",
            "control of corruption": "0.51",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "13.3"
        }, {
            indicator: "Saint Lucia",
            "ISO Country code": "LCA",
            population: "200000",
            "surface area (km²)": "606",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.747",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "2.1",
            "GDP per capita (PPP)": "11783",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "681",
            "education expenditure\r\n(% of GDP)": "4.3",
            "education expenditure per person ($)": "381",
            "school life expectancy (years)": "-",
            unemployment: "19.8",
            "government spending": "72.4",
            "government expenditure (% of GDP)": "30.30",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.15",
            "government effectiveness": "0.3",
            "regulatory quality": "0.3",
            "rule of law": "0.600",
            "control of corruption": "0.59",
            "judicial effectiveness": "69.20",
            "government integrity": "50.90",
            "property rights": "67.90",
            "tax burden": "75.50",
            "overall economic freedom": "67.60",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "16.7"
        }, {
            indicator: "Saint Vincent and the Grenadines",
            "ISO Country code": "VCT",
            population: "100000",
            "surface area (km²)": "389",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.723",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1.2",
            "GDP per capita (PPP)": "11271",
            "GDP growth\r\n(annual %)": "1.6",
            "health expenditure (% of GDP)": "4.2",
            "health expenditure per person (int. $)": "470",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "19.3",
            "government spending": "72.7",
            "government expenditure (% of GDP)": "30.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.9",
            "government effectiveness": "0.3",
            "regulatory quality": "0.3",
            "rule of law": "0.430",
            "control of corruption": "0.72",
            "judicial effectiveness": "69.20",
            "government integrity": "51.50",
            "property rights": "36.70",
            "tax burden": "72.70",
            "overall economic freedom": "67.70",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "13.0"
        }, {
            indicator: "Samoa",
            "ISO Country code": "WSM",
            population: "200000",
            "surface area (km²)": "2821",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.713",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1.1",
            "GDP per capita (PPP)": "5553",
            "GDP growth\r\n(annual %)": "1.7",
            "health expenditure (% of GDP)": "7.8",
            "health expenditure per person (int. $)": "336",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "7.2",
            "government spending": "55.1",
            "government expenditure (% of GDP)": "38.70",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "1.2",
            "government effectiveness": "0.6",
            "regulatory quality": "-0.1",
            "rule of law": "0.870",
            "control of corruption": "0.66",
            "judicial effectiveness": "38.80",
            "government integrity": "40.10",
            "property rights": "53.10",
            "tax burden": "79.90",
            "overall economic freedom": "61.50",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "10.0"
        }, {
            indicator: "San Marino",
            "ISO Country code": "SMR",
            population: "33000",
            "surface area (km²)": "61",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "5.3",
            "health expenditure per person (int. $)": "3675",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.94",
            "government effectiveness": "-",
            "regulatory quality": "-",
            "rule of law": "-",
            "control of corruption": "-",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "26.7"
        }, {
            indicator: "Sao Tome and Principe",
            "ISO Country code": "STP",
            population: "200000",
            "surface area (km²)": "964",
            "GINI index": "30.8",
            "happy planet index": "-",
            "human development index": "0.589",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.6",
            "GDP per capita (PPP)": "3072",
            "GDP growth\r\n(annual %)": "4",
            "health expenditure (% of GDP)": "4.4",
            "health expenditure per person (int. $)": "308",
            "education expenditure\r\n(% of GDP)": "3.7",
            "education expenditure per person ($)": "68",
            "school life expectancy (years)": "13",
            unemployment: "13.6",
            "government spending": "69.5",
            "government expenditure (% of GDP)": "31.90",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.22",
            "government effectiveness": "-0.8",
            "regulatory quality": "-0.8",
            "rule of law": "-0.680",
            "control of corruption": "0.14",
            "judicial effectiveness": "28.20",
            "government integrity": "39.40",
            "property rights": "38.00",
            "tax burden": "82.00",
            "overall economic freedom": "53.60",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "18.2"
        }, {
            indicator: "Saudi Arabia",
            "ISO Country code": "SAU",
            population: "33000000",
            "surface area (km²)": "2149690",
            "GINI index": "45.9",
            "happy planet index": "-",
            "human development index": "0.853",
            "world happiness report score": "6.29",
            SEDA: "62.60",
            "GDP\r\n(billions PPP)": "1750.9",
            "GDP per capita (PPP)": "55158",
            "GDP growth\r\n(annual %)": "3.4",
            "health expenditure (% of GDP)": "6.3",
            "health expenditure per person (int. $)": "3121",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "16",
            unemployment: "5.5",
            "government spending": "52",
            "government expenditure (% of GDP)": "40.00",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.62",
            "government effectiveness": "0.3",
            "regulatory quality": "0.0",
            "rule of law": "0.100",
            "control of corruption": "0.36",
            "judicial effectiveness": "60.20",
            "government integrity": "49.90",
            "property rights": "53.10",
            "tax burden": "99.70",
            "overall economic freedom": "59.60",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "19.9"
        }, {
            indicator: "Senegal",
            "ISO Country code": "SEN",
            population: "16000000",
            "surface area (km²)": "192530",
            "GINI index": "40.3",
            "happy planet index": "21.9",
            "human development index": "0.505",
            "world happiness report score": "4.68",
            SEDA: "38.40",
            "GDP\r\n(billions PPP)": "39.7",
            "GDP per capita (PPP)": "2577",
            "GDP growth\r\n(annual %)": "6.5",
            "health expenditure (% of GDP)": "9.0",
            "health expenditure per person (int. $)": "97",
            "education expenditure\r\n(% of GDP)": "7.4",
            "education expenditure per person ($)": "78",
            "school life expectancy (years)": "9",
            unemployment: "9.5",
            "government spending": "72.7",
            "government expenditure (% of GDP)": "30.20",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "-0.04",
            "government effectiveness": "-0.3",
            "regulatory quality": "-0.2",
            "rule of law": "-0.150",
            "control of corruption": "-0.09",
            "judicial effectiveness": "40.40",
            "government integrity": "42.60",
            "property rights": "41.30",
            "tax burden": "68.50",
            "overall economic freedom": "55.70",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "41.8"
        }, {
            indicator: "Serbia",
            "ISO Country code": "SRB",
            population: "7000000",
            "surface area (km²)": "77474",
            "GINI index": "38.7",
            "happy planet index": "29.0",
            "human development index": "0.787",
            "world happiness report score": "5.12",
            SEDA: "54.90",
            "GDP\r\n(billions PPP)": "101.8",
            "GDP per capita (PPP)": "14493",
            "GDP growth\r\n(annual %)": "0.7",
            "health expenditure (% of GDP)": "9.4",
            "health expenditure per person (int. $)": "1324",
            "education expenditure\r\n(% of GDP)": "4.2",
            "education expenditure per person ($)": "259",
            "school life expectancy (years)": "15",
            unemployment: "16.5",
            "government spending": "40.6",
            "government expenditure (% of GDP)": "44.50",
            "political rights score": "3",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.1",
            "government effectiveness": "0.2",
            "regulatory quality": "0.0",
            "rule of law": "-0.190",
            "control of corruption": "-0.37",
            "judicial effectiveness": "48.20",
            "government integrity": "36.50",
            "property rights": "46.20",
            "tax burden": "83.50",
            "overall economic freedom": "62.50",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "34.4"
        }, {
            indicator: "Seychelles",
            "ISO Country code": "SYC",
            population: "100000",
            "surface area (km²)": "455",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.797",
            "world happiness report score": "-",
            SEDA: "59.10",
            "GDP\r\n(billions PPP)": "2.6",
            "GDP per capita (PPP)": "27602",
            "GDP growth\r\n(annual %)": "4.4",
            "health expenditure (% of GDP)": "3.4",
            "health expenditure per person (int. $)": "867",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "-",
            "government spending": "63",
            "government expenditure (% of GDP)": "35.10",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.68",
            "government effectiveness": "0.4",
            "regulatory quality": "-0.2",
            "rule of law": "0.100",
            "control of corruption": "0.68",
            "judicial effectiveness": "38.80",
            "government integrity": "38.80",
            "property rights": "60.70",
            "tax burden": "73.40",
            "overall economic freedom": "61.60",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "21.2"
        }, {
            indicator: "Sierra Leone",
            "ISO Country code": "SLE",
            population: "8000000",
            "surface area (km²)": "71620",
            "GINI index": "34.0",
            "happy planet index": "15.3",
            "human development index": "0.419",
            "world happiness report score": "4.09",
            SEDA: "32.90",
            "GDP\r\n(billions PPP)": "10.8",
            "GDP per capita (PPP)": "1672",
            "GDP growth\r\n(annual %)": "-21.5",
            "health expenditure (% of GDP)": "18.3",
            "health expenditure per person (int. $)": "256",
            "education expenditure\r\n(% of GDP)": "2.7",
            "education expenditure per person ($)": "19",
            "school life expectancy (years)": "-",
            unemployment: "3",
            "government spending": "89.8",
            "government expenditure (% of GDP)": "18.40",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.03",
            "government effectiveness": "-1.2",
            "regulatory quality": "-0.9",
            "rule of law": "-0.79",
            "control of corruption": "-0.59",
            "judicial effectiveness": "29.60",
            "government integrity": "22.00",
            "property rights": "33.60",
            "tax burden": "79.90",
            "overall economic freedom": "51.80",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "12.4"
        }, {
            indicator: "Singapore",
            "ISO Country code": "SGP",
            population: "6000000",
            "surface area (km²)": "709",
            "GINI index": "45.9",
            "happy planet index": "-",
            "human development index": "0.932",
            "world happiness report score": "6.38",
            SEDA: "81.80",
            "GDP\r\n(billions PPP)": "492.6",
            "GDP per capita (PPP)": "87855",
            "GDP growth\r\n(annual %)": "2",
            "health expenditure (% of GDP)": "4.3",
            "health expenditure per person (int. $)": "3681",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "1.8",
            "government spending": "90.6",
            "government expenditure (% of GDP)": "17.70",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "1.59",
            "government effectiveness": "2.2",
            "regulatory quality": "2.1",
            "rule of law": "1.820",
            "control of corruption": "2.13",
            "judicial effectiveness": "90.90",
            "government integrity": "91.20",
            "property rights": "98.40",
            "tax burden": "90.40",
            "overall economic freedom": "88.80",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "23.0"
        }, {
            indicator: "Slovakia",
            "ISO Country code": "SVK",
            population: "5000000",
            "surface area (km²)": "48105",
            "GINI index": "23.7",
            "happy planet index": "28.2",
            "human development index": "0.855",
            "world happiness report score": "6.37",
            SEDA: "67.40",
            "GDP\r\n(billions PPP)": "170.1",
            "GDP per capita (PPP)": "31339",
            "GDP growth\r\n(annual %)": "3.6",
            "health expenditure (% of GDP)": "6.9",
            "health expenditure per person (int. $)": "2062",
            "education expenditure\r\n(% of GDP)": "4.2",
            "education expenditure per person ($)": "788",
            "school life expectancy (years)": "15",
            unemployment: "10",
            "government spending": "44.3",
            "government expenditure (% of GDP)": "43.10",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.88",
            "government effectiveness": "0.8",
            "regulatory quality": "0.8",
            "rule of law": "0.570",
            "control of corruption": "0.22",
            "judicial effectiveness": "38.80",
            "government integrity": "38.20",
            "property rights": "68.20",
            "tax burden": "78.90",
            "overall economic freedom": "65.30",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "20.0"
        }, {
            indicator: "Slovenia",
            "ISO Country code": "SVN",
            population: "2100000",
            "surface area (km²)": "20151",
            "GINI index": "24.4",
            "happy planet index": "24.6",
            "human development index": "0.896",
            "world happiness report score": "6.17",
            SEDA: "72.60",
            "GDP\r\n(billions PPP)": "66.2",
            "GDP per capita (PPP)": "32085",
            "GDP growth\r\n(annual %)": "2.9",
            "health expenditure (% of GDP)": "8.5",
            "health expenditure per person (int. $)": "2734",
            "education expenditure\r\n(% of GDP)": "5.3",
            "education expenditure per person ($)": "1281",
            "school life expectancy (years)": "17",
            unemployment: "8.7",
            "government spending": "31.2",
            "government expenditure (% of GDP)": "47.90",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.89",
            "government effectiveness": "1.2",
            "regulatory quality": "0.6",
            "rule of law": "1.020",
            "control of corruption": "0.81",
            "judicial effectiveness": "57.70",
            "government integrity": "52.10",
            "property rights": "76.60",
            "tax burden": "58.70",
            "overall economic freedom": "64.80",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "36.7"
        }, {
            indicator: "Solomon Islands",
            "ISO Country code": "SLB",
            population: "600000",
            "surface area (km²)": "27986",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.546",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1.2",
            "GDP per capita (PPP)": "1973",
            "GDP growth\r\n(annual %)": "3.3",
            "health expenditure (% of GDP)": "8.0",
            "health expenditure per person (int. $)": "173",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "31.4",
            "government spending": "35.6",
            "government expenditure (% of GDP)": "46.30",
            "political rights score": "3",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.21",
            "government effectiveness": "-1.0",
            "regulatory quality": "-0.8",
            "rule of law": "-0.210",
            "control of corruption": "0.11",
            "judicial effectiveness": "57.30",
            "government integrity": "36.80",
            "property rights": "49.40",
            "tax burden": "65.50",
            "overall economic freedom": "57.50",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "2.0"
        }, {
            indicator: "Somalia",
            "ISO Country code": "SOM",
            population: "15000000",
            "surface area (km²)": "627337",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "5.9",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "3.7",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "6.6",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-2.33",
            "government effectiveness": "-2.2",
            "regulatory quality": "-2.3",
            "rule of law": "-2.310",
            "control of corruption": "-1.72",
            "judicial effectiveness": "25.40",
            "government integrity": "17.80",
            "property rights": "33.10",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "24.4"
        }, {
            indicator: "South Africa",
            "ISO Country code": "ZAF",
            population: "57000000",
            "surface area (km²)": "1214470",
            "GINI index": "62.5",
            "happy planet index": "15.9",
            "human development index": "0.699",
            "world happiness report score": "4.51",
            SEDA: "38.5",
            "GDP\r\n(billions PPP)": "739.4",
            "GDP per capita (PPP)": "13225",
            "GDP growth\r\n(annual %)": "1.3",
            "health expenditure (% of GDP)": "8.2",
            "health expenditure per person (int. $)": "1086",
            "education expenditure\r\n(% of GDP)": "6.0",
            "education expenditure per person ($)": "389",
            "school life expectancy (years)": "13",
            unemployment: "25.9",
            "government spending": "68.1",
            "government expenditure (% of GDP)": "32.60",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "-0.27",
            "government effectiveness": "0.3",
            "regulatory quality": "0.2",
            "rule of law": "-0.010",
            "control of corruption": "-0.01",
            "judicial effectiveness": "65.90",
            "government integrity": "45.40",
            "property rights": "67.70",
            "tax burden": "62.50",
            "overall economic freedom": "63.00",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "42.0"
        }, {
            indicator: "South Sudan",
            "ISO Country code": "SSD",
            population: "13000000",
            "surface area (km²)": "644329",
            "GINI index": "46.0",
            "happy planet index": "-",
            "human development index": "0.388",
            "world happiness report score": "2.82",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "2.5",
            "health expenditure per person (int. $)": "71",
            "education expenditure\r\n(% of GDP)": "1.7",
            "education expenditure per person ($)": "22",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-2.46",
            "government effectiveness": "-2.5",
            "regulatory quality": "-1.9",
            "rule of law": "-1.940",
            "control of corruption": "-1.71",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "28.5"
        }, {
            indicator: "Spain",
            "ISO Country code": "ESP",
            population: "47000000",
            "surface area (km²)": "498980",
            "GINI index": "35.9",
            "happy planet index": "36.0",
            "human development index": "0.891",
            "world happiness report score": "6.23",
            SEDA: "71.80",
            "GDP\r\n(billions PPP)": "1686.9",
            "GDP per capita (PPP)": "36416",
            "GDP growth\r\n(annual %)": "3.2",
            "health expenditure (% of GDP)": "9.2",
            "health expenditure per person (int. $)": "3183",
            "education expenditure\r\n(% of GDP)": "4.3",
            "education expenditure per person ($)": "1268",
            "school life expectancy (years)": "18",
            unemployment: "19.4",
            "government spending": "42.8",
            "government expenditure (% of GDP)": "43.70",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.27",
            "government effectiveness": "1.0",
            "regulatory quality": "0.9",
            "rule of law": "1.010",
            "control of corruption": "0.49",
            "judicial effectiveness": "62.00",
            "government integrity": "51.50",
            "property rights": "73.10",
            "tax burden": "62.00",
            "overall economic freedom": "65.10",
            "financial freedom": "70.00",
            "women MPs (% of all MPs)": "39.1"
        }, {
            indicator: "Sri Lanka",
            "ISO Country code": "LKA",
            population: "21000000",
            "surface area (km²)": "64630",
            "GINI index": "39.2",
            "happy planet index": "33.8",
            "human development index": "0.770",
            "world happiness report score": "4.33",
            SEDA: "49.30",
            "GDP\r\n(billions PPP)": "260.6",
            "GDP per capita (PPP)": "12262",
            "GDP growth\r\n(annual %)": "5.2",
            "health expenditure (% of GDP)": "3.0",
            "health expenditure per person (int. $)": "353",
            "education expenditure\r\n(% of GDP)": "1.9",
            "education expenditure per person ($)": "74",
            "school life expectancy (years)": "14",
            unemployment: "5",
            "government spending": "89.3",
            "government expenditure (% of GDP)": "18.90",
            "political rights score": "3",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.06",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.1",
            "rule of law": "0.060",
            "control of corruption": "-0.45",
            "judicial effectiveness": "52.00",
            "government integrity": "30.70",
            "property rights": "46.50",
            "tax burden": "84.90",
            "overall economic freedom": "57.80",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "5.8"
        }, {
            indicator: "Sudan",
            "ISO Country code": "SDN",
            population: "41000000",
            "surface area (km²)": "1861484",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.502",
            "world happiness report score": "-",
            SEDA: "26.50",
            "GDP\r\n(billions PPP)": "176.1",
            "GDP per capita (PPP)": "4447",
            "GDP growth\r\n(annual %)": "3.5",
            "health expenditure (% of GDP)": "6.3",
            "health expenditure per person (int. $)": "277",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "7",
            unemployment: "13.3",
            "government spending": "95.3",
            "government expenditure (% of GDP)": "12.50",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-2.01",
            "government effectiveness": "-1.4",
            "regulatory quality": "-0.6",
            "rule of law": "-1.110",
            "control of corruption": "-1.54",
            "judicial effectiveness": "21.40",
            "government integrity": "21.20",
            "property rights": "27.80",
            "tax burden": "85.90",
            "overall economic freedom": "49.40",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "30.5"
        }, {
            indicator: "Suriname",
            "ISO Country code": "SUR",
            population: "600000",
            "surface area (km²)": "156000",
            "GINI index": "-",
            "happy planet index": "25.4",
            "human development index": "0.720",
            "world happiness report score": "-",
            SEDA: "52.70",
            "GDP\r\n(billions PPP)": "7.9",
            "GDP per capita (PPP)": "13988",
            "GDP growth\r\n(annual %)": "0.1",
            "health expenditure (% of GDP)": "6.5",
            "health expenditure per person (int. $)": "1017",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "10",
            "government spending": "76.4",
            "government expenditure (% of GDP)": "28.10",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.14",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.5",
            "rule of law": "-0.150",
            "control of corruption": "-0.17",
            "judicial effectiveness": "21.40",
            "government integrity": "39.90",
            "property rights": "39.70",
            "tax burden": "71.40",
            "overall economic freedom": "48.10",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "25.5"
        }, {
            indicator: "Sweden",
            "ISO Country code": "SWE",
            population: "10000000",
            "surface area (km²)": "410335",
            "GINI index": "24.9",
            "happy planet index": "28.0",
            "human development index": "0.933",
            "world happiness report score": "7.29",
            SEDA: "81.90",
            "GDP\r\n(billions PPP)": "498.1",
            "GDP per capita (PPP)": "49836",
            "GDP growth\r\n(annual %)": "4.1",
            "health expenditure (% of GDP)": "11.0",
            "health expenditure per person (int. $)": "5299",
            "education expenditure\r\n(% of GDP)": "7.7",
            "education expenditure per person ($)": "4546",
            "school life expectancy (years)": "18",
            unemployment: "7.1",
            "government spending": "23.2",
            "government expenditure (% of GDP)": "50.60",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.98",
            "government effectiveness": "1.8",
            "regulatory quality": "1.8",
            "rule of law": "1.940",
            "control of corruption": "2.14",
            "judicial effectiveness": "88.20",
            "government integrity": "92.90",
            "property rights": "92.60",
            "tax burden": "43.90",
            "overall economic freedom": "76.30",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "43.6"
        }, {
            indicator: "Switzerland",
            "ISO Country code": "CHE",
            population: "8000000",
            "surface area (km²)": "39997",
            "GINI index": "29.5",
            "happy planet index": "34.3",
            "human development index": "0.944",
            "world happiness report score": "7.47",
            SEDA: "83.80",
            "GDP\r\n(billions PPP)": "496.0",
            "GDP per capita (PPP)": "59561",
            "GDP growth\r\n(annual %)": "0.9",
            "health expenditure (% of GDP)": "12.1",
            "health expenditure per person (int. $)": "7583",
            "education expenditure\r\n(% of GDP)": "5.1",
            "education expenditure per person ($)": "4375",
            "school life expectancy (years)": "16",
            unemployment: "4.6",
            "government spending": "65.4",
            "government expenditure (% of GDP)": "34.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.21",
            "government effectiveness": "2.1",
            "regulatory quality": "1.9",
            "rule of law": "1.930",
            "control of corruption": "1.99",
            "judicial effectiveness": "82.10",
            "government integrity": "82.80",
            "property rights": "84.20",
            "tax burden": "70.50",
            "overall economic freedom": "81.70",
            "financial freedom": "90.00",
            "women MPs (% of all MPs)": "32.5"
        }, {
            indicator: "Syria",
            "ISO Country code": "SYR",
            population: "18000000",
            "surface area (km²)": "183630",
            "GINI index": "-",
            "happy planet index": "19.1",
            "human development index": "0.536",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "21.0",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-4.8",
            "health expenditure (% of GDP)": "-",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "9",
            unemployment: "14.3",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-2.63",
            "government effectiveness": "-1.8",
            "regulatory quality": "-1.8",
            "rule of law": "-2.090",
            "control of corruption": "-1.56",
            "judicial effectiveness": "22.10",
            "government integrity": "23.10",
            "property rights": "36.70",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "13.2"
        }, {
            indicator: "Taiwan",
            "ISO Country code": "TWN",
            population: "24000000",
            "surface area (km²)": "32260",
            "GINI index": "33.6",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "6.36",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "1132.1",
            "GDP per capita (PPP)": "48095",
            "GDP growth\r\n(annual %)": "0.7",
            "health expenditure (% of GDP)": "6.9",
            "health expenditure per person (int. $)": "-",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "4",
            "government spending": "90.4",
            "government expenditure (% of GDP)": "17.80",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.89",
            "government effectiveness": "1.27",
            "regulatory quality": "1.37",
            "rule of law": "1.140",
            "control of corruption": "0.96",
            "judicial effectiveness": "69.20",
            "government integrity": "70.90",
            "property rights": "84.30",
            "tax burden": "76.10",
            "overall economic freedom": "76.60",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "-"
        }, {
            indicator: "Tajikistan",
            "ISO Country code": "TJK",
            population: "9000000",
            "surface area (km²)": "141510",
            "GINI index": "32.6",
            "happy planet index": "34.2",
            "human development index": "0.650",
            "world happiness report score": "5.83",
            SEDA: "41.30",
            "GDP\r\n(billions PPP)": "26.0",
            "GDP per capita (PPP)": "3008",
            "GDP growth\r\n(annual %)": "3",
            "health expenditure (% of GDP)": "6.1",
            "health expenditure per person (int. $)": "193",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "10.8",
            "government spending": "71.4",
            "government expenditure (% of GDP)": "30.90",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-0.67",
            "government effectiveness": "-1.1",
            "regulatory quality": "-1.1",
            "rule of law": "-1.350",
            "control of corruption": "-1.33",
            "judicial effectiveness": "50.30",
            "government integrity": "38.20",
            "property rights": "46.80",
            "tax burden": "91.80",
            "overall economic freedom": "58.30",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "19.0"
        }, {
            indicator: "Tanzania",
            "ISO Country code": "TZA",
            population: "57000000",
            "surface area (km²)": "885800",
            "GINI index": "37.6",
            "happy planet index": "22.1",
            "human development index": "0.538",
            "world happiness report score": "3.35",
            SEDA: "36.00",
            "GDP\r\n(billions PPP)": "149.8",
            "GDP per capita (PPP)": "3080",
            "GDP growth\r\n(annual %)": "7",
            "health expenditure (% of GDP)": "3.8",
            "health expenditure per person (int. $)": "96",
            "education expenditure\r\n(% of GDP)": "3.5",
            "education expenditure per person ($)": "32",
            "school life expectancy (years)": "8",
            unemployment: "2.6",
            "government spending": "89.8",
            "government expenditure (% of GDP)": "18.50",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.58",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.6",
            "rule of law": "-0.450",
            "control of corruption": "-0.48",
            "judicial effectiveness": "34.70",
            "government integrity": "31.80",
            "property rights": "38.00",
            "tax burden": "79.80",
            "overall economic freedom": "59.90",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "36.4"
        }, {
            indicator: "Thailand",
            "ISO Country code": "THA",
            population: "69000000",
            "surface area (km²)": "510890",
            "GINI index": "44.5",
            "happy planet index": "37.3",
            "human development index": "0.755",
            "world happiness report score": "5.94",
            SEDA: "52.40",
            "GDP\r\n(billions PPP)": "1164.9",
            "GDP per capita (PPP)": "16888",
            "GDP growth\r\n(annual %)": "2.8",
            "health expenditure (% of GDP)": "3.1",
            "health expenditure per person (int. $)": "610",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "16",
            unemployment: "0.6",
            "government spending": "85.5",
            "government expenditure (% of GDP)": "22.00",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.76",
            "government effectiveness": "0.4",
            "regulatory quality": "0.1",
            "rule of law": "0.040",
            "control of corruption": "-0.39",
            "judicial effectiveness": "45.30",
            "government integrity": "34.70",
            "property rights": "48.60",
            "tax burden": "81.30",
            "overall economic freedom": "67.10",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "4.8"
        }, {
            indicator: "Timor-Leste",
            "ISO Country code": "TLS",
            population: "1200000",
            "surface area (km²)": "14874",
            "GINI index": "31.9",
            "happy planet index": "-",
            "human development index": "0.625",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "5.0",
            "GDP per capita (PPP)": "4187",
            "GDP growth\r\n(annual %)": "4.3",
            "health expenditure (% of GDP)": "3.1",
            "health expenditure per person (int. $)": "141",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "13",
            unemployment: "4",
            "government spending": "30.9",
            "government expenditure (% of GDP)": "48.00",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "0.03",
            "government effectiveness": "-1.0",
            "regulatory quality": "-0.7",
            "rule of law": "-1.170",
            "control of corruption": "-0.54",
            "judicial effectiveness": "13.80",
            "government integrity": "32.00",
            "property rights": "29.90",
            "tax burden": "97.40",
            "overall economic freedom": "48.10",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "32.3"
        }, {
            indicator: "Togo",
            "ISO Country code": "TGO",
            population: "8000000",
            "surface area (km²)": "54385",
            "GINI index": "46.0",
            "happy planet index": "13.2",
            "human development index": "0.503",
            "world happiness report score": "4.36",
            SEDA: "34.9",
            "GDP\r\n(billions PPP)": "11.6",
            "GDP per capita (PPP)": "1550",
            "GDP growth\r\n(annual %)": "5.3",
            "health expenditure (% of GDP)": "6.6",
            "health expenditure per person (int. $)": "96",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "30",
            "school life expectancy (years)": "12",
            unemployment: "6.8",
            "government spending": "73.3",
            "government expenditure (% of GDP)": "29.80",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.74",
            "government effectiveness": "-1.1",
            "regulatory quality": "-0.8",
            "rule of law": "-0.710",
            "control of corruption": "-0.71",
            "judicial effectiveness": "28.20",
            "government integrity": "31.40",
            "property rights": "32.70",
            "tax burden": "64.30",
            "overall economic freedom": "47.80",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "17.6"
        }, {
            indicator: "Tonga",
            "ISO Country code": "TON",
            population: "100000",
            "surface area (km²)": "717",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.726",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.6",
            "GDP per capita (PPP)": "5387",
            "GDP growth\r\n(annual %)": "2.6",
            "health expenditure (% of GDP)": "5.9",
            "health expenditure per person (int. $)": "324",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "4.9",
            "government spending": "68.7",
            "government expenditure (% of GDP)": "32.30",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.79",
            "government effectiveness": "-0.2",
            "regulatory quality": "-0.4",
            "rule of law": "0.310",
            "control of corruption": "-0.16",
            "judicial effectiveness": "25.40",
            "government integrity": "40.50",
            "property rights": "62.10",
            "tax burden": "85.40",
            "overall economic freedom": "63.10",
            "financial freedom": "20.00",
            "women MPs (% of all MPs)": "3.8"
        }, {
            indicator: "Trinidad and Tobago",
            "ISO Country code": "TTO",
            population: "1400000",
            "surface area (km²)": "5128",
            "GINI index": "-",
            "happy planet index": "15.7",
            "human development index": "0.784",
            "world happiness report score": "6.19",
            SEDA: "58.70",
            "GDP\r\n(billions PPP)": "43.6",
            "GDP per capita (PPP)": "31870",
            "GDP growth\r\n(annual %)": "-1.8",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "2204",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "3.9",
            "government spending": "54.4",
            "government expenditure (% of GDP)": "39.00",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.29",
            "government effectiveness": "0.3",
            "regulatory quality": "0.0",
            "rule of law": "-0.110",
            "control of corruption": "-0.36",
            "judicial effectiveness": "49.80",
            "government integrity": "33.10",
            "property rights": "54.90",
            "tax burden": "83.50",
            "overall economic freedom": "57.70",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "31.0"
        }, {
            indicator: "Tunisia",
            "ISO Country code": "TUN",
            population: "12000000",
            "surface area (km²)": "155360",
            "GINI index": "40.0",
            "happy planet index": "26.2",
            "human development index": "0.735",
            "world happiness report score": "4.12",
            SEDA: "49.30",
            "GDP\r\n(billions PPP)": "130.6",
            "GDP per capita (PPP)": "11634",
            "GDP growth\r\n(annual %)": "0.8",
            "health expenditure (% of GDP)": "6.7",
            "health expenditure per person (int. $)": "774",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "15",
            unemployment: "14.8",
            "government spending": "75.5",
            "government expenditure (% of GDP)": "28.60",
            "political rights score": "2",
            "civil liberties score": "3",
            "political stability & absence of violence": "-1.05",
            "government effectiveness": "-0.1",
            "regulatory quality": "-0.4",
            "rule of law": "0.070",
            "control of corruption": "-0.11",
            "judicial effectiveness": "41.70",
            "government integrity": "36.80",
            "property rights": "49.40",
            "tax burden": "73.00",
            "overall economic freedom": "58.90",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "31.3"
        }, {
            indicator: "Turkey",
            "ISO Country code": "TUR",
            population: "81000000",
            "surface area (km²)": "769632",
            "GINI index": "40.2",
            "happy planet index": "26.4",
            "human development index": "0.791",
            "world happiness report score": "5.61",
            SEDA: "53.30",
            "GDP\r\n(billions PPP)": "1988.3",
            "GDP per capita (PPP)": "24912",
            "GDP growth\r\n(annual %)": "3.8",
            "health expenditure (% of GDP)": "4.1",
            "health expenditure per person (int. $)": "996",
            "education expenditure\r\n(% of GDP)": "4.4",
            "education expenditure per person ($)": "530",
            "school life expectancy (years)": "16",
            unemployment: "10.3",
            "government spending": "68.1",
            "government expenditure (% of GDP)": "32.60",
            "political rights score": "5",
            "civil liberties score": "6",
            "political stability & absence of violence": "-1.8",
            "government effectiveness": "0.1",
            "regulatory quality": "0.0",
            "rule of law": "-0.250",
            "control of corruption": "-0.19",
            "judicial effectiveness": "54.50",
            "government integrity": "42.00",
            "property rights": "54.70",
            "tax burden": "74.70",
            "overall economic freedom": "65.40",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "14.6"
        }, {
            indicator: "Turkmenistan",
            "ISO Country code": "TKM",
            population: "6000000",
            "surface area (km²)": "469930",
            "GINI index": "40.8",
            "happy planet index": "14.6",
            "human development index": "0.706",
            "world happiness report score": "5.23",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "95.5",
            "GDP per capita (PPP)": "17485",
            "GDP growth\r\n(annual %)": "6.5",
            "health expenditure (% of GDP)": "6.3",
            "health expenditure per person (int. $)": "1004",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "11",
            unemployment: "8.6",
            "government spending": "92.2",
            "government expenditure (% of GDP)": "16.10",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.15",
            "government effectiveness": "-1.2",
            "regulatory quality": "-2.0",
            "rule of law": "-1.490",
            "control of corruption": "-1.48",
            "judicial effectiveness": "5.00",
            "government integrity": "27.30",
            "property rights": "29.80",
            "tax burden": "95.90",
            "overall economic freedom": "47.10",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "25.8"
        }, {
            indicator: "Tuvalu",
            "ISO Country code": "TUV",
            population: "11000",
            "surface area (km²)": "26",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "-",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "-",
            "GDP per capita (PPP)": "-",
            "GDP growth\r\n(annual %)": "-",
            "health expenditure (% of GDP)": "15.0",
            "health expenditure per person (int. $)": "523",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "-",
            "government spending": "-",
            "government expenditure (% of GDP)": "-",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.27",
            "government effectiveness": "-0.7",
            "regulatory quality": "-0.8",
            "rule of law": "0.560",
            "control of corruption": "0.06",
            "judicial effectiveness": "-",
            "government integrity": "-",
            "property rights": "-",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "6.7"
        }, {
            indicator: "Uganda",
            "ISO Country code": "UGA",
            population: "43000000",
            "surface area (km²)": "197100",
            "GINI index": "39.5",
            "happy planet index": "19.4",
            "human development index": "0.516",
            "world happiness report score": "4.00",
            SEDA: "30.90",
            "GDP\r\n(billions PPP)": "85.0",
            "GDP per capita (PPP)": "2068",
            "GDP growth\r\n(annual %)": "5",
            "health expenditure (% of GDP)": "7.3",
            "health expenditure per person (int. $)": "139",
            "education expenditure\r\n(% of GDP)": "2.3",
            "education expenditure per person ($)": "16",
            "school life expectancy (years)": "10",
            unemployment: "2.3",
            "government spending": "90.9",
            "government expenditure (% of GDP)": "17.40",
            "political rights score": "6",
            "civil liberties score": "4",
            "political stability & absence of violence": "-0.56",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.2",
            "rule of law": "-0.300",
            "control of corruption": "-1.04",
            "judicial effectiveness": "40.30",
            "government integrity": "28.30",
            "property rights": "43.50",
            "tax burden": "73.00",
            "overall economic freedom": "62.00",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "34.3"
        }, {
            indicator: "Ukraine",
            "ISO Country code": "UKR",
            population: "45000000",
            "surface area (km²)": "579330",
            "GINI index": "25.5",
            "happy planet index": "26.4",
            "human development index": "0.751",
            "world happiness report score": "4.31",
            SEDA: "52.50",
            "GDP\r\n(billions PPP)": "353.0",
            "GDP per capita (PPP)": "8305",
            "GDP growth\r\n(annual %)": "-9.9",
            "health expenditure (% of GDP)": "6.1",
            "health expenditure per person (int. $)": "469",
            "education expenditure\r\n(% of GDP)": "5.9",
            "education expenditure per person ($)": "173",
            "school life expectancy (years)": "15",
            unemployment: "8.9",
            "government spending": "45",
            "government expenditure (% of GDP)": "42.80",
            "political rights score": "3",
            "civil liberties score": "3",
            "political stability & absence of violence": "-1.89",
            "government effectiveness": "-0.5",
            "regulatory quality": "-0.3",
            "rule of law": "-0.710",
            "control of corruption": "-0.78",
            "judicial effectiveness": "29.50",
            "government integrity": "29.00",
            "property rights": "41.00",
            "tax burden": "80.20",
            "overall economic freedom": "51.90",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "12.3"
        }, {
            indicator: "United Arab Emirates",
            "ISO Country code": "ARE",
            population: "9000000",
            "surface area (km²)": "83600",
            "GINI index": "-",
            "happy planet index": "-",
            "human development index": "0.863",
            "world happiness report score": "7.04",
            SEDA: "70.40",
            "GDP\r\n(billions PPP)": "668.9",
            "GDP per capita (PPP)": "67871",
            "GDP growth\r\n(annual %)": "3.9",
            "health expenditure (% of GDP)": "3.5",
            "health expenditure per person (int. $)": "2426",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "3.7",
            "government spending": "70.9",
            "government expenditure (% of GDP)": "31.20",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "0.63",
            "government effectiveness": "1.4",
            "regulatory quality": "1.0",
            "rule of law": "0.800",
            "control of corruption": "1.13",
            "judicial effectiveness": "83.40",
            "government integrity": "77.30",
            "property rights": "76.30",
            "tax burden": "98.40",
            "overall economic freedom": "77.60",
            "financial freedom": "60.00",
            "women MPs (% of all MPs)": "22.5"
        }, {
            indicator: "United Kingdom",
            "ISO Country code": "GBR",
            population: "66000000",
            "surface area (km²)": "241930",
            "GINI index": "32.4",
            "happy planet index": "31.9",
            "human development index": "0.922",
            "world happiness report score": "7.10",
            SEDA: "74.60",
            "GDP\r\n(billions PPP)": "2785.6",
            "GDP per capita (PPP)": "42481",
            "GDP growth\r\n(annual %)": "2.2",
            "health expenditure (% of GDP)": "9.9",
            "health expenditure per person (int. $)": "4145",
            "education expenditure\r\n(% of GDP)": "5.7",
            "education expenditure per person ($)": "2664",
            "school life expectancy (years)": "18",
            unemployment: "4.8",
            "government spending": "44.4",
            "government expenditure (% of GDP)": "43.00",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.26",
            "government effectiveness": "1.4",
            "regulatory quality": "1.7",
            "rule of law": "1.680",
            "control of corruption": "1.84",
            "judicial effectiveness": "93.80",
            "government integrity": "79.00",
            "property rights": "92.20",
            "tax burden": "65.20",
            "overall economic freedom": "78.00",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "32.0"
        }, {
            indicator: "United States",
            "ISO Country code": "USA",
            population: "326000000",
            "surface area (km²)": "9147593",
            "GINI index": "45.0",
            "happy planet index": "20.7",
            "human development index": "0.924",
            "world happiness report score": "6.99",
            SEDA: "76.00",
            "GDP\r\n(billions PPP)": "18569.1",
            "GDP per capita (PPP)": "57436",
            "GDP growth\r\n(annual %)": "2.4",
            "health expenditure (% of GDP)": "16.8",
            "health expenditure per person (int. $)": "9536",
            "education expenditure\r\n(% of GDP)": "5.0",
            "education expenditure per person ($)": "2729",
            "school life expectancy (years)": "17",
            unemployment: "4.9",
            "government spending": "56.5",
            "government expenditure (% of GDP)": "38.10",
            "political rights score": "2",
            "civil liberties score": "1",
            "political stability & absence of violence": "0.3",
            "government effectiveness": "1.6",
            "regulatory quality": "1.6",
            "rule of law": "1.640",
            "control of corruption": "1.38",
            "judicial effectiveness": "76.90",
            "government integrity": "71.90",
            "property rights": "79.30",
            "tax burden": "65.10",
            "overall economic freedom": "75.70",
            "financial freedom": "80.00",
            "women MPs (% of all MPs)": "19.4"
        }, {
            indicator: "Uruguay",
            "ISO Country code": "URY",
            population: "3500000",
            "surface area (km²)": "175015",
            "GINI index": "41.6",
            "happy planet index": "36.1",
            "human development index": "0.804",
            "world happiness report score": "6.34",
            SEDA: "64.20",
            "GDP\r\n(billions PPP)": "74.9",
            "GDP per capita (PPP)": "21527",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "9.2",
            "health expenditure per person (int. $)": "1748",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "16",
            unemployment: "8.2",
            "government spending": "68.6",
            "government expenditure (% of GDP)": "32.40",
            "political rights score": "1",
            "civil liberties score": "1",
            "political stability & absence of violence": "1.06",
            "government effectiveness": "0.4",
            "regulatory quality": "0.7",
            "rule of law": "0.590",
            "control of corruption": "1.29",
            "judicial effectiveness": "67.00",
            "government integrity": "71.60",
            "property rights": "69.30",
            "tax burden": "78.00",
            "overall economic freedom": "69.20",
            "financial freedom": "30.00",
            "women MPs (% of all MPs)": "20.2"
        }, {
            indicator: "Uzbekistan",
            "ISO Country code": "UZB",
            population: "32000000",
            "surface area (km²)": "425400",
            "GINI index": "36.8",
            "happy planet index": "29.1",
            "human development index": "0.710",
            "world happiness report score": "6.42",
            SEDA: "43.10",
            "GDP\r\n(billions PPP)": "205.7",
            "GDP per capita (PPP)": "6563",
            "GDP growth\r\n(annual %)": "8",
            "health expenditure (% of GDP)": "6.2",
            "health expenditure per person (int. $)": "383",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "12",
            unemployment: "8.9",
            "government spending": "65.5",
            "government expenditure (% of GDP)": "33.90",
            "political rights score": "7",
            "civil liberties score": "7",
            "political stability & absence of violence": "-0.28",
            "government effectiveness": "-0.6",
            "regulatory quality": "-1.3",
            "rule of law": "-1.110",
            "control of corruption": "-1.16",
            "judicial effectiveness": "35.30",
            "government integrity": "24.20",
            "property rights": "48.70",
            "tax burden": "91.00",
            "overall economic freedom": "51.50",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "16.0"
        }, {
            indicator: "Vanuatu",
            "ISO Country code": "VUT",
            population: "300000",
            "surface area (km²)": "12189",
            "GINI index": "-",
            "happy planet index": "40.6",
            "human development index": "0.603",
            "world happiness report score": "-",
            SEDA: "-",
            "GDP\r\n(billions PPP)": "0.7",
            "GDP per capita (PPP)": "2631",
            "GDP growth\r\n(annual %)": "-0.8",
            "health expenditure (% of GDP)": "3.5",
            "health expenditure per person (int. $)": "106",
            "education expenditure\r\n(% of GDP)": "4.9",
            "education expenditure per person ($)": "3",
            "school life expectancy (years)": "-",
            unemployment: "5.4",
            "government spending": "78.5",
            "government expenditure (% of GDP)": "26.80",
            "political rights score": "2",
            "civil liberties score": "2",
            "political stability & absence of violence": "0.71",
            "government effectiveness": "-0.9",
            "regulatory quality": "-0.3",
            "rule of law": "0.490",
            "control of corruption": "0.01",
            "judicial effectiveness": "47.10",
            "government integrity": "75.40",
            "property rights": "67.90",
            "tax burden": "97.00",
            "overall economic freedom": "69.50",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "0.0"
        }, {
            indicator: "Venezuela",
            "ISO Country code": "VEN",
            population: "32000000",
            "surface area (km²)": "882050",
            "GINI index": "39.0",
            "happy planet index": "33.6",
            "human development index": "0.761",
            "world happiness report score": "-",
            SEDA: "43.10",
            "GDP\r\n(billions PPP)": "427.0",
            "GDP per capita (PPP)": "13761",
            "GDP growth\r\n(annual %)": "-5.7",
            "health expenditure (% of GDP)": "3.2",
            "health expenditure per person (int. $)": "579",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "14",
            unemployment: "6.9",
            "government spending": "57.3",
            "government expenditure (% of GDP)": "37.70",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-1.18",
            "government effectiveness": "-1.4",
            "regulatory quality": "-2.0",
            "rule of law": "-2.260",
            "control of corruption": "-1.36",
            "judicial effectiveness": "13.80",
            "government integrity": "7.50",
            "property rights": "5.20",
            "tax burden": "72.50",
            "overall economic freedom": "25.20",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "22.2"
        }, {
            indicator: "Vietnam",
            "ISO Country code": "VNM",
            population: "96000000",
            "surface area (km²)": "310070",
            "GINI index": "34.8",
            "happy planet index": "40.3",
            "human development index": "0.694",
            "world happiness report score": "5.18",
            SEDA: "50.80",
            "GDP\r\n(billions PPP)": "595.5",
            "GDP per capita (PPP)": "6429",
            "GDP growth\r\n(annual %)": "6.7",
            "health expenditure (% of GDP)": "5.7",
            "health expenditure per person (int. $)": "334",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "2.2",
            "government spending": "74",
            "government expenditure (% of GDP)": "29.40",
            "political rights score": "7",
            "civil liberties score": "5",
            "political stability & absence of violence": "0.31",
            "government effectiveness": "0.0",
            "regulatory quality": "-0.4",
            "rule of law": "0.070",
            "control of corruption": "-0.58",
            "judicial effectiveness": "36.30",
            "government integrity": "30.40",
            "property rights": "46.40",
            "tax burden": "79.70",
            "overall economic freedom": "53.10",
            "financial freedom": "40.00",
            "women MPs (% of all MPs)": "26.7"
        }, {
            indicator: "Yemen",
            "ISO Country code": "YEM",
            population: "28000000",
            "surface area (km²)": "527968",
            "GINI index": "37.9",
            "happy planet index": "22.8",
            "human development index": "0.452",
            "world happiness report score": "3.25",
            SEDA: "23.90",
            "GDP\r\n(billions PPP)": "69.2",
            "GDP per capita (PPP)": "2375",
            "GDP growth\r\n(annual %)": "-28.1",
            "health expenditure (% of GDP)": "6.0",
            "health expenditure per person (int. $)": "144",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "17.1",
            "government spending": "80.9",
            "government expenditure (% of GDP)": "25.20",
            "political rights score": "7",
            "civil liberties score": "6",
            "political stability & absence of violence": "-2.96",
            "government effectiveness": "-1.9",
            "regulatory quality": "-1.5",
            "rule of law": "-1.750",
            "control of corruption": "-1.59",
            "judicial effectiveness": "16.60",
            "government integrity": "21.20",
            "property rights": "17.90",
            "tax burden": "-",
            "overall economic freedom": "-",
            "financial freedom": "-",
            "women MPs (% of all MPs)": "0.0"
        }, {
            indicator: "Zambia",
            "ISO Country code": "ZMB",
            population: "17000000",
            "surface area (km²)": "743398",
            "GINI index": "57.5",
            "happy planet index": "25.2",
            "human development index": "0.588",
            "world happiness report score": "3.93",
            SEDA: "33.20",
            "GDP\r\n(billions PPP)": "64.9",
            "GDP per capita (PPP)": "3880",
            "GDP growth\r\n(annual %)": "3.6",
            "health expenditure (% of GDP)": "5.4",
            "health expenditure per person (int. $)": "203",
            "education expenditure\r\n(% of GDP)": "-",
            "education expenditure per person ($)": "-",
            "school life expectancy (years)": "-",
            unemployment: "7.5",
            "government spending": "80.2",
            "government expenditure (% of GDP)": "25.70",
            "political rights score": "4",
            "civil liberties score": "4",
            "political stability & absence of violence": "0.11",
            "government effectiveness": "-0.6",
            "regulatory quality": "-0.5",
            "rule of law": "-0.330",
            "control of corruption": "-0.54",
            "judicial effectiveness": "40.60",
            "government integrity": "36.30",
            "property rights": "46.00",
            "tax burden": "72.10",
            "overall economic freedom": "54.30",
            "financial freedom": "50.00",
            "women MPs (% of all MPs)": "18.0"
        }, {
            indicator: "Zimbabwe",
            "ISO Country code": "ZWE",
            population: "17000000",
            "surface area (km²)": "386847",
            "GINI index": "43.2",
            "happy planet index": "22.1",
            "human development index": "0.535",
            "world happiness report score": "3.64",
            SEDA: "29.70",
            "GDP\r\n(billions PPP)": "28.6",
            "GDP per capita (PPP)": "1970",
            "GDP growth\r\n(annual %)": "1.5",
            "health expenditure (% of GDP)": "10.3",
            "health expenditure per person (int. $)": "182",
            "education expenditure\r\n(% of GDP)": "7.5",
            "education expenditure per person ($)": "78",
            "school life expectancy (years)": "10",
            unemployment: "5.1",
            "government spending": "72",
            "government expenditure (% of GDP)": "30.60",
            "political rights score": "6",
            "civil liberties score": "5",
            "political stability & absence of violence": "-0.77",
            "government effectiveness": "-1.2",
            "regulatory quality": "-1.6",
            "rule of law": "-1.380",
            "control of corruption": "-1.27",
            "judicial effectiveness": "33.00",
            "government integrity": "18.90",
            "property rights": "27.60",
            "tax burden": "61.10",
            "overall economic freedom": "44.00",
            "financial freedom": "10.00",
            "women MPs (% of all MPs)": "32.6"
        }],
        ov = Rn(function (e) {
            var n, t = t || {
                REVISION: "0.2"
            };
            ! function (e) {
                var P = function (e, n) {
                        if (!e) throw n || "Assertion failed"
                    },
                    n = function (e, n, t) {
                        return e.hasOwnProperty(n) ? e[n] : t
                    },
                    o = !1,
                    a = 0,
                    c = function (e, n) {
                        return e + function e() {
                            if (o) return o = !1, a;
                            var n = 2 * Math.random() - 1,
                                t = 2 * Math.random() - 1,
                                r = n * n + t * t;
                            if (0 == r || 1 < r) return e();
                            var i = Math.sqrt(-2 * Math.log(r) / r);
                            return a = t * i, o = !0, n * i
                        }() * n
                    },
                    t = function (e, n, t) {
                        for (var r = void 0 !== t, i = [], o = 0; o < e; o++) {
                            for (var a = [], l = 0; l < n; l++) r ? a.push(t) : a.push(c(0, tsne.std));
                            i.push(a)
                        }
                        return i
                    },
                    l = function (e, n) {
                        for (var t = e.length, r = 0, i = 0; i < t; i++) {
                            var o = e[i],
                                a = n[i];
                            r += (o - a) * (o - a)
                        }
                        return r
                    },
                    s = function (e, n) {
                        for (var t = e.length, r = 0, i = 0; i < t; i++) r += Math.abs(e[i] - n[i]);
                        return r
                    },
                    u = function (e, n, t) {
                        var r = Math.sqrt(e.length),
                            i = Math.floor(r);
                        P(i === r, "D should have square number of elements."), tsne.Htarget = Math.log(n);
                        for (var o = new Float64Array(i * i), a = new Float64Array(i), l = 0; l < i; l++) {
                            for (var c = -1 / 0, s = 1 / 0, u = 1, p = !1, d = 0; !p;) {
                                for (var f = 0, h = 0; h < i; h++) {
                                    var y = Math.exp(-e[l * i + h] * u);
                                    l === h && (y = 0), f += a[h] = y
                                }
                                var m = 0;
                                for (h = 0; h < i; h++) {
                                    if (0 === f) y = 0;
                                    else y = a[h] / f;
                                    1e-7 < (a[h] = y) && (m -= y * Math.log(y))
                                }
                                m > tsne.Htarget ? (c = u, s === 1 / 0 ? u *= 2 : u = (u + s) / 2) : (s = u, c === -1 / 0 ? u /= 2 : u = (u + c) / 2), d++, Math.abs(m - tsne.Htarget) < t && (p = !0), 50 <= d && (p = !0)
                            }
                            for (h = 0; h < i; h++) o[l * i + h] = a[h]
                        }
                        var g = new Float64Array(i * i),
                            v = 2 * i;
                        for (l = 0; l < i; l++)
                            for (h = 0; h < i; h++) g[l * i + h] = Math.max((o[l * i + h] + o[h * i + l]) / v, 1e-100);
                        return g
                    };

                function d(e) {
                    return 0 < e ? 1 : e < 0 ? -1 : 0
                }
                var r = function (e) {
                    e = e || {};
                    this.prev_cost = 1e6, this.stopCond = 2e-6, this.perplexity = n(e, "perplexity", 30), this.dim = n(e, "dim", 2), this.epsilon = n(e, "epsilon", 10), this.iter = 0, this.STOP = !1, this.std = n(e, "spread", 1e-4), this.measure = n(e, "measure", "manhattan"), this.initial = n(e, "initial", "random")
                };
                r.prototype = {
                    animate: function (e) {
                        var r = this;
                        this.draw = e, d3.timer(function () {
                            var e = "N-Body" == d3.select("body").datum().physics;
                            r.step(), r.draw();
                            var n = tsne.getCost(),
                                t = tsne.prev_cost - n;
                            return tsne.prev_cost = n, !e || r.STOP || 0 < t && t < r.stopCond
                        })
                    },
                    check: function () {
                        console.log({
                            step: this.iter,
                            cost: this.getCost()
                        })
                    },
                    costGrad: function (e) {
                        for (var n = this.N, t = this.dim, r = this.P, i = (this.iter, new Float64Array(n * n)), o = 0, a = 0; a < n; a++)
                            for (var l = a + 1; l < n; l++) {
                                for (var c = 0, s = 0; s < t; s++) {
                                    var u = e[a][s] - e[l][s];
                                    c += u * u
                                }
                                var p = 1 / (1 + c);
                                i[a * n + l] = p, o += 2 * (i[l * n + a] = p)
                            }
                        for (var d = n * n, f = new Float64Array(d), h = 0; h < d; h++) f[h] = Math.max(i[h] / o, 1e-100);
                        var y = 0,
                            m = [];
                        for (a = 0; a < n; a++) {
                            var g = new Array(t);
                            for (s = 0; s < t; s++) g[s] = 0;
                            for (l = 0; l < n; l++) {
                                y += -r[a * n + l] * Math.log(f[a * n + l]);
                                var v = 4 * (1 * r[a * n + l] - f[a * n + l]) * i[a * n + l];
                                for (s = 0; s < t; s++) g[s] += v * (e[a][s] - e[l][s])
                            }
                            m.push(g)
                        }
                        return {
                            cost: y,
                            grad: m
                        }
                    },
                    debugGrad: function () {
                        for (var e = this.N, n = this.costGrad(this.Y), t = (n.cost, n.grad), r = 0; r < e; r++)
                            for (var i = 0; i < this.dim; i++) {
                                var o = this.Y[r][i];
                                this.Y[r][i] = o + 1e-5;
                                var a = this.costGrad(this.Y);
                                this.Y[r][i] = o - 1e-5;
                                var l = this.costGrad(this.Y),
                                    c = t[r][i],
                                    s = (a.cost - l.cost) / 2e-5;
                                console.log(r + "," + i + ": gradcheck analytic: " + c + " vs. numerical: " + s), this.Y[r][i] = o
                            }
                    },
                    getCost: function () {
                        return this.costGrad(this.Y).cost
                    },
                    getGrad: function () {
                        return this.costGrad(this.Y).grad
                    },
                    getSolution: function () {
                        return this.Y
                    },
                    initDataRaw: function (e, n) {
                        var t = e,
                            r = t.length,
                            i = t[0].length;
                        P(0 < r, " X is empty? You must have some data!"), P(0 < i, " X[0] is empty? Where is the data?");
                        var o = function (e) {
                            for (var n = e.length, t = new Float64Array(n * n), r = 0; r < n; r++)
                                for (var i = r + 1; i < n; i++) {
                                    if ("euclidean" == tsne.measure) var o = l(e[r], e[i]);
                                    else "cityblock" == tsne.measure && (o = s(e[r], e[i]));
                                    t[r * n + i] = o, t[i * n + r] = o
                                }
                            return t
                        }(t);
                        this.P = u(o, this.perplexity, 1e-4), this.N = r, this.initSolution(n)
                    },
                    initDataDist: function (e) {
                        var n = e.length;
                        P(0 < n, " X is empty? You must have some data!");
                        for (var t = new Float64Array(n * n), r = 0; r < n; r++)
                            for (var i = r + 1; i < n; i++) {
                                var o = e[r][i];
                                t[r * n + i] = o, t[i * n + r] = o
                            }
                        this.P = u(t, this.perplexity, 1e-4), this.N = n, this.initSolution()
                    },
                    initSolution: function (e) {
                        "random" == this.initial ? this.Y = t(this.N, this.dim) : this.Y = e, this.gains = t(this.N, this.dim, 1), this.ystep = t(this.N, this.dim, 0), this.iter = 0
                    },
                    initCurrent: function () {},
                    nudge: function () {
                        this.stop(), this.Y.forEach(function (e) {
                            e[0] += c(0, .25), e[1] += c(0, .25)
                        }), this.restart()
                    },
                    restart: function () {
                        var r = this;
                        r.STOP = !1, d3.timer(function () {
                            var e = "N-Body" == d3.select("body").datum().physics;
                            r.step(), r.draw();
                            var n = tsne.getCost(),
                                t = tsne.prev_cost - n;
                            return tsne.prev_cost = n, !e || r.STOP || 0 < t && t < r.stopCond
                        })
                    },
                    step: function () {
                        this.iter += 1;
                        for (var e = this.N, n = this.costGrad(this.Y), t = n.cost, r = n.grad, i = new Float64Array(this.dim), o = 0; o < e; o++)
                            for (var a = 0; a < this.dim; a++) {
                                var l = r[o][a],
                                    c = this.ystep[o][a],
                                    s = this.gains[o][a],
                                    u = d(l) === d(c) ? .8 * s : s + .2;
                                u < .01 && (u = .01), this.gains[o][a] = u;
                                var p = (this.iter < 250 ? .5 : .8) * c - this.epsilon * u * r[o][a];
                                this.ystep[o][a] = p, this.Y[o][a] += p, i[a] += this.Y[o][a]
                            }
                        for (o = 0; o < e; o++)
                            for (a = 0; a < this.dim; a++) this.Y[o][a] -= i[a] / e;
                        return t
                    },
                    stop: function () {
                        this.STOP = !0
                    }
                }, e.tSNE = r
            }(t), n = t, e.exports = n
        });

    function av(e) {
        if (e[0].fv) return function (e) {
            for (var n = e[0].fv.length, t = [], r = [], i = 0; i < n; i++) t[i] = xe(e, lv.bind(null, i)), r[i] = Me(e, lv.bind(null, i));
            return e.map(function (e) {
                return e.fv.map(function (e, n) {
                    return t[n] ? (e - r[n]) / t[n] : 0
                })
            })
        }(e);
        console.log("Cant find a fv object inside node")
    }

    function lv(e, n) {
        return n.fv[e]
    }
    var cv = function () {
        function r(e, n) {
            for (var t = 0; t < n.length; t++) {
                var r = n[t];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }
        return function (e, n, t) {
            return n && r(e.prototype, n), t && r(e, t), e
        }
    }();
    var sv = null,
        uv = function () {
            function t(e) {
                var a = this;
                ! function (e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, t), this.element = e, this.container = U(e), this.container.on("click", function () {
                    clearTimeout(sv), sv = setTimeout(function () {
                        window.location.reload(!1)
                    }, 3e5)
                }), this.svg = this.container.append("svg"), this.welcomeScreenBox = this.container.append("div"), this.welcomeScreen = new Bg(this.welcomeScreenBox), this.reset = this.container.append("div").attr("class", rv).on("click", function () {
                    window.location.reload(!1)
                }).classed("hidden", !0), this.reset.append("div").text("Start Over");
                var n = this.container.style("visibility");
                this.container.style("visibility", "visible"), "hidden" === n ? this.welcomeScreen.setupMobile() : (this.welcomeScreen.setupNormal().setActions({
                    run: function () {
                        a._updateTsneData(), a._updateTsne({}), a.guideScreen.setupStepBox(), a.legend.legend.classed("hidden", !1), a.scatter.removeMap(), a.scatter.zoomOutABit(), setTimeout(function () {
                            a.scatter.showText(), a.guideScreen.currentStep += 1, a.guideScreen.update()
                        }, 4e3)
                    }
                }), this.guideScreenBox = this.container.append("div"), this.guideScreen = new Iy(this.guideScreenBox), this.guideScreen.setActions({
                    reset: function () {
                        return a.resetSettings()
                    },
                    story1: function () {
                        a.controlPanel.menuButton.classed("hidden", !1), a.reset.classed("hidden", !1), setTimeout(function () {
                            a.timer.stop()
                        }, 1e4)
                    },
                    story2: function () {},
                    story3: function () {
                        a.scatter.showDevelopedCountries()
                    },
                    story4: function () {
                        a.scatter.showBiggestCountries()
                    },
                    story5: function () {
                        a.scatter.showSingaporeBrunei()
                    },
                    story6: function () {
                        a.scatter.showRussiaBrazil()
                    },
                    story7: function () {
                        a.scatter.zoomOut(5e3), a.scatter.setActiveCountriesRussiaBrazil(), a.controlPanel.update(!0), setTimeout(function () {
                            ["population", "surface area (km²)"].forEach(function (e) {
                                var n = aa(a.features, ["key", e]);
                                n.checked = n.checkbox.check(!1)
                            }), a._updateTsneData(), a._updateTsne({})
                        }, 1e3)
                    },
                    story8: function () {
                        a.scatter.showUSA()
                    },
                    story9: function () {
                        setTimeout(function () {
                            var o = 0;
                            a.tempTimer = ue(function () {
                                var e = a.solution[a.usId],
                                    n = e,
                                    t = a.solution[a.inidaId],
                                    r = t[0] - n[0],
                                    i = t[1] - n[1];
                                e[0] = n[0] + .01 * r, e[1] = n[1] + .01 * i, 150 < (o += 1) && a.tempTimer.stop()
                            }, 250)
                        }, 1e3), ["population", "surface area (km²)"].forEach(function (e) {
                            var n = aa(a.features, ["key", e]);
                            n.checked = n.checkbox.check(!1)
                        }), a.controlPanel.scrollToHealthExpenditure(["health expenditure per person (int. $)", "health expenditure (% of GDP)"])
                    },
                    story10: function () {
                        a.tempTimer.stop(), a.scatter.zoomOut(5e3), a.scatter.useSpy = !1, a.resetCountry(), a.controlPanel.update(!1);
                        var e = U(".awesomplete > input").node();
                        e && (e.value = "", e.focus(), setTimeout(function () {
                            a.legend.searchBar.showSuggestions()
                        }, 500))
                    }
                }), this.scatter = new fh(this.svg), this.contolPanelContainer = this.container.append("div"), this.controlPanel = new oy(this.contolPanelContainer, function () {
                    return a._updateTsne()
                }), this.controlPanel.setResetAction({
                    resetCountry: function () {
                        return a.resetCountry()
                    },
                    resetSettings: function () {
                        return a.resetSettings()
                    }
                }), this.legendContainer = this.container.append("div"), this.legend = new Lg(this.legendContainer, function (e) {
                    a._updateTsne(e)
                }), this.legend.legend.classed("hidden", !0), this.actions = {
                    onPointClick: function (e, n) {
                        a.currentId = n, a.openControlPanel(e)
                    },
                    onSvgClick: function () {
                        a.controlPanel.setupMode(!1), a.controlPanel.panelTitle.text("t-SNE Controls")
                    }
                }, this.scatter.setActions(this.actions), this.tsneOptions = {
                    epsilon: 5,
                    perplexity: 4,
                    dim: 2,
                    measure: "euclidean",
                    initial: ""
                }, this.setData(iv), U(window).on("resize.chart_" + function () {
                    function e() {
                        return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
                    }
                    return "" + e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
                }(), function () {
                    a.scatter.updatePosition().render(), a.guideScreen.update(), a.legend.update()
                }))
            }
            return cv(t, [{
                key: "_updateTsne",
                value: function (e) {
                    var n = this.data;
                    this.tsneOptions = li(this.tsneOptions, e), this.tsne = new ov.tSNE(this.tsneOptions), window.tsne = this.tsne;
                    var t = this.solution || n.map(function (e) {
                        return [0, 0]
                    });
                    t.forEach(function (e) {
                        e[0] += 3 * (Math.random() - .5), e[1] += 3 * (Math.random() - .5)
                    }), this.tsne.initDataRaw(this.tsneInitData, t), this._startTimer()
                }
            }, {
                key: "_updateTsneData",
                value: function (o) {
                    var e = this.data,
                        n = this.features,
                        a = this.prepedData,
                        l = n.filter(function (e) {
                            return e.checked
                        }),
                        c = {
                            features: l.map(function (e) {
                                return e.key
                            }),
                            data: []
                        };
                    yi(e, function (e, n) {
                        var t, r, i;
                        o && n === o.countryId && (a[n][o.key] = +o.value), c.data.push({
                            name: e["ISO Country code"],
                            fv: (t = a[n], r = l.map(function (e) {
                                return e.key
                            }), i = [], yi(r, function (e) {
                                i.push(t[e])
                            }), i)
                        })
                    });
                    var t = c.data.map(function (e) {
                        return {
                            fv: e.fv
                        }
                    });
                    this.tsneInitData = av(t)
                }
            }, {
                key: "setData",
                value: function (e) {
                    var i = this,
                        n = this.scatter,
                        r = e.filter(function (e) {
                            return -1 === Li(ff, e.indicator)
                        });
                    this.usId = oa(r, function (e) {
                        return "United States" === e.indicator
                    }), this.inidaId = oa(r, function (e) {
                        return "India" === e.indicator
                    }), this.chinaId = oa(r, function (e) {
                        return "China" === e.indicator
                    }), this.data = r;
                    var t = pi(r[0]);
                    this.features = t.filter(function (e) {
                        return "indicator" !== e && "ISO Country code" !== e
                    }).map(function (n, e) {
                        var t = r.map(function (e) {
                            return +e[n]
                        }).filter(function (e) {
                            return gi(e)
                        }).length;
                        return {
                            key: n,
                            isSuitable: t < .2 * r.length && -1 === Li(vf, n),
                            extent: be(r.map(function (e) {
                                return +e[n]
                            }))
                        }
                    }), this.features.forEach(function (e) {
                        return e.checked = e.isSuitable
                    });
                    var o = {};
                    yi(this.features, function (n) {
                        o[n.key] = Me(r.map(function (e) {
                            return +e[n.key]
                        }))
                    }), this.prepedData = r.map(function (t) {
                        var r = {};
                        return yi(i.features, function (e) {
                            var n = +t[e.key];
                            gi(n) ? r[e.key] = o[e.key] : r[e.key] = n
                        }), r
                    }), this.defaultPrepedData = Ta(this.prepedData), n.setData(r, this.features).setRadius(pf).setColor(df, t.indexOf(df)).render(), this.legend.update(), this.legend.sendRadiusScale(this.scatter.rScale, pf, t), this.geopos = this.scatter.setGeoPosition(this.data), this.scatter.zoomTo("Greece", 1.8, 28e3, !0), this.legend.setupRadiusDropdown({
                        options: t.filter(function (e) {
                            return "indicator" !== e && "ISO Country code" !== e
                        }),
                        selected: pf,
                        actions: function (e) {
                            n.setRadius(e).setNodeValue({
                                countryId: i.currentId,
                                key: e,
                                value: i.controlPanel.countrySliders[e].getValue()
                            }), i.legend.sendRadiusScale(i.scatter.rScale, e, t)
                        }
                    }), this.legend.setupColorDropdown({
                        options: t.filter(function (e) {
                            return "ISO Country code" !== e
                        }),
                        selected: df,
                        actions: function (e) {
                            n.setColor(e, t.indexOf(e)).setNodeValue({
                                countryId: i.currentId,
                                key: e,
                                value: "indicator" === e ? "indicator" : i.controlPanel.countrySliders[e].getValue()
                            }), i.legend.sendColorScale(e, i.scatter.colorScale, t)
                        }
                    }), yi(this.features, function (n) {
                        n.checkbox = i.controlPanel.setupCheckbox({
                            checked: n.isSuitable,
                            title: n.key,
                            action: function (e) {
                                n.checked = e, i._updateTsneData(), i._updateTsne({})
                            }
                        }), i.controlPanel.createCountryPanel({
                            formatter: qf(n.key, t),
                            feature: n,
                            title: n.key,
                            allKeys: t,
                            action: function (e) {
                                i.scatter.setNodeValue({
                                    countryId: i.currentId,
                                    key: n.key,
                                    value: e
                                }), i._updateTsneData({
                                    countryId: i.currentId,
                                    value: e,
                                    key: n.key
                                }), i._updateTsne({})
                            }
                        })
                    }), this.defaultFeatures = Ta(this.features), this.legend.searchBar.setData({
                        placeholder: Cy.searchPlaceholder,
                        list: r.map(function (e) {
                            return e.indicator
                        })
                    }).setActions({
                        complete: function (e) {
                            i.timer.stop(), i.controlPanel.setupMode(!0);
                            i.scatter.zoomTo(e);
                            i.currentId = oa(i.data, ["indicator", e]), i.controlPanel.panelTitle.text(e), i.openControlPanel({
                                indicator: e
                            })
                        }
                    })
                }
            }, {
                key: "openControlPanel",
                value: function (n) {
                    var t = this;
                    yi(this.features, function (e) {
                        t.controlPanel.panelTitle.text(n.indicator), t.controlPanel.setupMode(!0), t.controlPanel.countrySliders[e.key].updateTick(t.defaultPrepedData[t.currentId][e.key], gi(+t.data[t.currentId][e.key])).updateValue(t.prepedData[t.currentId][e.key]).updateVisibility(e.checked)
                    }), this.controlPanel.isOpen || (this.controlPanel.isOpen = !0, this.controlPanel.el.classed("hidden", !1), this.controlPanel.menuButton.classed("close", !0))
                }
            }, {
                key: "resetSettings",
                value: function () {
                    var t = this;
                    this.features.forEach(function (e, n) {
                        e.checked = e.checkbox.check(t.defaultFeatures[n].checked), t.controlPanel.countrySliders[e.key].updateVisibility(e.checked)
                    }), this._updateTsneData(), this._updateTsne({
                        perplexity: 4
                    })
                }
            }, {
                key: "resetCountry",
                value: function () {
                    var t = this;
                    this.prepedData[this.currentId] = Ta(this.defaultPrepedData[this.currentId]), this.features.forEach(function (e) {
                        var n = t.prepedData[t.currentId][e.key];
                        t.controlPanel.countrySliders[e.key].updateValue(n), t.controlPanel.countrySliders[e.key].updateVisibility(e.checked)
                    }), this.scatter.setNodeValue({
                        countryId: this.currentId,
                        key: this.scatter.radiusParam,
                        value: this.prepedData[this.currentId][this.scatter.radiusParam]
                    }), this._updateTsneData(), this._updateTsne({})
                }
            }, {
                key: "_startTimer",
                value: function () {
                    var n = this,
                        t = this.tsne;
                    this.timer && this.timer.stop(), this.timer = ue(function () {
                        for (var e = 0; e < 10; e++) t.step();
                        n.solution = t.getSolution(), n.scatter.updatePosition(n.solution)
                    }, 150)
                }
            }, {
                key: "setLogo",
                value: function (e) {
                    var n = this;
                    this.aboutBox = this.container.append("div"), this.about = new Qg(this.aboutBox), U(e).on("click", function () {
                        n.about.show()
                    })
                }
            }, {
                key: "setFont",
                value: function (e) {
                    this.svg.style("font-family", e), this.about.setFont(e)
                }
            }]), t
        }();
    e.Core = uv, Object.defineProperty(e, "__esModule", {
        value: !0
    })
});